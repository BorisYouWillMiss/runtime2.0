<?xml version="1.0" encoding="utf-8"?>
<Type>
  <Information>
    <Name>scheduler</Name>
    <DisplayName>#Lang(001)</DisplayName>
    <Description>#Lang(002)</Description>
    <ClassName>VDOM_scheduler</ClassName>
    <ID>64d09544-7b17-4920-b68a-79a1c9df62d5</ID>
    <Icon>#Res(a0955637-e4dd-4cd1-933b-540c46acf37f)</Icon>
    <EditorIcon>#Res(1c731386-bbca-407d-a99b-63414183e22b)</EditorIcon>
    <StructureIcon>#Res(f46c4232-c554-48b2-a330-9b3cb0cc7ba7)</StructureIcon>
    <Moveable>1</Moveable>
    <Resizable>3</Resizable>
    <Container>1</Container>
    <Category>Additional</Category>
    <Dynamic>1</Dynamic>
    <Version>1</Version>
    <InterfaceType>1</InterfaceType>
    <OptimizationPriority>1</OptimizationPriority>
    <Containers>htmlcontainer, dialog, container, flexcontainer</Containers>
    <Languages>en_US, ru_RU, fr_FR</Languages>
    <Handlers/>
    <RemoteMethods/>
    <WCAG/>
    <XMLScriptName/>
  </Information>
  <Attributes>
    <Attribute>
      <Name>hierarchy</Name>
      <DisplayName>#Lang(014)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(000)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(2)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d+$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>visible</Name>
      <DisplayName>#Lang(020)</DisplayName>
      <DefaultValue>1</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(000)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(011)|1)|(#Lang(012)|0))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>^[01]$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>positioning1</Name>
      <DisplayName>#Lang(021)</DisplayName>
      <DefaultValue>absolute</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(000)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>DropDown((#Lang(122)|absolute)|(#Lang(123)|static)|(#Lang(124)|relative))</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>zindex</Name>
      <DisplayName>#Lang(015)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(000)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(2)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,2}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>top</Name>
      <DisplayName>#Lang(016)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(000)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>^auto$|\d{0,4}|^$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>left</Name>
      <DisplayName>#Lang(017)</DisplayName>
      <DefaultValue>0</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(000)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>^auto$|\d{0,4}|^$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>width</Name>
      <DisplayName>#Lang(018)</DisplayName>
      <DefaultValue>300</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(000)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>height</Name>
      <DisplayName>#Lang(019)</DisplayName>
      <DefaultValue>200</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(000)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(4)</CodeInterface>
      <Colorgroup>1</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>cssclass</Name>
      <DisplayName>#Lang(013)</DisplayName>
      <DefaultValue/>
      <Visible>1</Visible>
      <Help>#Lang(000)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(100)</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>data</Name>
      <DisplayName>#Lang(029)</DisplayName>
      <DefaultValue>
        {"data":[{"redactor":"1","start_date":"2017-03-02","end_date":"2017-03-23","text":"A-12","id":"1"},{"redactor":"2","start_date":"2017-03-07","end_date":"2017-03-21","text":"A-45","id":"2"},{"redactor":"3","start_date":"2017-03-06","end_date":"2017-03-14","text":"A-58","id":"3"},{"redactor":"4","start_date":"2017-03-04","end_date":"2017-03-18","text":"A-28","id":"4"}],"collections":{"redactors":[{"key":"1","full_name":"Marie-Sophie","label":"Marie-Sophie DE SAIRGINE","number":"0678 22 14 56","description":"Programmer","employment_type":"Freelance","end_time":"2020-10-01"},{"key":"2","full_name":"Nicolas KORBOULEWSKY","label":"Nicolas KORBOULEWSKY","number":"0678 22 14 56","description":"Programmer","employment_type":"Permament","end_time":"2020-10-02"},{"key":"3","full_name":"Marie","label":"Marie-Sophie","number":"0678 22 14 56","description":"Programmer","employment_type":"Permament","end_time":"2020-10-03"}]}}
      </DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(000)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine()</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>startdate</Name>
      <DisplayName>#Lang(030)</DisplayName>
      <DefaultValue>2017-03-01</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(032)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(100)</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>enddate</Name>
      <DisplayName>#Lang(031)</DisplayName>
      <DefaultValue>2017-03-30</DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(032)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>TextField(100)</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>schedulerconfig</Name>
      <DisplayName>#Lang(034)</DisplayName>
      <DefaultValue>
        //===============
        //Configuration
        //===============
        scheduler.locale.labels.section_custom = "Section";
        scheduler.config.details_on_create = true;
        scheduler.config.details_on_dblclick = true;
        scheduler.config.mark_now = true;
        scheduler.date.timeline_start = scheduler.date.month_start;
        scheduler.config.hour_size_px = 20000;

        //Mark weekends.
        scheduler.addMarkedTimespan({
          days: [0, 6],
          zones: "fullday",
          css: "timeline_weekend",
        });

        // Hide header where we can change view and nanigate on dates
        scheduler.xy.nav_height = 0;

        // Modal fields configuration
        scheduler.config.lightbox.sections = [
          {
            name: "description",
            height: 130,
            map_to: "text",
            type: "textarea",
            focus: true,
          },
          {
            name: "custom",
            height: 23,
            type: "select",
            options: scheduler.serverList("redactors"),
            map_to: "redactor",
          },
          { name: "time", height: 72, type: "time", map_to: "auto" },
        ];
        scheduler.getRedactorByKey = (key) => {
          return scheduler.serverList("redactors").find((el) => el.key === key);
        };

        //On hover on task
        scheduler.templates.tooltip_text = function (start, end, event) {
          var redactor = scheduler.getRedactorByKey(event.redactor) || {
            label: "",
          };

          var html = [];
          html.push(`Booking: &lt;b>${event.text}&lt;/b>`);
          html.push(`Redactor: &lt;b>${redactor.label}&lt;/b>`);
          html.push(`Check-in: &lt;b>${start}&lt;/b>`);
          html.push(`Check-out: &lt;b>${end}&lt;/b>`);
          return html.join("&lt;br>");
        };

        const eventDateFormat = scheduler.date.date_to_str("%d %M %Y");
        scheduler.templates.event_bar_text = function (start, end, event) {
          const startDate = eventDateFormat(event.start_date);
          const endDate = eventDateFormat(event.end_date);
          const redactor = scheduler.getRedactorByKey(event.redactor);
          return [
            event.text + "&lt;br />",
            startDate + " - " + endDate,
            "&lt;div class='booking_status booking-option'>" + redactor.label + "&lt;/div>",
          ].join("");
        };
      </DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(032)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine()</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
    <Attribute>
      <Name>timelineconfig</Name>
      <DisplayName>#Lang(033)</DisplayName>
      <DefaultValue>
          //===============
          //Timeline configuration
          //===============
          scheduler.createTimelineView({
            name: "timeline",
            x_unit: "day",
            x_date: "%j",
            x_step: 1,
            x_size: 31,
            section_autoheight: false,
            y_unit: scheduler.serverList("redactors"),
            y_property: "redactor",
            render: "bar",
            round_position: true,
            event_dy: "full",
            dy: 60,
            dx: 400,
            second_scale: {
              x_unit: "month",
              x_date: "%F, %Y",
            },
          });

          // Header labels config
          var headerHTML =
            "&lt;div class='timeline_item_cell'>Redacteur&lt;/div>" +
            "&lt;div class='timeline_item_cell'>Fin de la redaction&lt;/div>";
          scheduler.locale.labels.timeline_scale_header = headerHTML;

          scheduler.templates.timeline_scale_label = function (key, label, section) {
            const imgSrc = "https://www.svgrepo.com/show/57853/avatar.svg";
            return [
              "&lt;div class='timeline_item_cell'>" +
                `&lt;img class='redactor-image' src='${imgSrc}'/>` +
                `&lt;div class='redactor-info-wrapper'>` +
                `&lt;span class='redactor-name'>${section.label}&lt;/span>` +
                `&lt;span>${section.number}&lt;/span>` +
                `&lt;span>${section.description} / ${section.employment_type}&lt;/span>` +
                `&lt;/div>` +
                "&lt;/div>",
              "&lt;div class='timeline_item_cell room_status'>",
              "&lt;span class='status-label'>" +
                scheduler.getRedactorByKey(key).end_time +
                "&lt;/span>",
              "&lt;/div>",
            ].join("");
          };
      </DefaultValue>
      <Visible>1</Visible>
      <Help>#Lang(032)</Help>
      <InterfaceType>0</InterfaceType>
      <CodeInterface>MultiLine()</CodeInterface>
      <Colorgroup>4</Colorgroup>
      <ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
      <RegularExpressionValidation>.*</RegularExpressionValidation>
    </Attribute>
  </Attributes>
  <Languages>
    <Language Code="en_US">
      <Sentence ID="000">Default help field</Sentence>
      <Sentence ID="001">Scheduler</Sentence>
      <Sentence ID="002">JavaScript Event Calendar (Based on DHTMLX)</Sentence>
      <Sentence ID="004">Default validation message</Sentence>
      <Sentence ID="009">Rows count</Sentence>
      <Sentence ID="010">Show toolbar</Sentence>
      <Sentence ID="011">Yes</Sentence>
      <Sentence ID="012">No</Sentence>
      <Sentence ID="013">Css class</Sentence>
      <Sentence ID="014">Hierarchy</Sentence>
      <Sentence ID="015">Z-Index</Sentence>
      <Sentence ID="016">Top</Sentence>
      <Sentence ID="017">Left</Sentence>
      <Sentence ID="018">Width</Sentence>
      <Sentence ID="019">Height</Sentence>
      <Sentence ID="020">Visibility</Sentence>
      <Sentence ID="021">Position</Sentence>
      <Sentence ID="022">absolute</Sentence>
      <Sentence ID="023">static</Sentence>
      <Sentence ID="024">relative</Sentence>
      <Sentence ID="025">Hide</Sentence>
      <Sentence ID="026">Show</Sentence>
      <Sentence ID="028">Fade</Sentence>
      <Sentence ID="029">Data</Sentence>
      <Sentence ID="030">Start date</Sentence>
      <Sentence ID="031">End date</Sentence>
      <Sentence ID="032">JS format Date.parse([])</Sentence>
      <Sentence ID="033">Timeline config</Sentence>
      <Sentence ID="034">Scheduler config</Sentence>
      <Sentence ID="035">On parse</Sentence>
      <Sentence ID="036">On templates ready</Sentence>
      <Sentence ID="037">Set x_size value</Sentence>
      <Sentence ID="038">x_size</Sentence>
      <Sentence ID="039">Integer value</Sentence>
      <Sentence ID="040">Set date range</Sentence>
      <Sentence ID="041">Date</Sentence>
      <Sentence ID="042">Set date</Sentence>
    </Language>
    <Language Code="ru_RU">
      <Sentence ID="000">Default help field</Sentence>
      <Sentence ID="001">Spreadsheet_v2</Sentence>
      <Sentence ID="002">JavaScript Event Calendar (Based on DHTMLX)</Sentence>
      <Sentence ID="004">Default validation message</Sentence>
      <Sentence ID="009">Rows count</Sentence>
      <Sentence ID="010">Show toolbar</Sentence>
      <Sentence ID="011">Yes</Sentence>
      <Sentence ID="012">No</Sentence>
      <Sentence ID="013">Css class</Sentence>
      <Sentence ID="014">Hierarchy</Sentence>
      <Sentence ID="015">Z-Index</Sentence>
      <Sentence ID="016">Top</Sentence>
      <Sentence ID="017">Left</Sentence>
      <Sentence ID="018">Width</Sentence>
      <Sentence ID="019">Height</Sentence>
      <Sentence ID="020">Visibility</Sentence>
      <Sentence ID="021">Position</Sentence>
      <Sentence ID="022">absolute</Sentence>
      <Sentence ID="023">static</Sentence>
      <Sentence ID="024">relative</Sentence>
      <Sentence ID="025">Hide</Sentence>
      <Sentence ID="026">Show</Sentence>
      <Sentence ID="028">Fade</Sentence>
      <Sentence ID="029">Data</Sentence>
      <Sentence ID="030">Start date</Sentence>
      <Sentence ID="031">End date</Sentence>
      <Sentence ID="032">JS format Date.parse([])</Sentence>
      <Sentence ID="033">Timeline config</Sentence>
      <Sentence ID="034">Scheduler config</Sentence>
      <Sentence ID="035">On parse</Sentence>
      <Sentence ID="036">On templates ready</Sentence>
      <Sentence ID="037">Set x_size value</Sentence>
      <Sentence ID="038">x_size</Sentence>
      <Sentence ID="039">Integer value</Sentence>
      <Sentence ID="040">Set date range</Sentence>
      <Sentence ID="041">Date</Sentence>
      <Sentence ID="042">Set date</Sentence>
    </Language>
    <Language Code="fr_FR">
      <Sentence ID="000">Default help field</Sentence>
      <Sentence ID="001">Spreadsheet_v2</Sentence>
      <Sentence ID="002">JavaScript Event Calendar (Based on DHTMLX)</Sentence>
      <Sentence ID="004">Default validation message</Sentence>
      <Sentence ID="009">Rows count</Sentence>
      <Sentence ID="010">Show toolbar</Sentence>
      <Sentence ID="011">Yes</Sentence>
      <Sentence ID="012">No</Sentence>
      <Sentence ID="013">Css class</Sentence>
      <Sentence ID="014">Hierarchy</Sentence>
      <Sentence ID="015">Z-Index</Sentence>
      <Sentence ID="016">Top</Sentence>
      <Sentence ID="017">Left</Sentence>
      <Sentence ID="018">Width</Sentence>
      <Sentence ID="019">Height</Sentence>
      <Sentence ID="020">Visibility</Sentence>
      <Sentence ID="021">Position</Sentence>
      <Sentence ID="022">absolute</Sentence>
      <Sentence ID="023">static</Sentence>
      <Sentence ID="024">relative</Sentence>
      <Sentence ID="025">Hide</Sentence>
      <Sentence ID="026">Show</Sentence>
      <Sentence ID="028">Fade</Sentence>
      <Sentence ID="029">Data</Sentence>
      <Sentence ID="030">Start date</Sentence>
      <Sentence ID="031">End date</Sentence>
      <Sentence ID="032">JS format Date.parse([])</Sentence>
      <Sentence ID="033">Timeline config</Sentence>
      <Sentence ID="034">Scheduler config</Sentence>
      <Sentence ID="035">On parse</Sentence>
      <Sentence ID="036">On templates ready</Sentence>
      <Sentence ID="037">Set x_size value</Sentence>
      <Sentence ID="038">x_size</Sentence>
      <Sentence ID="039">Integer value</Sentence>
      <Sentence ID="040">Set date range</Sentence>
      <Sentence ID="041">Date</Sentence>
      <Sentence ID="042">Set date</Sentence>
    </Language>
  </Languages>
  <Resources>
    <Resource ID="a0955637-e4dd-4cd1-933b-540c46acf37f" Name="Scheduler-icon64.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAQAAAAAYLlVAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QA/4ePzL8AAAAHdElNRQfkCwYRGwpHvXY6AAADo0lEQVRo3u2ZzUtUURjGf3PnQ61kIj/AhIimiDJxISRqQtbKKKJ2fWgZbQtc1H8glJuCWhVRJFRkELUIF9KiaBqhKLKiKY1E+mA000prdO7cFl7PnJl7p9GZe+9sfM7mnfOce97nnvOe95x7BtLDTxff+U4Xflv4jGhnGg2Nadpt4QFQ0jIe6ikCoIh6PJbzGQUoFAi7wKRdrrzQaebaDfikhxR8aLikNloWPKjEU525kn6tpIZa1lKMgkI9Ab1+iKeGRxfPq/ximGe8YsJsLIpppY9xVDQbi8o4fRymONX9eq4zZatruUxxhTWy+430OeZ8rsTpFRNEGXcddj9XblECHhSOsVuK3jEG+IpqQxC6qaCaUhH4+wlxHjbzRmia4TaN+CnAywq6RX03K/Dik0o2fAF+GrnDrKh/yUYPe9gg3r6bU4yLBZp4pzgzzBoW8OL5KE8I85s2fRQ2sVdhJ1692VvOCvcQJyrsqDGBZM2PcYZ3uu1jp0KVoHr5IHUQI8RfAP4SImZwkD0fplfYVR5KdVPlPVpSFz1UcAC4SQ9myJbXCKPiBqAMERBR2gxdeCmnXEwRlvFtROf9pt0mAZglYivP/7Zjh5B3AZ4kW8GTdU8LR0z24hKRHyfIUMr5wB5oBGiYH3tXytJzHHmPgSUBiXjMUxAmBMS4yjWHluFRtuJLFQAx4sw4IAB5b8x7DCwJWBKQbtkto5a1IitofOI50xbyEsyOZEV0MkZUKmN06tcNVvDSkcxcQBOjhg+pUZos4yUB5jFQwXJD3XIqLOMlmAsYYMRQN8KAZbwE8yAMc5oO1klB9JFzhC3jMwqIc59HScM4xYR0dsqVzygANH7wg/TIlRfIeyLKu4D0BxAXHimIYoYZzJXPICDAQQJSB0PcYMhCXoJZJizngSGTPaDcMj5jJqyT0uY8mqizjJeQ9yA0F9DPY0PdY/ot4yWYB2GEEyZBFLGMT0K6KxqXdPPnNflgyYVf0BWNZrj5s5bXoaAKxe6FPGAJ3GJEVIWfuulltWMCKsXN2aTCoKjezipH3JfQLOxBhaDI0ts44sDHqZtWGnRbIwg7+CZWQoQOSmx1v4oOIsLfV5pdFHKB46LBH0I85LMITWvfvZJm8W8iwGVOuoBquqmRGv5n88wJ8gYN8IpDvJ4zWxh2/A+bYXYltCi08MJR9y9pSc2eVVzkC3HbXat84xJbEvOSQCF17KOBAH5bsqLKJIMEuUc/f+Yr/wHHS3J5l+nm0QAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMC0xMS0wNlQxNzoyNzoxMCswMDowMHvu8QAAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjAtMTEtMDZUMTc6Mjc6MTIrMDA6MDCdLFiVAAAAAElFTkSuQmCC]]></Resource>
    <Resource ID="1c731386-bbca-407d-a99b-63414183e22b" Name="Scheduler-icon24.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAQAAABKfvVzAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QA/4ePzL8AAAAHdElNRQfkCwYRGyp801byAAABU0lEQVQ4y6XSP0tbYRTH8U/iQ5cmN1Fplya5Qx1KB6EKFaS1gi/Cl+DaqX0Ljq6dOtbmLZjFoUvp5OQiBBOH1oAKygW55DqYP6C3XkvPs3yH33nOOb9zGEfdvn31BxkBPDHrpQW81kMzh4+cuaaEFR8tq3iOP1KEHL70y46fM9Z99UFJqoIrQ5Q9vcOXIm+tOaAj882iVSdOrGpq5vKiXZk9EqfeINLWFvFXXjKQkOmKQVV14lkex7qygKBhqCzD3Eh0n4caAiWZ1KlUcQTPhPIjhHey+G3TsaLUoZbvXgSk+nqP+LwsHZ8G1NRx7uIBHnnQ1VLV1tPTFolyuao1tnVasphNFxdpaEy2m8fxf1S4naGvP+n7Po9m+OfFTWeoicVqI4vzONaVTc+7OJYMJMEPGz7bdlYgn/XJvE7Jmi9eGbgqSKiYd2gL3tmTyApeouM9N6vMkn3Gs8JSAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIwLTExLTA2VDE3OjI3OjQyKzAwOjAwpJHuTQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMC0xMS0wNlQxNzoyNzo0NCswMDowMLYcY8sAAAAASUVORK5CYII=]]></Resource>
    <Resource ID="f46c4232-c554-48b2-a330-9b3cb0cc7ba7" Name="Scheduler-icon16.png" Type="png"><![CDATA[iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAQAAAC1+jfqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QA/4ePzL8AAAAHdElNRQfkCwYRGzsWY3YAAAAA2ElEQVQoz3XQMUoDQRQG4G+WbVcQUqawSyWksrAKgkewEPYAkgOIrYZA8ALJIbyBJFpZiIcQrW22TNgdi13XXYlvig/eG/hnHhCsrCSSnqEeZS5MTEQvOKUxePbkITVz6U0UJAg0RgMLxxTuJObmgtAzMVNQyZHJBKEnuSqovHpvnkrsyJGTlHb41/qSUt42Q09yZYro0Dk2OOv4KJKiMnKLT3p+qH4jhoZSac82ojRyg3tcd1wo6wjN9vaJran/amobbAwsFe3Xfio6cOWLsbWdcs/ZWRt/A73uSSq8+yQLAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIwLTExLTA2VDE3OjI3OjU4KzAwOjAwzEuxnQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMC0xMS0wNlQxNzoyODowMCswMDowMDcSEq8AAAAASUVORK5CYII=]]></Resource>
    <Resource ID="7693eb8b-3cd2-4270-920c-8e62336ac4a7" Name="dhtmlxscheduler.css" Type="css"><![CDATA[LyoKCkBsaWNlbnNlCmRodG1seFNjaGVkdWxlciB2LjUuMy45IFN0YW5kYXJkCgpUbyB1c2UgZGh0bWx4U2NoZWR1bGVyIGluIG5vbi1HUEwgcHJvamVjdHMgKGFuZCBnZXQgUHJvIHZlcnNpb24gb2YgdGhlIHByb2R1Y3QpLCBwbGVhc2Ugb2J0YWluIENvbW1lcmNpYWwvRW50ZXJwcmlzZSBvciBVbHRpbWF0ZSBsaWNlbnNlIG9uIG91ciBzaXRlIGh0dHBzOi8vZGh0bWx4LmNvbS9kb2NzL3Byb2R1Y3RzL2RodG1seFNjaGVkdWxlci8jbGljZW5zaW5nIG9yIGNvbnRhY3QgdXMgYXQgc2FsZXNAZGh0bWx4LmNvbQoKKGMpIFhCIFNvZnR3YXJlIEx0ZC4KCiovCi5kaHRtbHhfbWVzc2FnZV9hcmVhe3Bvc2l0aW9uOmZpeGVkO3JpZ2h0OjVweDt3aWR0aDoyNTBweDt6LWluZGV4OjExfS5kaHRtbHgtaW5mb3ttaW4td2lkdGg6MTIwcHg7cGFkZGluZzo0cHggNHB4IDRweCAyMHB4O2ZvbnQtZmFtaWx5OlRhaG9tYTt6LWluZGV4OjE0O292ZXJmbG93OmhpZGRlbjttYXJnaW46NXB4O21hcmdpbi1ib3R0b206MTBweDstd2Via2l0LXRyYW5zaXRpb246YWxsIC41cyBlYXNlOy1tb3otdHJhbnNpdGlvbjphbGwgLjVzIGVhc2U7LW8tdHJhbnNpdGlvbjphbGwgLjVzIGVhc2U7dHJhbnNpdGlvbjphbGwgLjVzIGVhc2V9LmRodG1seC1pbmZvLmhpZGRlbntoZWlnaHQ6MDtwYWRkaW5nOjA7Ym9yZGVyLXdpZHRoOjA7bWFyZ2luOjA7b3ZlcmZsb3c6aGlkZGVufS5kaHRtbHhfbW9kYWxfYm94e292ZXJmbG93OmhpZGRlbjtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpmaXhlZDttaW4td2lkdGg6MzAwcHg7d2lkdGg6MzMwcHg7dGV4dC1hbGlnbjpjZW50ZXI7YmFja2dyb3VuZDojZmZmO2JveC1zaGFkb3c6MCAwIDE0cHggIzg4ODtib3JkZXI6MXB4IHNvbGlkICNmZmY7ei1pbmRleDoxODtib3JkZXItcmFkaXVzOjZweDtmb250LWZhbWlseTpUYWhvbWEsc2FuLXNlcmlmfS5kaHRtbHhfcG9wdXBfdGV4dHttYXJnaW46MTVweCAxNXB4IDVweCAxNXB4O2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiMwMDA7bWluLWhlaWdodDozMHB4O2JvcmRlci1yYWRpdXM6NnB4fS5kaHRtbHhfcG9wdXBfdGl0bGV7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czo1cHg7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NXB4O2JvcmRlci13aWR0aDowO2JhY2tncm91bmQ6dXJsKGRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQUVBQUFBb0NBTUFBQUFJYUdCRkFBQUFoRkJNVkVWd2NIQnVibTVzYkd4cWFtcG9hR2htWm1abFpXVmpZMk5oWVdGZlgxOWRYVjFiVzF0YVdscFlXRmhXVmxaVVZGUlNVbEpSVVZGUFQwOU5UVTFMUzB0SlNVbEhSMGRHUmtaRVJFUkNRa0pBUUVBK1BqNDlQVDA5UFQwK1BqNUFRRUJCUVVGRFEwTkVSRVJHUmtaSFIwZEpTVWxLU2twTVRFeE1URXc1T1RrNU9UazVPVGtueThZRUFBQUFRa2xFUVZRSW1RWEJDUkpDQUFBQXdLVlNRcWR5alNQWE5QNy9RTHNJaEE2T1RpSm5GN0dyUkNwemMvZnc5UEtXKy9ncWxDcTFScXZURy95TUpyUEY2bS9iQVZFaEF4eG5IRzBvQUFBQUFFbEZUa1N1UW1DQyk7YmFja2dyb3VuZC1pbWFnZTotd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsIzcwNzA3MCAxJSwjM2QzZDNkIDcwJSwjNGM0YzRjIDk3JSwjMzkzOTM5IDk3JSk7YmFja2dyb3VuZC1pbWFnZTotbW96LWxpbmVhci1ncmFkaWVudCh0b3AsIzcwNzA3MCAxJSwjM2QzZDNkIDcwJSwjNGM0YzRjIDk3JSwjMzkzOTM5IDk3JSl9LmRodG1seC1pbmZvLC5kaHRtbHhfYnV0dG9uLC5kaHRtbHhfcG9wdXBfYnV0dG9ue3VzZXItc2VsZWN0Om5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6LW1vei1ub25lO2N1cnNvcjpwb2ludGVyfS5kaHRtbHhfcG9wdXBfdGV4dHtvdmVyZmxvdzpoaWRkZW59LmRodG1seF9wb3B1cF9jb250cm9sc3tib3JkZXItcmFkaXVzOjZweDtwYWRkaW5nOjVweCA1cHggOXB4IDVweH0uZGh0bWx4X2J1dHRvbiwuZGh0bWx4X3BvcHVwX2J1dHRvbntoZWlnaHQ6MzBweDtsaW5lLWhlaWdodDoyOHB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbjowIDVweDtib3JkZXItcmFkaXVzOjZweDtjb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgIzgzODM4Mztib3gtc2hhZG93Om5vbmV9LmRodG1seF9wb3B1cF9idXR0b257bWluLXdpZHRoOjEyMHB4O2JhY2tncm91bmQ6I2ZmZn0uZGh0bWx4X2J1dHRvbiBpbnB1dCwuZGh0bWx4X3BvcHVwX2J1dHRvbiBkaXZ7Ym9yZGVyOjFweCBzb2xpZCAjZmZmO2JhY2tncm91bmQ6I2ZmZjtiYWNrZ3JvdW5kLWltYWdlOm5vbmU7Ym9yZGVyLXJhZGl1czo2cHg7Zm9udC1zaXplOjE1cHg7LW1vei1ib3gtc2l6aW5nOmNvbnRlbnQtYm94O2JveC1zaXppbmc6Y29udGVudC1ib3g7dGV4dC1zaGFkb3c6bm9uZTtjb2xvcjojNDQ0O2ZvbnQtd2VpZ2h0OjQwMDtwYWRkaW5nOjA7bWFyZ2luOjA7dmVydGljYWwtYWxpZ246dG9wO2hlaWdodDoyOHB4O2xpbmUtaGVpZ2h0OjI4cHh9LmRodG1seF9wb3B1cF9idXR0b24uZGh0bWx4X29rX2J1dHRvbiBkaXZ7YmFja2dyb3VuZDojMjJhMWJjO2JvcmRlcjoxcHggc29saWQgIzIyYTFiYztjb2xvcjojZmZmO3RleHQtc2hhZG93OjAgLTFweCAwICM2ZjZmNmY7b3V0bGluZTowfS5kaHRtbHhfcG9wdXBfYnV0dG9uLmRodG1seF9va19idXR0b257Ym9yZGVyOjFweCBzb2xpZCAjMjJhMWJjO2JhY2tncm91bmQtY29sb3I6IzIyYTFiYztvdXRsaW5lOjB9LmRodG1seF9idXR0b24gaW5wdXQ6YWN0aXZlLC5kaHRtbHhfYnV0dG9uIGlucHV0OmZvY3VzLC5kaHRtbHhfcG9wdXBfYnV0dG9uIGRpdjphY3RpdmUsLmRodG1seF9wb3B1cF9idXR0b24gZGl2OmZvY3Vze2JhY2tncm91bmQ6I2ZmZjtiYWNrZ3JvdW5kLWltYWdlOm5vbmU7Y29sb3I6IzQ0NDtib3gtc2hhZG93Om5vbmU7b3V0bGluZTowfS5kaHRtbHhfcG9wdXBfYnV0dG9uLmRodG1seF9jYW5jZWxfYnV0dG9uIGRpdjphY3RpdmV7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7b3V0bGluZTowfWRpdi5kaHhfbW9kYWxfY292ZXJ7YmFja2dyb3VuZC1jb2xvcjojMDAwO2N1cnNvcjpkZWZhdWx0O29wYWNpdHk6LjI7cG9zaXRpb246Zml4ZWQ7ei1pbmRleDoxNztsZWZ0OjA7dG9wOjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtib3JkZXI6bm9uZTt6b29tOjF9LmRodG1seC1pbmZvIGltZywuZGh0bWx4X21vZGFsX2JveCBpbWd7ZmxvYXQ6bGVmdDttYXJnaW4tcmlnaHQ6MjBweH0uZGh0bWx4LWFsZXJ0LWVycm9yIC5kaHRtbHhfcG9wdXBfdGl0bGUsLmRodG1seC1jb25maXJtLWVycm9yIC5kaHRtbHhfcG9wdXBfdGl0bGV7YmFja2dyb3VuZDp1cmwoZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFBRUFBQUFzQ0FJQUFBQXJSVVUyQUFBQVRrbEVRVlI0bklXTHV3MkFNQkJEalZ1UWlCVDJvV2JSREFUcm5CMEtRT0pvcVB6UmUzQnJISTZkY0JBU1lSRUtvdnRLNi82RHNET1grc3ROKzNIMVlYOWNpUmduWXE1RVdZaFMyZGZ0Qkl1TFQ0SnlJclBDQUFBQUFFbEZUa1N1UW1DQyl9LmRodG1seC1hbGVydC1lcnJvciwuZGh0bWx4LWNvbmZpcm0tZXJyb3J7Ym9yZGVyOjFweCBzb2xpZCByZWR9LmRodG1seF9wb3B1cF90aXRsZXtjb2xvcjojZmZmO3RleHQtc2hhZG93OjFweCAxcHggIzAwMDtoZWlnaHQ6NDBweDtsaW5lLWhlaWdodDo0MHB4O2ZvbnQtc2l6ZToyMHB4fS5kaHRtbHgtZXJyb3IsLmRodG1seC1pbmZve2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiMwMDA7Ym94LXNoYWRvdzowIDAgMTBweCAjODg4O3BhZGRpbmc6MDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLXJhZGl1czozcHg7Ym9yZGVyOjFweCBzb2xpZCAjZmZmfS5kaHRtbHgtaW5mbyBkaXZ7cGFkZGluZzo1cHggMTBweCA1cHggMTBweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLXJhZGl1czozcHg7Ym9yZGVyOjFweCBzb2xpZCAjYjhiOGI4fS5kaHRtbHhfbWVzc2FnZV9hcmVhIC5kaHRtbHgtZXJyb3J7YmFja2dyb3VuZC1jb2xvcjojZDgxYjFiO2JvcmRlcjoxcHggc29saWQgI2ZmM2MzYztib3gtc2hhZG93OjAgMCAxMHB4ICMwMDB9LmRodG1seF9tZXNzYWdlX2FyZWEgLmRodG1seC1lcnJvciBkaXZ7YmFja2dyb3VuZC1jb2xvcjojZDgxYjFiO2JvcmRlcjoxcHggc29saWQgIzk0MDAwMDtjb2xvcjojZmZmfS5kaHRtbHhfbW9kYWxfYm94LmRodG1seC1lcnJvciAuZGh0bWx4X3BvcHVwX3RpdGxle2JhY2tncm91bmQ6I2Q4MWIxYjtib3JkZXI6MXB4IHNvbGlkICNmZjNjM2M7Y29sb3I6I2ZmZn0uZGh4X2NhbF9ldmVudCAuZGh4X2JvZHksLmRoeF9jYWxfZXZlbnQgLmRoeF9mb290ZXIsLmRoeF9jYWxfZXZlbnQgLmRoeF9oZWFkZXIsLmRoeF9jYWxfZXZlbnQgLmRoeF90aXRsZXtiYWNrZ3JvdW5kLWNvbG9yOiMxNzk2YjA7Ym9yZGVyOjFweCBzb2xpZCB0cmFuc3BhcmVudDtjb2xvcjojZmZmO292ZXJmbG93OmhpZGRlbjt3aWR0aDoxMDAlfS5kaHhfbW92ZV9kZW5pZCAuZGh4X2NhbF9ldmVudCAuZGh4X2hlYWRlciwuZGh4X21vdmVfZGVuaWVkIC5kaHhfY2FsX2V2ZW50IC5kaHhfdGl0bGV7Y3Vyc29yOmRlZmF1bHR9LmRoeF9jYWxfZXZlbnQgLmRoeF9oZWFkZXJ7aGVpZ2h0OjFweDttYXJnaW46MCAwIDAgMXB4O2JvcmRlci13aWR0aDoxcHggMXB4IDAgMXB4O2N1cnNvcjpwb2ludGVyfS5kaHhfY2FsX2V2ZW50IC5kaHhfdGl0bGV7aGVpZ2h0OjEycHg7Ym9yZGVyLXdpZHRoOjFweCAxcHggMCAxcHg7Ym9yZGVyLWJvdHRvbS1zdHlsZTpkb3R0ZWQ7Ym9yZGVyLXJhZGl1czo0cHggNHB4IDAgMDtmb250LXNpemU6MTJweDtsaW5lLWhlaWdodDoxMnB4O2ZvbnQtd2VpZ2h0OjcwMDt0ZXh0LWFsaWduOmNlbnRlcjtiYWNrZ3JvdW5kLXBvc2l0aW9uOnJpZ2h0O2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtwYWRkaW5nOjFweCAwIDAgMDtjdXJzb3I6cG9pbnRlcn0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfY2FsX2V2ZW50IC5kaHhfdGl0bGV7dGV4dC1hbGlnbjpjZW50ZXI7cGFkZGluZzoxcHggMCAwIDB9LmRoeF9jYWxfZXZlbnQgLmRoeF9ib2R5LC5kaHhfY2FsX2V2ZW50LmRoeF9jYWxfc2VsZWN0X21lbnUgLmRoeF9ib2R5e2JvcmRlci13aWR0aDowIDFweCAxcHggMXB4O3BhZGRpbmc6NXB4IDVweCA4cHggNXB4O2JvcmRlci1yYWRpdXM6MCAwIDRweCA0cHg7Zm9udC13ZWlnaHQ6NDAwO2xpbmUtaGVpZ2h0Om5vcm1hbH0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfY2FsX2V2ZW50IC5kaHhfYm9keXtwYWRkaW5nOjVweCA1cHggOHB4IDVweH0uZGh4X2NhbF9ldmVudC5kaHhfY2FsX3NlbGVjdF9tZW51ey13ZWJraXQtYm94LXNoYWRvdzowIDAgMXB4ICNmZmY7LW1vei1ib3gtc2hhZG93OjAgMCAxcHggI2ZmZjtib3gtc2hhZG93OjAgMCAxcHggI2ZmZn0uZGh4X3Jlc2l6ZV9kZW5pZWQsLmRoeF9yZXNpemVfZGVuaWVkIC5kaHhfZXZlbnRfcmVzaXple2N1cnNvcjpkZWZhdWx0IWltcG9ydGFudH0uZGh4X2NhbF9ldmVudCAuZGh4X2V2ZW50X3Jlc2l6ZXtjdXJzb3I6cy1yZXNpemU7Y3Vyc29yOm5zLXJlc2l6ZX0uZGh4X2NhbF9ldmVudCAuZGh4X2Zvb3RlciwuZGh4X2NhbF9ldmVudCAuZGh4X3NlbGVjdF9tZW51X2Zvb3RlcntoZWlnaHQ6NXB4O21hcmdpbjotNnB4IDAgMCAycHg7Ym9yZGVyLXdpZHRoOjA7cG9zaXRpb246cmVsYXRpdmU7dG9wOmF1dG87YmFja2dyb3VuZDojMTc5NmIwIHVybChpbWdzX2RoeF90ZXJyYWNlL3Jlc2l6aW5nLnBuZykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXJ9LmRoeF9jYWxfZXZlbnQgLmRoeF9yZXNpemVfZGVuaWVkLmRoeF9ldmVudF9yZXNpemUuZGh4X2Zvb3RlcntoZWlnaHQ6MH0uZGh4X2NhbF9ldmVudF9saW5le2JhY2tncm91bmQtY29sb3I6IzE3OTZiMDtib3JkZXI6MXB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1yYWRpdXM6MnB4O2ZvbnQtZmFtaWx5OkFyaWFsLHNhbi1zZXJpZjtmb250LXNpemU6MTJweDtmb250LXdlaWdodDo0MDA7bGluZS1oZWlnaHQ6MTdweDtoZWlnaHQ6MjBweDtwYWRkaW5nOjAgMCAwIDEwcHg7Y29sb3I6I2ZmZjtjdXJzb3I6cG9pbnRlcjtvdmVyZmxvdzpoaWRkZW59LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X2NhbF9ldmVudF9saW5le3BhZGRpbmc6MCA5cHggMCAwfS5kaHhfY2FsX2V2ZW50X2xpbmVfc3RhcnR7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czo5cHg7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czo5cHh9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X2NhbF9ldmVudF9saW5lX3N0YXJ0e2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MnB4O2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MnB4fS5kaHhfY2FsX2V2ZW50X2xpbmVfZW5ke2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjlweDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czo5cHh9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X2NhbF9ldmVudF9saW5lX2VuZHtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czoycHg7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MnB4fS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9jYWxfZXZlbnRfbGluZV9zdGFydHtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czo5cHg7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6OXB4fS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9jYWxfZXZlbnRfbGluZV9lbmR7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czo5cHg7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czo5cHh9LmRoeF9jYWxfZXZlbnRfY2xlYXJ7aGVpZ2h0OjIwcHg7cGFkZGluZzowIDAgMCAycHg7Y29sb3I6IzBlNjRhMDtmb250LWZhbWlseTpUYWhvbWEsc2FuLXNlcmlmO2ZvbnQtc2l6ZTo4cHQ7bGluZS1oZWlnaHQ6bm9ybWFsO3doaXRlLXNwYWNlOm5vd3JhcDtvdmVyZmxvdzpoaWRkZW47Y3Vyc29yOnBvaW50ZXI7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtmb250LXdlaWdodDo0MDB9LmRoeF9jYWxfZXZlbnQuZGh4X2NhbF9lZGl0b3J7Ym9yZGVyOjFweCBzb2xpZCAjMTc5NmIwO2JvcmRlci10b3Atc3R5bGU6c29saWQ7ei1pbmRleDoxMDtwb3NpdGlvbjphYnNvbHV0ZTtvdmVyZmxvdzpoaWRkZW59dGV4dGFyZWEuZGh4X2NhbF9lZGl0b3J7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtib3JkZXI6MCBzb2xpZCAjMDAwO3BhZGRpbmc6MDttYXJnaW46MDtvdmVyZmxvdzphdXRvO2ZvbnQtZmFtaWx5OkFyaWFsLHNhbi1zZXJpZjtmb250LXNpemU6MTJweH1kaXYuZGh4X21lbnVfaGVhZHtiYWNrZ3JvdW5kLWltYWdlOnVybChpbWdzX2RoeF90ZXJyYWNlL2NvbnRyb2xzLnBuZyk7YmFja2dyb3VuZC1wb3NpdGlvbjowIC00M3B4O3dpZHRoOjEwcHg7aGVpZ2h0OjEwcHg7bWFyZ2luLWxlZnQ6NXB4O21hcmdpbi10b3A6MXB4O2JvcmRlcjpub25lO2N1cnNvcjpkZWZhdWx0fS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgZGl2LmRoeF9tZW51X2hlYWR7bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6NXB4fWRpdi5kaHhfbWVudV9pY29ue2JhY2tncm91bmQtaW1hZ2U6dXJsKGltZ3NfZGh4X3RlcnJhY2UvY29udHJvbHMucG5nKTt3aWR0aDoyMHB4O2hlaWdodDoyMHB4O21hcmdpbi1sZWZ0Oi01cHg7bWFyZ2luLXRvcDowO2JvcmRlcjpub25lO2N1cnNvcjpwb2ludGVyfS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgZGl2LmRoeF9tZW51X2ljb257bWFyZ2luLWxlZnQ6MDttYXJnaW4tcmlnaHQ6LTNweH1kaXYuaWNvbl9kZXRhaWxze2JhY2tncm91bmQtcG9zaXRpb246MCAwfWRpdi5pY29uX2VkaXR7YmFja2dyb3VuZC1wb3NpdGlvbjotMjJweCAwfWRpdi5pY29uX3NhdmV7YmFja2dyb3VuZC1wb3NpdGlvbjotODRweCAtMXB4fWRpdi5pY29uX2NhbmNlbHtiYWNrZ3JvdW5kLXBvc2l0aW9uOi02MnB4IDB9ZGl2Lmljb25fZGVsZXRle2JhY2tncm91bmQtcG9zaXRpb246LTQycHggMH0uZGh4X21vbnRoX2xpbmt7cG9zaXRpb246YWJzb2x1dGU7Ym94LXNpemluZzpib3JkZXItYm94Oy1tb3otYm94LXNpemluZzpib3JkZXItYm94O3RleHQtYWxpZ246cmlnaHQ7Y3Vyc29yOnBvaW50ZXI7cGFkZGluZy1yaWdodDoxMHB4O2ZvbnQtc2l6ZTo4cHQ7Zm9udC1mYW1pbHk6VGFob21hLHNhbi1zZXJpZn0uZGh4X21vbnRoX2xpbmsgYXtjb2xvcjojMDBmfS5kaHhfbW9udGhfbGluayBhOmhvdmVye3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7Y29sb3I6IzAwMDBiM30uZGh4X2dsb2JhbF90aXB7Zm9udC1mYW1pbHk6VGFob21hLEhlbHZldGljYTt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6MjBweDtwb3NpdGlvbjpmaXhlZDt0b3A6NjBweDtyaWdodDoyMHB4O2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuNyk7Y29sb3I6IzAwMDt6LWluZGV4OjE0O3BhZGRpbmc6MjBweCAzMHB4O3dpZHRoOjE5MHB4fS5kaHhfZ2xvYmFsX3RpcCBkaXZ7Zm9udC1zaXplOjMwcHh9QG1lZGlhICgtbW96LXRvdWNoLWVuYWJsZWQpey5kaHhfY2FsX2NvbnRhaW5lcnt1c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZX19LmRoeF9jYWxfZGF0YSBkaXYuZGh4X2NhbF9ldmVudF9jbGVhciwuZGh4X2NhbF9kYXRhIGRpdi5kaHhfY2FsX2V2ZW50X2xpbmUsLmRoeF9tdWx0aV9kYXkgZGl2LmRoeF9jYWxfZXZlbnRfY2xlYXIsLmRoeF9tdWx0aV9kYXkgZGl2LmRoeF9jYWxfZXZlbnRfbGluZXstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDstbW96LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjU1MHB4KXsuZGh4X2NhbF9ldmVudF9jbGVhciwuZGh4X2NhbF9ldmVudF9saW5le3BhZGRpbmctbGVmdDoycHh9fS5kaHhfdW5zZWxlY3RhYmxlLC5kaHhfdW5zZWxlY3RhYmxlIGRpdnstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6LW1vei1ub25lfS5kaHhfY2FsX2xpZ2h0ey13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjp0cmFuc3BhcmVudDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLXJhZGl1czo1cHg7Ym9yZGVyOjFweCBzb2xpZCAjY2VjZWNlO2NvbG9yOiMyZTJlMmU7Zm9udC1mYW1pbHk6VGFob21hLHNhbi1zZXJpZjtmb250LXNpemU6OHB0O2JveC1zaGFkb3c6NXB4IDVweCA1cHggIzg4ODtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjE1O3dpZHRoOjU4MHB4fS5kaHhfY2FsX2xpZ2h0X3J0bHtib3gtc2hhZG93Oi01cHggNXB4IDVweCAjODg4fS5kaHhfY2FsX2x0aXRsZXtwYWRkaW5nOjJweCAwIDJweCA1cHg7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjY2VjZWNlO2JhY2tncm91bmQ6MCAwO21hcmdpbjowO2JvcmRlci1yYWRpdXM6MDtvdmVyZmxvdzpoaWRkZW47d2hpdGUtc3BhY2U6bm93cmFwfS5kaHhfY2FsX2x0ZXh0LmRoeF9jYWxfdGVtcGxhdGV7cG9zaXRpb246cmVsYXRpdmV9LmRoeF9jYWxfbHRpdGxlIHNwYW57d2hpdGUtc3BhY2U6bm93cmFwfS5kaHhfdGltZXtmb250LXdlaWdodDo3MDA7cGFkZGluZzowIDAgMCAxMHB4O2ZvbnQtc2l6ZTo4cHQ7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luOjB9LmRoeF9jYWxfbGlnaHRfcnRsIC5kaHhfdGltZXtwYWRkaW5nOjAgMTBweCAwIDB9LmRoeF9jYWxfbGlnaHRfd2lkZXt3aWR0aDo2NTBweH0uZGh4X21hcmt7cG9zaXRpb246cmVsYXRpdmU7dG9wOjNweDtiYWNrZ3JvdW5kLWltYWdlOnVybChpbWdzL2NvbnRyb2xzLmdpZik7YmFja2dyb3VuZC1wb3NpdGlvbjowIC00M3B4O3BhZGRpbmctbGVmdDoxMHB4fS5kaHhfaWU2IC5kaHhfbWFya3tiYWNrZ3JvdW5kLXBvc2l0aW9uOjZweCAtNDFweH0uZGh4X2NhbF9saWdodCBzZWxlY3R7Zm9udC1mYW1pbHk6VGFob21hLHNhbi1zZXJpZjtmb250LXNpemU6OHB0O2NvbG9yOiMyZTJlMmU7cGFkZGluZzoycHggMnB4IDJweCAycHg7bWFyZ2luOjB9LmRoeF9jYWxfbGlnaHQgLmRoeF90aXRsZXtwYWRkaW5nOjAgMCAwIDEzcHg7Zm9udC1zaXplOjhwdDt0ZXh0LXRyYW5zZm9ybTpub25lO2NvbG9yOmluaGVyaXQ7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luOjB9LmRoeF9jYWxfbGFyZWF7Ym9yZGVyOjFweCBzb2xpZCB0cmFuc3BhcmVudDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7b3ZlcmZsb3c6aGlkZGVufS5kaHhfY2FsX2xpZ2h0X3dpZGUgLmRoeF9jYWxfbGFyZWF7Ym9yZGVyLXRvcC13aWR0aDowO21hcmdpbjowIDAgMCAzcHh9LmRoeF9jYWxfbGlnaHRfcnRsIC5kaHhfY2FsX2xhcmVhe21hcmdpbjowIDNweCAwIDB9LmRoeF9jYWxfbGlnaHRfd2lkZSAuZGh4X3dyYXBfc2VjdGlvbntib3JkZXItdG9wOjA7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2NlY2VjZTtwb3NpdGlvbjpyZWxhdGl2ZTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7b3ZlcmZsb3c6aGlkZGVuO3BhZGRpbmc6NXB4IDA7bWFyZ2luOjB9LmRoeF9jYWxfbHNlY3Rpb257YmFja2dyb3VuZC1jb2xvcjojZmZmO2NvbG9yOiM3NDc0NzM7Zm9udC13ZWlnaHQ6NzAwO2ZvbnQtZmFtaWx5OkFyaWFsLHNhbi1zZXJpZjtmb250LXNpemU6MThweDtwYWRkaW5nOjVweCAwIDVweCAxMHB4fS5kaHhfY2FsX2xpZ2h0X3dpZGUgLmRoeF9jYWxfbHNlY3Rpb257Ym9yZGVyOjA7ZmxvYXQ6bGVmdDt0ZXh0LWFsaWduOnJpZ2h0O3dpZHRoOjgycHg7d2lkdGg6MTAwcHg7bWluLWhlaWdodDoyMHB4O2xpbmUtaGVpZ2h0Om5vcm1hbDtoZWlnaHQ6YXV0bztmb250LXNpemU6MTNweDtwYWRkaW5nOjVweCAwIDAgMTBweDttYXJnaW46MH0uZGh4X2NhbF9sc2VjdGlvbiAuZGh4X2Z1bGxkYXl7ZmxvYXQ6cmlnaHQ7bWFyZ2luLXJpZ2h0OjVweDtjb2xvcjojNzQ3MzczO2ZvbnQtZmFtaWx5OkFyaWFsLHNhbi1zZXJpZjtmb250LXNpemU6MTJweDtmb250LXdlaWdodDo0MDA7bGluZS1oZWlnaHQ6MjBweDt2ZXJ0aWNhbC1hbGlnbjp0b3A7Y3Vyc29yOnBvaW50ZXJ9LmRoeF9jYWxfbHNlY3Rpb24gLmRoeF9mdWxsZGF5IGlucHV0W3R5cGU9Y2hlY2tib3hde21hcmdpbjozcHggM3B4IDNweCA0cHh9LmRoeF9jYWxfbHRleHR7b3ZlcmZsb3c6aGlkZGVuO2Zsb2F0OmxlZnQ7ZmxvYXQ6bm9uZTt3aWR0aDphdXRvO2hlaWdodDphdXRvO3BhZGRpbmc6MnB4IDAgMnB4IDEwcHh9LmRoeF9yZWFkb25seXtoZWlnaHQ6MTVweH0uZGh4X2NhbF9sdGV4dCB0ZXh0YXJlYXtiYWNrZ3JvdW5kLWNvbG9yOiNmOWY5Zjk7b3ZlcmZsb3c6YXV0bztjb2xvcjojMmUyZTJlO2hlaWdodDoxMDAlO3dpZHRoOjEwMCU7b3V0bGluZTpub25lICFpbXBvcnRhbnQhaW1wb3J0YW50O3Jlc2l6ZTpub25lO2JvcmRlcjoxcHggc29saWQgI2NlY2VjZTtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtZmFtaWx5OmluaGVyaXQ7Ym94LXNpemluZzpib3JkZXItYm94O3BhZGRpbmc6MnB4IDJweCAycHggMnB4fS5kaHhfc2VjdGlvbl90aW1le2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7d2hpdGUtc3BhY2U6bm93cmFwfS5kaHhfY2FsX2xpZ2h0X3dpZGUgLmRoeF9zZWN0aW9uX3RpbWV7cGFkZGluZzoycHggMCAwIDAhaW1wb3J0YW50O2hlaWdodDoyMHB4IWltcG9ydGFudH0uZGh4X3NlY3Rpb25fdGltZXt0ZXh0LWFsaWduOmNlbnRlcn0uZGh4X2NhbF9saWdodF93aWRlIC5kaHhfc2VjdGlvbl90aW1le2JhY2tncm91bmQ6MCAwfS5kaHhfYnRuX3NldHtwYWRkaW5nOjA7ZmxvYXQ6bGVmdDttYXJnaW46MTJweCAwIDAgMjBweDtmb250LXNpemU6MTJweDtmb250LXdlaWdodDo3MDA7Ym9yZGVyLXJhZGl1czozcHg7dGV4dC10cmFuc2Zvcm06bm9uZTtjb2xvcjojNzQ3NDczfS5kaHhfcmlnaHRfYnRuX3NldHttYXJnaW4tcmlnaHQ6MjBweH0uZGh4X2J0bl9zZXQgZGl2e2Zsb2F0OmxlZnQ7aGVpZ2h0OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtwYWRkaW5nOjAgMjBweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7Y3Vyc29yOnBvaW50ZXJ9LmRoeF9idG5fc2V0LC5kaHhfY2FuY2VsX2J0bl9zZXR7Ym9yZGVyOjFweCBzb2xpZCAjY2VjZWNlO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Y29sb3I6IzQ1NDU0NDtmbG9hdDpyaWdodDtmbG9hdDpsZWZ0fS5kaHhfY2FsX2xpZ2h0X3J0bCAuZGh4X2J0bl9zZXQsLmRoeF9jYWxfbGlnaHRfcnRsIC5kaHhfY2FuY2VsX2J0bl9zZXR7ZmxvYXQ6cmlnaHR9LmRoeF9zYXZlX2J0bntiYWNrZ3JvdW5kLWltYWdlOnVybChpbWdzL2NvbnRyb2xzLmdpZik7YmFja2dyb3VuZC1wb3NpdGlvbjotODRweCAwO3dpZHRoOjIxcHh9LmRoeF9jYW5jZWxfYnRue2JhY2tncm91bmQtaW1hZ2U6dXJsKGltZ3MvY29udHJvbHMuZ2lmKTtiYWNrZ3JvdW5kLXBvc2l0aW9uOi02M3B4IDA7d2lkdGg6MjBweH0uZGh4X2RlbGV0ZV9idG57YmFja2dyb3VuZC1pbWFnZTp1cmwoaW1ncy9jb250cm9scy5naWYpO2JhY2tncm91bmQtcG9zaXRpb246LTQycHggMDt3aWR0aDoyMHB4fS5kaHhfZGVsZXRlX2J0bl9zZXR7Ym9yZGVyOjFweCBzb2xpZCAjZmY4ODMxO2JhY2tncm91bmQtY29sb3I6I2ZmODgzMTtjb2xvcjojZmZmO3RleHQtc2hhZG93OjAgLTFweCAwICM5Mzc1NWY7bWFyZ2luOjEycHggMjBweCAwIDIwcHh9LmRoeF9zYXZlX2J0bl9zZXR7Ym9yZGVyOjFweCBzb2xpZCAjY2VjZWNlO2NvbG9yOiNmZmY7dGV4dC1zaGFkb3c6MCAtMXB4IDAgIzZmNmY2ZjtiYWNrZ3JvdW5kLWNvbG9yOiMyMmExYmN9LmRoeF9jYWxfY292ZXJ7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwb3NpdGlvbjpmaXhlZDt6LWluZGV4OjE0O3RvcDowO2xlZnQ6MDtiYWNrZ3JvdW5kLWNvbG9yOiMwMDA7b3BhY2l0eTouMX0uZGh4X2N1c3RvbV9idXR0b257cGFkZGluZzowIDNweCAwIDNweDtjb2xvcjojNzQ3NDczO2ZvbnQtZmFtaWx5OkFyaWFsLHNhbi1zZXJpZjtmb250LXNpemU6OHB0O2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MXB4IHNvbGlkICNjZWNlY2U7Zm9udC13ZWlnaHQ6NDAwO21hcmdpbi1yaWdodDo1cHg7bWFyZ2luLXRvcDowO2N1cnNvcjpwb2ludGVyfS5kaHhfY3VzdG9tX2J1dHRvbiBkaXZ7Y3Vyc29yOnBvaW50ZXI7ZmxvYXQ6bGVmdDtoZWlnaHQ6MjFweDtsaW5lLWhlaWdodDoyMXB4O3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uZGh4X2NhbF9saWdodF93aWRlIC5kaHhfY2FsX2xzZWN0aW9uIC5kaHhfZnVsbGRheXtmbG9hdDpub25lO21hcmdpbjowO2ZvbnQtd2VpZ2h0OjcwMDtmb250LXNpemU6MTNweDtjdXJzb3I6cG9pbnRlcn0uZGh4X2NhbF9saWdodF93aWRlIC5kaHhfY2FsX2xhcmVhe3dpZHRoOjczMHB4fS5kaHhfY2FsX2xpZ2h0X3dpZGV7d2lkdGg6NzM4cHh9LmRoeF9jYWxfbGlnaHRfd2lkZSAuZGh4X2NhbF9jaGVja2JveCBsYWJlbHtwYWRkaW5nLWxlZnQ6MH0uZGh4X3dyYXBfc2VjdGlvbiAuZGh4X2NhbF93aWRlX2NoZWNrYm94IGlucHV0W3R5cGU9Y2hlY2tib3hde21hcmdpbi10b3A6OHB4O21hcmdpbi1sZWZ0OjE0cHh9LmRoeF9jYWxfbGlnaHRfcnRsIC5kaHhfd3JhcF9zZWN0aW9uIC5kaHhfY2FsX3dpZGVfY2hlY2tib3ggaW5wdXRbdHlwZT1jaGVja2JveF17bWFyZ2luOjhweCAxNHB4IDAgMH0uZGh4X2NhbF9saWdodCBpbnB1dHtmb250LWZhbWlseTpUYWhvbWEsc2FuLXNlcmlmO2ZvbnQtc2l6ZTo4cHQ7Y29sb3I6Izc0NzQ3M30jaW5wdXRfMTUxODYwNDQ2MjgwNHttYXJnaW46MCAwIDAgMTFweDtib3JkZXItYm90dG9tLXdpZHRoOjA7Ym9yZGVyLWJvdHRvbTowfS5kaHhfY3VzdG9tX2J1dHRvbntmbG9hdDpyaWdodDtoZWlnaHQ6MjFweDt3aWR0aDo5MHB4Oy13ZWJraXQtYm9yZGVyLXJhZGl1czo0cHg7LW1vei1ib3JkZXItcmFkaXVzOjRweDstbXMtYm9yZGVyLXJhZGl1czo0cHg7LW8tYm9yZGVyLXJhZGl1czo0cHg7Ym9yZGVyLXJhZGl1czo0cHh9LmRoeF9jYWxfbGlnaHRfd2lkZSAuZGh4X2N1c3RvbV9idXR0b257cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDttYXJnaW4tdG9wOjZweH0uZGh4X2NhbF9saWdodF93aWRlIC5kaHhfcmVwZWF0X3JpZ2h0e21hcmdpbi1yaWdodDo1NXB4fS5kaHhfY2FsX2xpZ2h0X3J0bHtkaXJlY3Rpb246cnRsfS5kaHhfY2FsX2xpZ2h0X3J0bCAuZGh4X2NhbF9sdGl0bGV7cGFkZGluZzoycHggNXB4IDJweCAwfS5kaHhfY2FsX2xpZ2h0X3J0bCAuZGh4X21hcmt7cGFkZGluZzowIDEwcHggMCAwfS5kaHhfY2FsX2xpZ2h0X3J0bCAuZGh4X3RpdGxle3BhZGRpbmc6MCAxM3B4IDAgMH0uZGh4X2NhbF9saWdodF9ydGwgLmRoeF93cmFwX3NlY3Rpb257cGFkZGluZzo1cHggMH0uZGh4X2NhbF9saWdodF9ydGwgLmRoeF93cmFwX3NlY3Rpb24gLmRoeF9jYWxfbHRleHQuZGh4X2NhbF90ZW1wbGF0ZXtkaXJlY3Rpb246bHRyO2Zsb2F0OnJpZ2h0O21hcmdpbi1yaWdodDoxNXB4IWltcG9ydGFudH0uZGh4X2NhbF9saWdodF9ydGwgLmRoeF9jYWxfbHNlY3Rpb257ZmxvYXQ6cmlnaHQ7dGV4dC1hbGlnbjpsZWZ0O21hcmdpbjowfS5kaHhfY2FsX2xpZ2h0X3J0bCAuZGh4X2NhbF9sdGV4dHtwYWRkaW5nOjJweCAxMHB4IDJweCAwfS5kaHhfY2FsX2xpZ2h0X3J0bCAuZGh4X2NhbF9sdGV4dCB0ZXh0YXJlYXtwYWRkaW5nOjJweCAycHggMnB4IDJweH0uZGh4X2NhbF9saWdodF9ydGwgLmRoeF9zZWN0aW9uX3RpbWV7cGFkZGluZzoycHggMCAwIDAhaW1wb3J0YW50fS5kaHhfY2FsX2xpZ2h0X3J0bCBzZWxlY3R7cGFkZGluZzoycHggMnB4IDJweCAycHg7bWFyZ2luOjB9LmRoeF9jYWxfbGlnaHRfcnRsIC5kaHhfY3VzdG9tX2J1dHRvbntsZWZ0OjE1cHg7cmlnaHQ6YXV0bztyaWdodDp1bnNldH1AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6MTAyM3B4KXsuZGh4X2NhbF9vdmVyZmxvd19jb250YWluZXJ7b3ZlcmZsb3c6YXV0byFpbXBvcnRhbnR9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZle3dpZHRoOjk4dnchaW1wb3J0YW50O2hlaWdodDphdXRvIWltcG9ydGFudDtsZWZ0OjElIWltcG9ydGFudDt0b3A6MS45NTN2dyFpbXBvcnRhbnQ7Zm9udC1zaXplOjMuOTA2dnchaW1wb3J0YW50O2xpbmUtaGVpZ2h0OjMuOTA2dnchaW1wb3J0YW50O3BhZGRpbmctYm90dG9tOjJ2d30uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9idG5fc2V0e21hcmdpbi1ib3R0b206MS45NTN2dyFpbXBvcnRhbnQ7Zm9udC1zaXplOjMuOTA2dnc7aGVpZ2h0OmF1dG8haW1wb3J0YW50O3BhZGRpbmc6MS45NTN2dyAxLjU2M3Z3IDEuOTUzdncgMS41NjN2d30uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9idG5fc2V0IGRpdntoZWlnaHQ6Mi45M3Z3O2xpbmUtaGVpZ2h0OjIuOTN2dztwYWRkaW5nOjAgMS41NjN2d30uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9jYWxfbGFyZWF7d2lkdGg6YXV0byFpbXBvcnRhbnQ7bWFyZ2luLWxlZnQ6MCFpbXBvcnRhbnQ7aGVpZ2h0OjEwMCUhaW1wb3J0YW50fS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X2NhbF9sc2VjdGlvbntmb250LXNpemU6My45MDZ2dyFpbXBvcnRhbnQ7d2lkdGg6MjMuNDM4dnchaW1wb3J0YW50O21hcmdpbi1sZWZ0OjN2dztsaW5lLWhlaWdodDozLjkwNnZ3IWltcG9ydGFudDttYXJnaW4tcmlnaHQ6Mi45M3Z3fS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X2NhbF9sc2VjdGlvbiAuZGh4X2N1c3RvbV9idXR0b257cGFkZGluZzouOTc3dncgNC40OTJ2dyAuOTc3dncgMS41NjN2dzttaW4td2lkdGg6MjUuMzkxdnchaW1wb3J0YW50O21pbi1oZWlnaHQ6NS4zNzF2d30uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9jYWxfbHRpdGxle2hlaWdodDoycmVtIWltcG9ydGFudDtsaW5lLWhlaWdodDoycmVtIWltcG9ydGFudDttYXJnaW4tYm90dG9tOi41cmVtfS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X2NhbF9sdGl0bGUgc3Bhbntmb250LXNpemU6My45MDZ2dyFpbXBvcnRhbnR9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfY2FsX2xzZWN0aW9uIGRpdi5kaHhfY3VzdG9tX2J1dHRvbiwuZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9jYWxfcmFkaW8sLmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfY2FsX3RlbXBsYXRlLC5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X3dyYXBfc2VjdGlvbiAuZGh4X3NlY3Rpb25fdGltZSBzZWxlY3QsLmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIHNlbGVjdCwuZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgdGV4dGFyZWF7Zm9udC1zaXplOjMuNXZ3O2xpbmUtaGVpZ2h0OjMuNXZ3fS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X2NhbF9sc2VjdGlvbiBkaXYuZGh4X2N1c3RvbV9idXR0b24gbGFiZWwsLmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfY2FsX3JhZGlvIGxhYmVsLC5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X2NhbF90ZW1wbGF0ZSBsYWJlbCwuZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF93cmFwX3NlY3Rpb24gLmRoeF9zZWN0aW9uX3RpbWUgc2VsZWN0IGxhYmVsLC5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSBzZWxlY3QgbGFiZWwsLmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIHRleHRhcmVhIGxhYmVse21hcmdpbjoxdncgM3Z3IDF2dyAuNXZ3O3ZlcnRpY2FsLWFsaWduOnRvcH0uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9zZWN0aW9uX3RpbWUgc2VsZWN0LC5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSBzZWxlY3R7bWluLWhlaWdodDo1Ljg1OXZ3fS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X2NhbF9sdGV4dHttYXJnaW4tbGVmdDoyNi41dnchaW1wb3J0YW50O2hlaWdodDoxMDAlIWltcG9ydGFudDttaW4taGVpZ2h0OjQuODgzdnd9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfcmVwZWF0X2NlbnRlciwuZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9yZXBlYXRfZGl2aWRlciwuZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9yZXBlYXRfbGVmdCwuZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9yZXBlYXRfcmlnaHR7aGVpZ2h0OjExLjIzdnd9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfd3JhcF9zZWN0aW9uIC5kaHhfc2VjdGlvbl90aW1le3BhZGRpbmctbGVmdDoyNi41dnchaW1wb3J0YW50O3dpZHRoOjcwdnchaW1wb3J0YW50O21pbi1oZWlnaHQ6MTkuNTMxdnchaW1wb3J0YW50fS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X3dyYXBfc2VjdGlvbiAuZGh4X3NlY3Rpb25fdGltZSBzZWxlY3R7ZmxvYXQ6bGVmdDttYXJnaW46MS40NjV2dyAuOTc3dncgMS40NjV2dyAuOTc3dnchaW1wb3J0YW50fS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X3dyYXBfc2VjdGlvbiAuZGh4X3NlY3Rpb25fdGltZSAuZGh4X2xpZ2h0Ym94X3RpbWVfc2VsZWN0e3dpZHRoOjE0LjY0OHZ3O3BhZGRpbmctbGVmdDoxLjk1M3Z3IWltcG9ydGFudH0uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF93cmFwX3NlY3Rpb24gLmRoeF9zZWN0aW9uX3RpbWUgLmRoeF9saWdodGJveF9kYXlfc2VsZWN0e21pbi13aWR0aDo3LjgxM3Z3IWltcG9ydGFudH0uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF93cmFwX3NlY3Rpb24gLmRoeF9zZWN0aW9uX3RpbWUgLmRoeF9saWdodGJveF95ZWFyX3NlbGVjdHttaW4td2lkdGg6MTMuNjcydnchaW1wb3J0YW50fS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X3dyYXBfc2VjdGlvbiAuZGh4X3NlY3Rpb25fdGltZSAuZGh4X2xpZ2h0Ym94X21vbnRoX3NlbGVjdHt3aWR0aDoyMC41MDh2dyFpbXBvcnRhbnR9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfY2FsX3dpZGVfY2hlY2tib3h7aGVpZ2h0OjEwMCUhaW1wb3J0YW50fS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X211bHRpX3NlbGVjdF9jb250cm9se2hlaWdodDoxMDAlIWltcG9ydGFudDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfbXVsdGlfc2VsZWN0X2NvbnRyb2wgaW5wdXR7dmVydGljYWwtYWxpZ246bWlkZGxlfS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSBpbnB1dHt3aWR0aDo0Ljg4M3Z3O2hlaWdodDo0Ljg4M3Z3fS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X2N1c3RvbV9idXR0b24gZGl2e2hlaWdodDozLjEyNXZ3fS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X2N1c3RvbV9idXR0b24gLmRoeF9jdXN0b21fYnV0dG9uX3JlY3VycmluZ3tiYWNrZ3JvdW5kLXNpemU6Ny44MTN2dyFpbXBvcnRhbnQ7d2lkdGg6Ni44MzZ2dyFpbXBvcnRhbnQ7aGVpZ2h0OjYuODM2dnchaW1wb3J0YW50O2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdCFpbXBvcnRhbnQ7YmFja2dyb3VuZC1wb3NpdGlvbjotMjVweCAtMXB4IWltcG9ydGFudDtwYWRkaW5nLXRvcDowIWltcG9ydGFudH0uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF93cmFwX3NlY3Rpb257bWluLWhlaWdodDo3LjgxM3Z3IWltcG9ydGFudDttYXgtd2lkdGg6OTIuNzczdnchaW1wb3J0YW50O21hcmdpbjouOTc3dncgMH0uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9mb3JtX3JlcGVhdHttYXJnaW46Ni44MzZ2dyAwIDAgMjMuNDM4dnchaW1wb3J0YW50fS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X2Zvcm1fcmVwZWF0IGZvcm17aGVpZ2h0OjQ4LjgyOHZ3IWltcG9ydGFudH0uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9mb3JtX3JlcGVhdCBkaXZ7d2lkdGg6NzB2dyFpbXBvcnRhbnR9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXQgLmRoeF9yZXBlYXRfbGVmdCBicntjb250ZW50OicgJ30uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9mb3JtX3JlcGVhdCBpbnB1dHt0b3A6MS40NjV2dyFpbXBvcnRhbnR9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXQgc2VsZWN0e3dpZHRoOjE0LjY0OHZ3IWltcG9ydGFudH0uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9mb3JtX3JlcGVhdCBsYWJlbHtwYWRkaW5nLXJpZ2h0OjEuNDY1dnd9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXQgLmRoeF9yZXBlYXRfZGF0ZSwuZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9mb3JtX3JlcGVhdCAuZGh4X3JlcGVhdF90ZXh0LC5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X2Zvcm1fcmVwZWF0IGZvcm0sLmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXQgZm9ybSBzZWxlY3QsLmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXQgbGFiZWx7Zm9udC1zaXplOjIuOTN2dyFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6Mi45M3Z3IWltcG9ydGFudH0uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9mb3JtX3JlcGVhdCAuZGh4X3JlcGVhdF9jZW50ZXJ7aGVpZ2h0OmF1dG8haW1wb3J0YW50fS5kaHhfY2FsX2xpZ2h0LmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X2Zvcm1fcmVwZWF0IC5kaHhfcmVwZWF0X3RleHR7d2lkdGg6Ni44MzZ2dyFpbXBvcnRhbnQ7aGVpZ2h0OjUuODU5dnchaW1wb3J0YW50O2JvcmRlcjoxcHggc29saWQgI2NlY2VjZTtiYWNrZ3JvdW5kLWNvbG9yOiNmOWY5Zjl9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXQgLmRoeF9yZXBlYXRfY2hlY2tib3h7d2lkdGg6Mi45M3Z3IWltcG9ydGFudDtoZWlnaHQ6Mi45M3Z3IWltcG9ydGFudH0uZGh4X2NhbF9saWdodC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9mb3JtX3JlcGVhdCAuZGh4X3JlcGVhdF9kYXlzIGxhYmVse2ZvbnQtc2l6ZToyLjQ0MXZ3IWltcG9ydGFudDtsaW5lLWhlaWdodDoyLjV2dyFpbXBvcnRhbnR9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXQgLmRoeF9yZXBlYXRfcmlnaHR7aGVpZ2h0OmF1dG8haW1wb3J0YW50O2Zsb2F0OmxlZnR9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXQgLmRoeF9yZXBlYXRfcmlnaHQgLmRoeF9yZXBlYXRfZGF0ZXt3aWR0aDoxOS41MzF2dyFpbXBvcnRhbnQ7aGVpZ2h0OjcuODEzdnchaW1wb3J0YW50O3BhZGRpbmctbGVmdDoxLjQ2NXZ3IWltcG9ydGFudDttYXJnaW4tdG9wOjEuNDY1dnd9LmRoeF9jYWxfbGlnaHQuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXQgLmRoeF9yZXBlYXRfZGl2aWRlcntib3JkZXItdG9wOjFweCBzb2xpZCAjY2VjZWNlO2JvcmRlci1sZWZ0OjA7d2lkdGg6NzB2dztoZWlnaHQ6MXB4fS5kaHhfY2FsX2xpZ2h0X3J0bC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9jYWxfbGFyZWF7bWFyZ2luLXJpZ2h0OjAhaW1wb3J0YW50fS5kaHhfY2FsX2xpZ2h0X3J0bC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9jYWxfbHNlY3Rpb257bWFyZ2luLWxlZnQ6MCFpbXBvcnRhbnQ7bWFyZ2luLXJpZ2h0OjAhaW1wb3J0YW50fS5kaHhfY2FsX2xpZ2h0X3J0bC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9jYWxfbHRleHR7bWFyZ2luLXJpZ2h0OjIzLjQzOHZ3IWltcG9ydGFudDttYXJnaW4tbGVmdDowIWltcG9ydGFudH0uZGh4X2NhbF9saWdodF9ydGwuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfd3JhcF9zZWN0aW9uIC5kaHhfY2FsX3dpZGVfY2hlY2tib3ggaW5wdXRbdHlwZT1jaGVja2JveF17bWFyZ2luOi43ODF2dyAxLjM2N3Z3IDAgMH0uZGh4X2NhbF9saWdodF9ydGwuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfd3JhcF9zZWN0aW9uIC5kaHhfc2VjdGlvbl90aW1le3BhZGRpbmctcmlnaHQ6MjMuNDM4dnchaW1wb3J0YW50O3BhZGRpbmctbGVmdDowIWltcG9ydGFudH0uZGh4X2NhbF9saWdodF9ydGwuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfd3JhcF9zZWN0aW9uIC5kaHhfc2VjdGlvbl90aW1lIHNlbGVjdHtmbG9hdDpyaWdodH0uZGh4X2NhbF9saWdodF9ydGwuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfd3JhcF9zZWN0aW9uIC5kaHhfc2VjdGlvbl90aW1lIC5kaHhfbGlnaHRib3hfdGltZV9zZWxlY3R7cGFkZGluZy1yaWdodDoxLjk1M3Z3IWltcG9ydGFudDtwYWRkaW5nLWxlZnQ6MCFpbXBvcnRhbnR9LmRoeF9jYWxfbGlnaHRfcnRsLmRoeF9jYWxfbGlnaHRfcmVzcG9uc2l2ZSAuZGh4X3dyYXBfc2VjdGlvbiAuZGh4X3NlY3Rpb25fdGltZSBzcGFue2Rpc3BsYXk6bm9uZX0uZGh4X2NhbF9saWdodF9ydGwuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXR7bWFyZ2luOjYuODM2dncgMjMuNDM4dncgMCAwIWltcG9ydGFudH0uZGh4X2NhbF9saWdodF9ydGwuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXQgbGFiZWx7cGFkZGluZy1sZWZ0OjEuNDY1dnc7cGFkZGluZy1yaWdodDowIWltcG9ydGFudH0uZGh4X2NhbF9saWdodF9ydGwuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXQgLmRoeF9yZXBlYXRfcmlnaHR7ZmxvYXQ6bGVmdH0uZGh4X2NhbF9saWdodF9ydGwuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfZm9ybV9yZXBlYXQgLmRoeF9yZXBlYXRfcmlnaHQgLmRoeF9yZXBlYXRfZGF0ZXtwYWRkaW5nLXJpZ2h0OjEuNDY1dnchaW1wb3J0YW50O3BhZGRpbmctbGVmdDowIWltcG9ydGFudH0uZGh4X2NhbF9saWdodF9ydGwuZGh4X2NhbF9saWdodF9yZXNwb25zaXZlIC5kaHhfbXVsdGlfc2VsZWN0X2NvbnRyb2wuZGh4X211bHRpX3NlbGVjdF9jb250cm9sX3ZlcnRpY2Fse2Zsb2F0OnJpZ2h0fS5kaHhfY2FsX2xpZ2h0X3J0bC5kaHhfY2FsX2xpZ2h0X3Jlc3BvbnNpdmUgLmRoeF9tdWx0aV9zZWxlY3RfY29udHJvbHtmbG9hdDphdXRvO2Zsb2F0OnVuc2V0fX0uZGh4X21pbmljYWxfcG9wdXB7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDoxNjt3aWR0aDoyNTFweDtoZWlnaHQ6MTc1cHh9LmRoeF9zY2FsZV9iYXJfaGVhZGVye3Bvc2l0aW9uOmFic29sdXRlO2JvcmRlci1ib3R0b206MXB4IGRvdHRlZCAjYTM5NTg4O3dpZHRoOjEwMCV9LmRoeF9leHBhbmRfaWNvbntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO2JhY2tncm91bmQtaW1hZ2U6dXJsKGltZ3MvY29sbGFwc2VfZXhwYW5kX2ljb24uZ2lmKTt3aWR0aDoxOHB4O2hlaWdodDoxOHB4O2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQtcG9zaXRpb246MCAxOHB4O3otaW5kZXg6NH0uZGh4X3NjaGVkdWxlcl9hZ2VuZGEgLmRoeF9jYWxfZGF0YXtiYWNrZ3JvdW5kLWltYWdlOnVybChpbWdzL2RhdGFiZy5wbmcpfS5kaHhfYWdlbmRhX2FyZWF7d2lkdGg6MTAwJTtvdmVyZmxvdy15OmF1dG87YmFja2dyb3VuZC1pbWFnZTp1cmwoaW1ncy9kYXRhYmcucG5nKX0uZGh4X2FnZW5kYV9saW5le2hlaWdodDoyMXB4O2NsZWFyOmJvdGg7b3ZlcmZsb3c6aGlkZGVufS5kaHhfYWdlbmRhX2xpbmUgZGl2e2Zsb2F0OmxlZnQ7d2lkdGg6MTg4cHg7Ym9yZGVyLXJpZ2h0OjFweCBkb3R0ZWQgIzg4OTRhMzt0ZXh0LWFsaWduOmNlbnRlcjtsaW5lLWhlaWdodDoyMXB4O292ZXJmbG93OmhpZGRlbn0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfYWdlbmRhX2xpbmUgZGl2e2Zsb2F0OnJpZ2h0fS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9hZ2VuZGFfbGluZSAuZGVzY3JpcHRpb25faGVhZGVye3BhZGRpbmctcmlnaHQ6MTVweDtmbG9hdDpyaWdodH0uZGh4X2NhbF9oZWFkZXIgZGl2LmRoeF9hZ2VuZGFfbGluZSBkaXYsLmRoeF9jYWxfaGVhZGVyIGRpdi5kaHhfYWdlbmRhX2xpbmUgc3BhbiwuZGh4X2NhbF9oZWFkZXIgZGl2LmRoeF9tYXBfbGluZXtmb250LXdlaWdodDo0MDA7Y29sb3I6Izc0NzQ3M30uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfY2FsX2hlYWRlciBkaXYuZGh4X21hcF9saW5le2Zsb2F0OnJpZ2h0fS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9hZ2VuZGFfYXJlYSAuZGh4X2FnZW5kYV9saW5lIGRpdntib3JkZXItbGVmdDowIGRvdHRlZCAjMDAwfS5kaHhfYWdlbmRhX2FyZWEgLmRoeF9hZ2VuZGFfbGluZSBkaXZ7Ym9yZGVyLXJpZ2h0OjAgZG90dGVkICMwMDB9LmRoeF92X2JvcmRlcntwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjE4N3B4O3RvcDowO2JvcmRlci1yaWdodDoxcHggZG90dGVkICM4ODk0YTM7d2lkdGg6MXB4O2hlaWdodDoxMDAlfS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF92X2JvcmRlcntyaWdodDoxODZweDtsZWZ0OnVuc2V0fS5kaHhfYWdlbmRhX2xpbmUgLmRoeF9ldmVudF9pY29ue3dpZHRoOjIwcHg7Ym9yZGVyLXdpZHRoOjA7YmFja2dyb3VuZDp1cmwoaW1ncy9pY29uLnBuZykgbm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246NXB4IDRweDtjdXJzb3I6cG9pbnRlcn0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfYWdlbmRhX2xpbmUgLmRoeF9ldmVudF9pY29ue2JhY2tncm91bmQtcG9zaXRpb24teDoycHh9LmRoeF9hZ2VuZGFfbGluZSBzcGFue3BhZGRpbmctbGVmdDo1cHg7bGluZS1oZWlnaHQ6MjFweH0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfYWdlbmRhX2xpbmUgc3BhbntwYWRkaW5nLWxlZnQ6MDtwYWRkaW5nLXJpZ2h0OjVweH0uZGh4X3llYXJfYm9keXtib3JkZXItbGVmdDoxcHggc29saWQgI2NlY2VjZX0uZGh4X3llYXJfd2Vla3twb3NpdGlvbjpyZWxhdGl2ZX0uZGh4X3NjYWxlX2Jhcl9sYXN0e2JvcmRlci1yaWdodDoxcHggc29saWQgI2NlY2VjZX0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfeWVhcl9ib2R5e2JvcmRlci1sZWZ0OjA7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF95ZWFyX2JveCAuZGh4X3NjYWxlX2Jhcl9sYXN0e2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfeWVhcl9tb250aHtoZWlnaHQ6MThweDtwYWRkaW5nLXRvcDozcHg7Ym9yZGVyOjFweCBzb2xpZCAjY2VjZWNlO3RleHQtYWxpZ246Y2VudGVyO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uZGh4X3llYXJfYm9keSAuZGh4X2FmdGVyIC5kaHhfbW9udGhfaGVhZCwuZGh4X3llYXJfYm9keSAuZGh4X2FmdGVyIC5kaHhfbW9udGhfaGVhZCBhLC5kaHhfeWVhcl9ib2R5IC5kaHhfYmVmb3JlIC5kaHhfbW9udGhfaGVhZCwuZGh4X3llYXJfYm9keSAuZGh4X2JlZm9yZSAuZGh4X21vbnRoX2hlYWQgYXtjb2xvcjojZTJlM2U2fS5kaHhfeWVhcl9ib2R5IC5kaHhfbW9udGhfYm9keXtoZWlnaHQ6MDtvdmVyZmxvdzpoaWRkZW59LmRoeF9tb250aF9oZWFkLmRoeF95ZWFyX2V2ZW50e2JhY2tncm91bmQtY29sb3I6I2ZmZTc2Mztjb2xvcjonJ30uZGh4X3llYXJfYm9keSAuZGh4X2FmdGVyIC5kaHhfbW9udGhfaGVhZCwuZGh4X3llYXJfYm9keSAuZGh4X2JlZm9yZSAuZGh4X21vbnRoX2hlYWR7Y3Vyc29yOmRlZmF1bHR9LmRoeF95ZWFyX3Rvb2x0aXB7Ym9yZGVyOjFweCBzb2xpZCAjYmJiO2JhY2tncm91bmQtaW1hZ2U6dXJsKGltZ3MvZGF0YWJnLnBuZyk7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDoxMjt3aWR0aDozMDBweDtoZWlnaHQ6YXV0bztmb250LWZhbWlseTpUYWhvbWE7Zm9udC1zaXplOjhwdDtvdmVyZmxvdzpoaWRkZW59LmRoeF90b29sdGlwX2xpbmV7bGluZS1oZWlnaHQ6MjBweDtoZWlnaHQ6MjBweDtvdmVyZmxvdzpoaWRkZW59LmRoeF90b29sdGlwX2xpbmUgLmRoeF9ldmVudF9pY29ue3dpZHRoOjIwcHg7aGVpZ2h0OjIwcHg7cGFkZGluZy1yaWdodDoxMHB4O2Zsb2F0OmxlZnQ7Ym9yZGVyLXdpZHRoOjA7cG9zaXRpb246cmVsYXRpdmU7YmFja2dyb3VuZDp1cmwoaW1ncy9pY29uLnBuZykgbm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246NXB4IDRweDtjdXJzb3I6cG9pbnRlcn0uZGh4X3Rvb2x0aXBfZGF0ZXtmbG9hdDpsZWZ0O3dpZHRoOmF1dG87cGFkZGluZy1sZWZ0OjVweDt0ZXh0LWFsaWduOmNlbnRlcn0uZGh4X3RleHRfZGlzYWJsZWR7Y29sb3I6IzJlMmUyZTtmb250LWZhbWlseTpUYWhvbWEsc2FuLXNlcmlmO2ZvbnQtc2l6ZTo4cHR9LmRoeF9taW5pX2NhbGVuZGFyey1tb3otYm94LXNoYWRvdzo1cHggNXB4IDVweCAjODg4Oy1raHRtbC1ib3gtc2hhZG93OjVweCA1cHggNXB4ICM4ODg7LW1vei11c2VyLXNlbGVjdDotbW96LW5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy11c2VyLXNlbGVjdDpub25lfS5kaHhfbWluaV9jYWxlbmRhciAuZGh4X21vbnRoX2hlYWR7Y3Vyc29yOnBvaW50ZXJ9LmRoeF9taW5pX2NhbGVuZGFyIC5kaHhfY2FsZW5kYXJfY2xpY2t7YmFja2dyb3VuZC1jb2xvcjojYzJkNWZjfS5kaHhfY2FsX25hdmxpbmUgZGl2LmRoeF9taW5pY2FsX2ljb257d2lkdGg6MThweDtoZWlnaHQ6MThweDtsZWZ0OjE5MHB4O3RvcDoxcHg7Y3Vyc29yOnBvaW50ZXI7YmFja2dyb3VuZDp1cmwoaW1nc19kaHhfdGVycmFjZS9jYWxlbmRhci5naWYpIG5vLXJlcGVhdH0uZGh4X2dyaWRfcnRse2RpcmVjdGlvbjpydGx9LmRoeF9tYXRyaXhfc2NlbGwsLmRoeF90aW1lbGluZV9zY2FsZV9oZWFkZXJ7aGVpZ2h0OjEwMCU7Zm9udC1mYW1pbHk6VGFob21hLHNhbi1zZXJpZjtmb250LXNpemU6OHB0O2NvbG9yOmluaGVyaXQ7Zm9udC13ZWlnaHQ6NTAwfS5kaHhfbWF0cml4X2NlbGwsLmRoeF9tYXRyaXhfc2NlbGx7b3ZlcmZsb3c6aGlkZGVuO3RleHQtYWxpZ246Y2VudGVyO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjY2VjZWNlO2JvcmRlci1yaWdodDoxcHggc29saWQgI2NlY2VjZX0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfbWF0cml4X2NlbGwsLmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X21hdHJpeF9zY2VsbHtib3JkZXItcmlnaHQ6dW5zZXQ7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNjZWNlY2V9LmRoeF90aW1lbGluZV9zY2FsZV9oZWFkZXJ7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF90aW1lbGluZV9zY2FsZV9oZWFkZXJ7Ym9yZGVyLXJpZ2h0OnVuc2V0O2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfY2FsX2RhdGEgLmRoeF90aW1lbGluZV90YWJsZV93cmFwcGVyIGRpdntib3gtc2l6aW5nOmJvcmRlci1ib3h9LmRoeF9tYXRyaXhfY2VsbHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmRoeF9tYXRyaXhfbGluZXtvdmVyZmxvdzpoaWRkZW59LmRoeF9tYXRyaXhfY2VsbCBkaXYsLmRoeF9tYXRyaXhfc2NlbGwgZGl2e292ZXJmbG93OmhpZGRlbjt0ZXh0LWFsaWduOmNlbnRlcjtoZWlnaHQ6YXV0b30uZGh4X2NhbF9sc2VjdGlvbiAuZGh4X3JlYWRvbmx5e2ZvbnQtc2l6ZTo5cHQ7Zm9udC1zaXplOjhwdDtwYWRkaW5nOjJweDtjb2xvcjojODg3YTJlfS5kaHhfY2FsX2V2ZW50X2xpbmUgLmRoeF9ldmVudF9yZXNpemV7Y3Vyc29yOnctcmVzaXplO2N1cnNvcjpldy1yZXNpemU7YmFja2dyb3VuZDp1cmwoaW1nc19kaHhfdGVycmFjZS9yZXNpemVfZG90cy5wbmcpIHJlcGVhdC15O3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3dpZHRoOjRweDtoZWlnaHQ6MTAwJX0uZGh4X2V2ZW50X3Jlc2l6ZV9zdGFydHtsZWZ0OjB9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X2V2ZW50X3Jlc2l6ZV9zdGFydHtsZWZ0OmF1dG87bGVmdDp1bnNldDtyaWdodDowfS5kaHhfZXZlbnRfcmVzaXplX2VuZHtyaWdodDowfS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9ldmVudF9yZXNpemVfZW5ke3JpZ2h0OmF1dG87cmlnaHQ6dW5zZXQ7bGVmdDowfS5kaHhfZGF0YV90YWJsZS5mb2xkZXIgLmRoeF9tYXRyaXhfY2VsbCwuZGh4X21hdHJpeF9zY2VsbC5mb2xkZXJ7YmFja2dyb3VuZC1jb2xvcjojOTY5Mzk0O2N1cnNvcjpwb2ludGVyfS5kaHhfbWF0cml4X3NjZWxsIC5kaHhfc2NlbGxfbGV2ZWwwe3BhZGRpbmctbGVmdDo1cHh9LmRoeF9tYXRyaXhfc2NlbGwgLmRoeF9zY2VsbF9sZXZlbDF7cGFkZGluZy1sZWZ0OjIwcHh9LmRoeF9tYXRyaXhfc2NlbGwgLmRoeF9zY2VsbF9sZXZlbDJ7cGFkZGluZy1sZWZ0OjM1cHh9LmRoeF9tYXRyaXhfc2NlbGwgLmRoeF9zY2VsbF9sZXZlbDN7cGFkZGluZy1sZWZ0OjUwcHh9LmRoeF9tYXRyaXhfc2NlbGwgLmRoeF9zY2VsbF9sZXZlbDR7cGFkZGluZy1sZWZ0OjY1cHh9LmRoeF9tYXRyaXhfc2NlbGwuZm9sZGVye2JvcmRlci1yaWdodDowO2ZvbnQtd2VpZ2h0OjcwMDt0ZXh0LWFsaWduOmxlZnR9LmRoeF9tYXRyaXhfc2NlbGwuZm9sZGVyIC5kaHhfc2NlbGxfZXhwYW5ke2Zsb2F0OmxlZnQ7d2lkdGg6MTBweDtwYWRkaW5nLXJpZ2h0OjNweDtwb3NpdGlvbjpyZWxhdGl2ZX0uZGh4X21hdHJpeF9zY2VsbC5mb2xkZXIgLmRoeF9zY2VsbF9uYW1le2Zsb2F0OmxlZnQ7d2lkdGg6YXV0bztjb2xvcjppbmhlcml0O3RleHQtdHJhbnNmb3JtOm5vbmU7Zm9udC13ZWlnaHQ6aW5oZXJpdH0uZGh4X21hdHJpeF9zY2VsbC5pdGVtIC5kaHhfc2NlbGxfbmFtZXtwYWRkaW5nLWxlZnQ6MTVweDt0ZXh0LWFsaWduOmxlZnR9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X21hdHJpeF9zY2VsbCAuZGh4X3NjZWxsX2xldmVsMHtwYWRkaW5nLWxlZnQ6MDtwYWRkaW5nLXJpZ2h0OjVweH0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfbWF0cml4X3NjZWxsIC5kaHhfc2NlbGxfbGV2ZWwxe3BhZGRpbmctbGVmdDowO3BhZGRpbmctcmlnaHQ6MjBweH0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfbWF0cml4X3NjZWxsIC5kaHhfc2NlbGxfbGV2ZWwye3BhZGRpbmctbGVmdDowO3BhZGRpbmctcmlnaHQ6MzVweH0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfbWF0cml4X3NjZWxsIC5kaHhfc2NlbGxfbGV2ZWwze3BhZGRpbmctbGVmdDowO3BhZGRpbmctcmlnaHQ6NTBweH0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfbWF0cml4X3NjZWxsIC5kaHhfc2NlbGxfbGV2ZWw0e3BhZGRpbmctbGVmdDowO3BhZGRpbmctcmlnaHQ6NjVweH0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfbWF0cml4X3NjZWxsLmZvbGRlciAuZGh4X3NjZWxsX2V4cGFuZHtmbG9hdDpyaWdodDtwYWRkaW5nLXJpZ2h0OjA7cGFkZGluZy1sZWZ0OjNweH0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfbWF0cml4X3NjZWxsLmZvbGRlciAuZGh4X3NjZWxsX25hbWV7ZmxvYXQ6cmlnaHR9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X21hdHJpeF9zY2VsbC5pdGVtIC5kaHhfc2NlbGxfbmFtZXtwYWRkaW5nLWxlZnQ6MDtwYWRkaW5nLXJpZ2h0OjE1cHg7dGV4dC1hbGlnbjpyaWdodH0uZGh4X2RhdGFfdGFibGUuZm9sZGVyIC5kaHhfbWF0cml4X2NlbGx7Ym9yZGVyLXJpZ2h0OjB9LmRoeF9zZWN0aW9uX3RpbWVsaW5le292ZXJmbG93OmhpZGRlbjtwYWRkaW5nOjRweCAwIDJweCAxMHB4fS5kaHhfc2VjdGlvbl90aW1lbGluZSBzZWxlY3R7d2lkdGg6NTUycHh9LmRoeF9tYXBfYXJlYXt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO292ZXJmbG93LXk6YXV0bztvdmVyZmxvdy14OmhpZGRlbjtiYWNrZ3JvdW5kLWltYWdlOnVybChpbWdzL2RhdGFiZy5wbmcpfS5kaHhfbWFwX2xpbmUgLmRoeF9ldmVudF9pY29ue3dpZHRoOjIwcHg7Ym9yZGVyLXdpZHRoOjA7YmFja2dyb3VuZDp1cmwoaW1ncy9pY29uLnBuZykgbm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246NXB4IDRweDtjdXJzb3I6cG9pbnRlcn0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfbWFwX2xpbmUgLmRoeF9ldmVudF9pY29ue21hcmdpbi1yaWdodDozcHh9LmRoeF9tYXBfbGluZXtoZWlnaHQ6MjFweDtjbGVhcjpib3RoO292ZXJmbG93OmhpZGRlbn0uZGh4X21hcHtwb3NpdGlvbjphYnNvbHV0ZX0uZGh4X21hcF9saW5lIGRpdntmbG9hdDpsZWZ0O2JvcmRlci1yaWdodDoxcHggZG90dGVkICM4ODk0YTM7dGV4dC1hbGlnbjpjZW50ZXI7bGluZS1oZWlnaHQ6MjFweDtvdmVyZmxvdzpoaWRkZW59LmRoeF9tYXBfbGluZSAuaGVhZGxpbmVfZGVzY3JpcHRpb257ZmxvYXQ6bGVmdDtib3JkZXItcmlnaHQ6MXB4IGRvdHRlZCAjODg5NGEzO3RleHQtYWxpZ246Y2VudGVyO2xpbmUtaGVpZ2h0OjIxcHg7b3ZlcmZsb3c6aGlkZGVufS5kaHhfbWFwX2xpbmUgLmRoeF9tYXBfZGVzY3JpcHRpb257ZmxvYXQ6bGVmdDtib3JkZXItcmlnaHQ6MCBkb3R0ZWQgIzg4OTRhMzt0ZXh0LWFsaWduOmNlbnRlcjtsaW5lLWhlaWdodDoyMXB4O292ZXJmbG93OmhpZGRlbn0uZGh4X21hcF9saW5lIC5oZWFkbGluZV9kYXRlLC5kaHhfbWFwX2xpbmUgLmhlYWRsaW5lX2Rlc2NyaXB0aW9ue2JvcmRlci1sZWZ0OjB9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X21hcF9saW5lIGRpdntmbG9hdDpyaWdodH0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfbWFwX2xpbmUgLmhlYWRsaW5lX2RhdGUsLmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X21hcF9saW5lIC5oZWFkbGluZV9kZXNjcmlwdGlvbntmbG9hdDpyaWdodDtib3JkZXItbGVmdDoxcHggc29saWQgI2NlY2VjZTtib3JkZXItcmlnaHQ6MH0uZGh4X21hcF9saW5lIC5saW5lX2Rlc2NyaXB0aW9ue2Zsb2F0OmxlZnQ7Ym9yZGVyLXJpZ2h0OjFweCBkb3R0ZWQgIzg4OTRhMzt0ZXh0LWFsaWduOmxlZnQ7cGFkZGluZy1sZWZ0OjVweDtsaW5lLWhlaWdodDoyMXB4O292ZXJmbG93OmhpZGRlbn0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfbWFwX2xpbmUgLmxpbmVfZGVzY3JpcHRpb257ZmxvYXQ6cmlnaHQ7dGV4dC1hbGlnbjpyaWdodDtwYWRkaW5nLWxlZnQ6dW5zZXR9LmRoeF9tYXBfbGluZS5oaWdobGlnaHR7YmFja2dyb3VuZC1jb2xvcjojYzRjNWNjfS5kaHhfbWFwX2FyZWEgLmRoeF9tYXBfbGluZSBkaXZ7Ym9yZGVyLXJpZ2h0OjAgZG90dGVkICM4ODk0YTN9LmRodG1sWFRvb2x0aXAudG9vbHRpcHstbW96LWJveC1zaGFkb3c6M3B4IDNweCAzcHggIzg4ODstd2Via2l0LWJveC1zaGFkb3c6M3B4IDNweCAzcHggIzg4ODstby1ib3gtc2hhZG93OjNweCAzcHggM3B4ICM4ODg7Ym94LXNoYWRvdzozcHggM3B4IDNweCAjODg4O2JhY2tncm91bmQtY29sb3I6I2ZmZjtjdXJzb3I6ZGVmYXVsdDtwYWRkaW5nOjEwcHg7cG9zaXRpb246Zml4ZWQ7ei1pbmRleDo5O29wYWNpdHk6MTtmb250LWZhbWlseTpBcmlhbCxzYW4tc2VyaWZ9LmRodG1sWFRvb2x0aXBfcnRse2RpcmVjdGlvbjpydGx9LmRoeF90b29sdGlwX3J0bHtkaXJlY3Rpb246cnRsfS5kaHhfdG9vbHRpcF9ydGwgLmRoeF90b29sdGlwX2RhdGV7ZmxvYXQ6cmlnaHQ7cGFkZGluZzowIDVweCAwIDB9LmRoeF90b29sdGlwX3J0bCAuZGh4X3Rvb2x0aXBfbGluZXttYXJnaW46MCAwIDAgMTJweDtwYWRkaW5nOjAgNHB4IDAgMH0uZGh4X3Rvb2x0aXBfcnRsIC5kaHhfdG9vbHRpcF9saW5lIC5kaHhfZXZlbnRfaWNvbi5pY29uX2RldGFpbHN7ZmxvYXQ6cmlnaHQ7cGFkZGluZzowIDAgMCAxMHB4fS5kaHhfY2FsX2NoZWNrYm94IGxhYmVse3BhZGRpbmctbGVmdDo1cHh9LmRoeF9jYWxfbGlnaHQgLnJhZGlve3BhZGRpbmc6MnB4IDAgMnB4IDEwcHh9LmRoeF9jYWxfbGlnaHQgLnJhZGlvIGlucHV0LC5kaHhfY2FsX2xpZ2h0IC5yYWRpbyBsYWJlbHtsaW5lLWhlaWdodDoxNXB4fS5kaHhfY2FsX2xpZ2h0IC5yYWRpbyBpbnB1dHt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7bWFyZ2luOjA7cGFkZGluZzowfS5kaHhfY2FsX2xpZ2h0IC5yYWRpbyBsYWJlbHt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7cGFkZGluZy1yaWdodDoxMHB4fS5kaHhfY2FsX2xpZ2h0IC5jb21ib3twYWRkaW5nOjRweH0uZGh4X2NhbF9saWdodF93aWRlIC5jb21ibz5kaXYsLmRoeF9jYWxfbGlnaHRfd2lkZSAuZGh4X2NvbWJvX2JveHt3aWR0aDo2MDhweCFpbXBvcnRhbnQ7bGVmdDoxMHB4fS5kaHhfd2FfY29sdW1ue2Zsb2F0OmxlZnR9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X3dhX2NvbHVtbntmbG9hdDpyaWdodH0uZGh4X3dhX2NvbHVtbl9sYXN0IC5kaHhfd2FfZGF5X2NvbnR7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNjZWNlY2V9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X3dhX2NvbHVtbl9sYXN0IC5kaHhfd2FfZGF5X2NvbnR7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfd2Ffc2NhbGVfYmFye2ZvbnQtZmFtaWx5OlRhaG9tYSxzYW4tc2VyaWY7cGFkZGluZy1sZWZ0OjEwcHg7Zm9udC1zaXplOjExcHg7Ym9yZGVyLXRvcDoxcHggc29saWQgI2NlY2VjZTtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF93YV9zY2FsZV9iYXJ7cGFkZGluZy1sZWZ0OjA7cGFkZGluZy1yaWdodDoxMHB4fS5kaHhfd2FfZGF5X2RhdGF7YmFja2dyb3VuZC1jb2xvcjojZmNmZWZjO292ZXJmbG93LXk6YXV0b30uZGh4X3dhX2V2X2JvZHl7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2NlY2VjZTtmb250LXNpemU6MTJweDtwYWRkaW5nOjVweCAwIDVweCA3cHh9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X3dhX2V2X2JvZHl7cGFkZGluZzo1cHggN3B4IDVweCAwfS5kaHhfd2FfZXZfYm9keV9ydGx7ZGlyZWN0aW9uOnJ0bH0uZGh4X3dhX2RuZHtmb250LWZhbWlseTpUYWhvbWEsc2FuLXNlcmlmO3Bvc2l0aW9uOmFic29sdXRlO3BhZGRpbmctcmlnaHQ6N3B4O2NvbG9yOiM4ODdhZTIhaW1wb3J0YW50O2JhY2tncm91bmQtY29sb3I6I2ZmZTc2MyFpbXBvcnRhbnQ7Ym9yZGVyOjFweCBzb2xpZCAjYjdhNTQzfS5kaHhfd2FfZXZfYm9keS5kaHhfY2FsX2V2ZW50X3NlbGVjdGVke2JhY2tncm91bmQtY29sb3I6IzljYzFkYjtjb2xvcjojZmZmfS5kaHhfc2Vjb25kX3NjYWxlX2Jhcntib3JkZXItYm90dG9tOjFweCBzb2xpZCAjY2VjZWNlO3BhZGRpbmctdG9wOjJweH0uZGh4X2NhbF9oZWFkZXIgZGl2LmRoeF9ncmlkX2xpbmUgZGl2e2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9jYWxfaGVhZGVyIGRpdi5kaHhfZ3JpZF9saW5lIGRpdntib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNjZWNlY2U7Ym9yZGVyLWxlZnQ6MH0uZGh4X2dyaWRfYXJlYXt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO292ZXJmbG93LXk6YXV0bztiYWNrZ3JvdW5kLWNvbG9yOiNmY2ZlZmN9LmRoeF9ncmlkX2FyZWEgdGFibGV7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO2JvcmRlci1zcGFjaW5nOjA7d2lkdGg6MTAwJTt0YWJsZS1sYXlvdXQ6Zml4ZWR9LmRoeF9ncmlkX2FyZWEgdGR7dGFibGUtbGF5b3V0OmZpeGVkO3RleHQtYWxpZ246Y2VudGVyfS5kaHhfZ3JpZF9saW5le2hlaWdodDoyMXB4O2NsZWFyOmJvdGg7b3ZlcmZsb3c6aGlkZGVufS5kaHhfZ3JpZF9saW5lIGRpdntmbG9hdDpsZWZ0O2N1cnNvcjpkZWZhdWx0O3BhZGRpbmctdG9wOjA7cGFkZGluZy1ib3R0b206MDt0ZXh0LWFsaWduOmNlbnRlcjtsaW5lLWhlaWdodDoyMXB4O292ZXJmbG93OmhpZGRlbn0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfZ3JpZF9saW5lIGRpdntmbG9hdDpyaWdodH0uZGh4X2dyaWRfYXJlYSB0ZCwuZGh4X2dyaWRfbGluZSBkaXZ7cGFkZGluZy1sZWZ0OjhweDtwYWRkaW5nLXJpZ2h0OjhweH0uZGh4X2dyaWRfYXJlYSB0ci5kaHhfZ3JpZF9ldmVudHtoZWlnaHQ6MjFweDtvdmVyZmxvdzpoaWRkZW47bWFyZ2luOjAgMCAxcHggMH0uZGh4X2dyaWRfYXJlYSB0ci5kaHhfZ3JpZF9ldmVudCB0ZHtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjZWNlZWY0fS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9ncmlkX2FyZWEgdHIuZGh4X2dyaWRfZXZlbnQgdGR7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2VjZWVmNDtkaXJlY3Rpb246bHRyfS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9tYXBfbGluZSBkaXYuZGh4X21hcF9ldmVudF90aW1le2Zsb2F0OnJpZ2h0O2RpcmVjdGlvbjpsdHJ9LmRoeF9ncmlkX2FyZWEgdHIuZGh4X2dyaWRfZXZlbnQ6bnRoLWNoaWxkKDJuKSB0ZCwuZGh4X2dyaWRfYXJlYSB0ci5kaHhfZ3JpZF9ldmVudDpudGgtY2hpbGQoMm4rMSkgdGR7Ym9yZGVyLWJvdHRvbS13aWR0aDowO2JvcmRlci1ib3R0b20tc3R5bGU6bm9uZX0uZGh4X2dyaWRfYXJlYSB0ci5kaHhfZ3JpZF9ldmVudDpudGgtY2hpbGQoMm4pe2JhY2tncm91bmQtY29sb3I6I2VjZWVmNH0uZGh4X2dyaWRfYXJlYSAuZGh4X2dyaWRfZHVtbXl7dGFibGUtbGF5b3V0OmF1dG87bWFyZ2luOjAhaW1wb3J0YW50O3BhZGRpbmc6MCFpbXBvcnRhbnR9LmRoeF9ncmlkX3ZfYm9yZGVye3Bvc2l0aW9uOmFic29sdXRlO2JvcmRlci1yaWdodDoxcHggc29saWQgI2E0YmVkNDt3aWR0aDoxcHg7aGVpZ2h0OjEwMCV9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X2dyaWRfdl9ib3JkZXJ7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNhNGJlZDQ7Ym9yZGVyLXJpZ2h0OjB9LmRoeF9ncmlkX2V2ZW50X3NlbGVjdGVke2JhY2tncm91bmQtY29sb3I6IzljYzFkYiFpbXBvcnRhbnQ7Y29sb3I6I2ZmZiFpbXBvcnRhbnR9LmRoeF9ncmlkX3NvcnRfZGVzYyAuZGh4X2dyaWRfdmlld19zb3J0e2JhY2tncm91bmQtcG9zaXRpb246MCAtNTVweH0uZGh4X2dyaWRfc29ydF9hc2MgLmRoeF9ncmlkX3ZpZXdfc29ydHtiYWNrZ3JvdW5kLXBvc2l0aW9uOjAgLTY2cHh9LmRoeF9ncmlkX3ZpZXdfc29ydHt3aWR0aDoxMHB4O2hlaWdodDoxMHB4O3Bvc2l0aW9uOmFic29sdXRlO2JvcmRlcjpub25lIWltcG9ydGFudDt0b3A6NXB4O2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtiYWNrZ3JvdW5kLWltYWdlOnVybChpbWdzL2ltYWdlcy5wbmcpfS5kaHhfbWFya2VkX3RpbWVzcGFue3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7bWFyZ2luLWxlZnQ6MH0uZGh4X3RpbWVfYmxvY2t7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTtiYWNrZ3JvdW5kOnNpbHZlcjtvcGFjaXR5Oi40O3otaW5kZXg6MX0uZGh4X3RpbWVfYmxvY2tfcmVzZXR7b3BhY2l0eToxfS5kaHhfc2NoZWR1bGVyX21vbnRoIC5kaHhfbWFya2VkX3RpbWVzcGFue2Rpc3BsYXk6bm9uZX0uZGh4X21pbmlfY2FsZW5kYXIgLmRoeF9tYXJrZWRfdGltZXNwYW57ZGlzcGxheTpub25lfS5kaHhfbm93X3RpbWV7d2lkdGg6MTAwJTtib3JkZXItYm90dG9tOjJweCBzb2xpZCByZWR9LmRoeF9zY2hlZHVsZXJfbW9udGggLmRoeF9ub3dfdGltZXtib3JkZXItYm90dG9tOjA7Ym9yZGVyLWxlZnQ6MnB4IHNvbGlkIHJlZH0uZGh4X21hdHJpeF9ub3dfdGltZXtib3JkZXItbGVmdDoycHggc29saWQgcmVkfS5kaHhfbWF0cml4X25vd190aW1lLC5kaHhfbm93X3RpbWV7b3BhY2l0eTouNX0uZGh4X2NhbF9xdWlja19pbmZve2JvcmRlcjoycHggc29saWQgIzg4ODtib3JkZXItcmFkaXVzOjVweDtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4Ojg7Zm9udC1mYW1pbHk6VGFob21hLHNhbi1zZXJpZjtmb250LXNpemU6OHB0O2JhY2tncm91bmQtY29sb3I6cmdiYSg1MCw1MCw1MCwuNSk7cGFkZGluZzowIDAgMCA3cHg7d2lkdGg6MzAwcHg7dHJhbnNpdGlvbjpsZWZ0IC41cyBlYXNlLHJpZ2h0IC41czstbW96LXRyYW5zaXRpb246bGVmdCAuNXMgZWFzZSxyaWdodCAuNXM7LXdlYmtpdC10cmFuc2l0aW9uOmxlZnQgLjVzIGVhc2UscmlnaHQgLjVzOy1vLXRyYW5zaXRpb246bGVmdCAuNXMgZWFzZSxyaWdodCAuNXN9LmRoeF9ub19hbmltYXRle3RyYW5zaXRpb246bm9uZTstbW96LXRyYW5zaXRpb246bm9uZTstd2Via2l0LXRyYW5zaXRpb246bm9uZTstby10cmFuc2l0aW9uOm5vbmV9LmRoeF9jYWxfcXVpY2tfaW5mby5kaHhfcWlfbGVmdCAuZGh4X3FpX2JpZ19pY29ue2Zsb2F0OnJpZ2h0fS5kaHhfcXVpY2tfaW5mb19ydGwuZGh4X2NhbF9xdWlja19pbmZvLmRoeF9xaV9sZWZ0IC5kaHhfcWlfYmlnX2ljb257ZmxvYXQ6bGVmdH0uZGh4X2NhbF9xaV90aXRsZXtwYWRkaW5nOjVweCAwIDEwcHggNXB4O2NvbG9yOiNmZmY7bGV0dGVyLXNwYWNpbmc6MXB4fS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9jYWxfcWlfdGl0bGV7cGFkZGluZzo1cHggMThweCAxMHB4IDA7dGV4dC1hbGlnbjpyaWdodH0uZGh4X2NhbF9xaV90ZGF0ZXtmb250LXNpemU6MTRweH0uZGh4X2NhbF9xaV90Y29udGVudHtmb250LXNpemU6MThweDtmb250LXdlaWdodDo3MDB9LmRoeF9jYWxfcWlfY29udGVudHtib3JkZXI6MXB4IHNvbGlkICM4ODg7YmFja2dyb3VuZC1jb2xvcjojZmVmZWZlO3BhZGRpbmc6MTZweCA4cHg7Zm9udC1zaXplOjE0cHg7Y29sb3I6IzQ0NDt3aWR0aDoyNzVweDtvdmVyZmxvdzpoaWRkZW59LmRoeF9xdWlja19pbmZvX3J0bCAuZGh4X2NhbF9xaV9jb250ZW50e3BhZGRpbmc6MTZweCA4cHg7ZGlyZWN0aW9uOnJ0bH0uZGh4X3FpX2JpZ19pY29ue21pbi13aWR0aDo2MHB4O3BhZGRpbmc6NXB4IDEwcHggNXB4IDVweDttYXJnaW46NXB4IDlweCA1cHggMDtiYWNrZ3JvdW5kLWNvbG9yOiMxNzk2YjA7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgIzY2Njtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICM2NjY7Ym9yZGVyLXJhZGl1czozcHg7bGluZS1oZWlnaHQ6MjBweDtjb2xvcjojZmZmO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtjdXJzb3I6cG9pbnRlcjtmbG9hdDpsZWZ0fS5kaHhfcXVpY2tfaW5mb19ydGwgLmRoeF9xaV9iaWdfaWNvbntwYWRkaW5nOjVweCA1cHggNXB4IDEwcHg7bWFyZ2luOjVweCAwIDVweCA5cHh9LmRoeF9jYWxfcWlfY29udHJvbHMgZGl2e2Zsb2F0OmxlZnQ7aGVpZ2h0OjIwcHg7dGV4dC1hbGlnbjpjZW50ZXI7bGluZS1oZWlnaHQ6MjBweH0uZGh4X3F1aWNrX2luZm9fcnRsIC5kaHhfY2FsX3FpX2NvbnRyb2xzIGRpdntmbG9hdDpyaWdodH0uZGh4X3F1aWNrX2luZm9fcnRsLmRoeF9xaV9yaWdodCAuZGh4X2NhbF9xaV9jb250cm9sc3twYWRkaW5nLXJpZ2h0OjE1cHh9LmRoeF9xaV9iaWdfaWNvbiAuZGh4X21lbnVfaWNvbnttYXJnaW46MCA4cHggMCAwfS5kaHhfcXVpY2tfaW5mb19ydGwgLmRoeF9xaV9iaWdfaWNvbiAuZGh4X21lbnVfaWNvbnttYXJnaW46MCAwIDAgOHB4fS5kaHhfZHJhZ19tYXJrZXJ7d2lkdGg6MTAwJTtvcGFjaXR5Oi41O2JhY2tncm91bmQtY29sb3I6I2ZmZTc2Mztwb3NpdGlvbjphYnNvbHV0ZTtib3gtc2l6aW5nOmJvcmRlci1ib3ghaW1wb3J0YW50O2JvcmRlci10b3A6MXB4IHNvbGlkICNiNmI2YjY7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2I2YjZiNn0uZGh4X2ZvY3VzX3Nsb3R7YmFja2dyb3VuZDojZmZlNzYzO3Bvc2l0aW9uOmFic29sdXRlO3BvaW50ZXItZXZlbnRzOm5vbmU7b3BhY2l0eTouM30uZGh4X2NhbF9jb250YWluZXIgOmZvY3Vze291dGxpbmUtc3R5bGU6c29saWQ7b3V0bGluZS1zdHlsZTphdXRvfS5kaHhfbm9fc2VsZWN0ey13ZWJraXQtdG91Y2gtY2FsbG91dDpub25lOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTsta2h0bWwtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Oi1tb3otbm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lfS5kaHhfZHJhZ19wbGFjZWhvbGRlcnt6LWluZGV4OjEwO29wYWNpdHk6Ljh9LmRoeF9kcmFnX3BsYWNlaG9sZGVyIC5kaHhfY2FsX3NlbGVjdF9tZW51e2Rpc3BsYXk6bm9uZX0uZGh4X3RpbWVsaW5lX3NjYWxlX2hlYWRlcntwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjI7b3ZlcmZsb3c6aGlkZGVuO3RleHQtYWxpZ246Y2VudGVyO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmRoeF90aW1lbGluZV9sYWJlbF93cmFwcGVye292ZXJmbG93OmhpZGRlbjtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDoxfS5kaHhfdGltZWxpbmVfbGFiZWxfY29se3Bvc2l0aW9uOnJlbGF0aXZlfS5kaHhfdGltZWxpbmVfbGFiZWxfcm93e3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDtiYWNrZ3JvdW5kLWNvbG9yOmluaGVyaXR9LmRoeF90aW1lbGluZV9kYXRhX3dyYXBwZXJ7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDowO2xlZnQ6MDt3aWR0aDoxMDAlfS5kaHhfdGltZWxpbmVfZGF0YV9yb3d7cG9zaXRpb246cmVsYXRpdmV9LmRoeF90aW1lbGluZV9kYXRhX2NlbGx7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7aGVpZ2h0OjEwMCV9LmRoeF90aW1lbGluZV90YWJsZV93cmFwcGVyIC5kaHhfbWFya2VkX3RpbWVzcGFue3otaW5kZXg6MX0uZGh4X3RpbWVsaW5lX3RhYmxlX3dyYXBwZXIgLmRoeF90aW1lX2Jsb2Nre3otaW5kZXg6Mn0uZGh4X3RpbWVsaW5lX3RhYmxlX3dyYXBwZXIgLmRoeF9jYWxfZXZlbnRfbGluZXt6LWluZGV4OjF9LmRoeF90aW1lbGluZV90YWJsZV93cmFwcGVyIC5kaHhfdGltZWxpbmVfc2Nyb2xsYWJsZV9kYXRhe292ZXJmbG93LXg6YXV0b30uZGh0bWx4X21vZGFsX2JveCAqLC5kaHhfY2FsX2RhdGEsLmRoeF9jYWxfZGF0YSBkaXYsLmRoeF9jYWxfZGF0YSB0YWJsZSAqLC5kaHhfY2FsX2hlYWRlciwuZGh4X2NhbF9oZWFkZXIgZGl2LC5kaHhfY2FsX25hdmxpbmUgZGl2LC5kaHhfY2FsX3F1aWNrX2luZm8sLmRoeF9jYWxfcXVpY2tfaW5mbyBkaXYsLmRoeF9tdWx0aV9kYXksLmRoeF9tdWx0aV9kYXkgZGl2LC5kaHhfdG9vbHRpcF9saW5lIGRpdnstd2Via2l0LWJveC1zaXppbmc6Y29udGVudC1ib3g7LW1vei1ib3gtc2l6aW5nOmNvbnRlbnQtYm94O2JveC1zaXppbmc6Y29udGVudC1ib3h9LmRoeF9jYWxfbGlnaHQgLmRoeF9jYWxfbHNlY3Rpb24sLmRoeF9jYWxfbGlnaHQgLmRoeF93cmFwX3NlY3Rpb257LXdlYmtpdC1ib3gtc2l6aW5nOmNvbnRlbnQtYm94Oy1tb3otYm94LXNpemluZzpjb250ZW50LWJveDtib3gtc2l6aW5nOmNvbnRlbnQtYm94fS5kaHhfZm9ybV9yZXBlYXQgbGFiZWx7bWFyZ2luLWJvdHRvbTowfS5kaHhfY2FsX2RhdGEgZGl2LmRoeF9zY2FsZV9ob3VyLC5kaHhfY2FsX2RhdGEgdGFibGUgLmRoeF9tYXRyaXhfY2VsbCwuZGh4X2NhbF9kYXRhIHRhYmxlIC5kaHhfbWF0cml4X3NjZWxsey13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94Oy1tb3otYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveH0uZGh4X2NhbF9ldmVudCBkaXZ7bGluZS1oZWlnaHQ6bm9ybWFsfS5kaHhfY2FsX2RhdGEgdGFibGV7Ym9yZGVyLWNvbGxhcHNlOnNlcGFyYXRlfS5kaHhfY2FsX2xpZ2h0IC5kaHhfY2FsX3JhZGlvIGlucHV0W3R5cGU9cmFkaW9de21hcmdpbjozcHggM3B4IDAgNXB4fS5kaHhfY2FsX2xpZ2h0X3J0bCAuZGh4X2NhbF9yYWRpbyBpbnB1dFt0eXBlPXJhZGlvXXttYXJnaW46M3B4IDVweCAwIDNweH0uZGh4X2NhbF9saWdodCAuZGh4X2NhbF9yYWRpbyBsYWJlbHtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW46MDtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6LTNweH0uZGh4X2NhbF9saWdodF9ydGwgLmRoeF9jYWxfcmFkaW8gbGFiZWx7bWFyZ2luOjB9LmRoeF9jYWxfZXZlbnQgZGl2e2xpbmUtaGVpZ2h0Om5vcm1hbH0uZGh4X2NhbF9jb250YWluZXJ7cG9zaXRpb246cmVsYXRpdmU7b3ZlcmZsb3c6aGlkZGVuO2JhY2tncm91bmQtY29sb3I6I2ZmZjtmb250LWZhbWlseTpBcmlhbCxzYW4tc2VyaWY7Zm9udC1zaXplOjEycHh9LmRoeF9jYWxfY29udGFpbmVyIGRpdnstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDotbW96LW5vbmV9LmRoeF9jYWxfbmF2bGluZXtoZWlnaHQ6MjBweDtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjM7d2lkdGg6NzUwcHg7Y29sb3I6IzJmM2E0OH0uZGh4X2NhbF9uYXZsaW5lIGRpdntwb3NpdGlvbjphYnNvbHV0ZTt3aGl0ZS1zcGFjZTpub3dyYXA7dG9wOjE0cHh9LmRoeF9jYWxfbmF2bGluZSAuZGh4X2NhbF9kYXRle2JvcmRlcjowO2ZvbnQtc2l6ZToxOHB4O2ZvbnQtd2VpZ2h0OjQwMDtmb250LWZhbWlseTpBcmlhbCxzYW4tc2VyaWY7d2lkdGg6MTAwJTt0ZXh0LWFsaWduOmNlbnRlcjtsZWZ0OjA7cGFkZGluZzoxcHggMCAwIDA7Y29sb3I6IzQ1NDU0NDt6LWluZGV4Oi0xfS5kaHhfY2FsX2J1dHRvbiAuZGh4X2xlZnRfYmd7d2lkdGg6MXB4O292ZXJmbG93OmhpZGRlbjtoZWlnaHQ6MTdweDt6LWluZGV4OjU7dG9wOjB9LmRoeF9jYWxfcHJldl9idXR0b257Y3Vyc29yOnBvaW50ZXI7cmlnaHQ6NjFweDtiYWNrZ3JvdW5kLWNvbG9yOm5vbmU7YmFja2dyb3VuZC1pbWFnZTp1cmwoaW1nc19kaHhfdGVycmFjZS9hcnJvd19sZWZ0LnBuZyk7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXIgY2VudGVyO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtoZWlnaHQ6MzBweDt3aWR0aDo0NnB4O2JvcmRlcjoxcHggc29saWQgI2NlY2VjZTtib3JkZXItcmFkaXVzOjVweCAwIDAgNXB4fS5kaHhfY2FsX3RvZGF5X2J1dHRvbntjdXJzb3I6cG9pbnRlcjt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6aW5oZXJpdDtmb250LXdlaWdodDo3MDA7Y29sb3I6Izc0NzQ3MztyaWdodDoxMjNweDtiYWNrZ3JvdW5kLWNvbG9yOm5vbmU7YmFja2dyb3VuZC1pbWFnZTpub25lO2JhY2tncm91bmQtcG9zaXRpb246LTYycHggMDtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7aGVpZ2h0OjMwcHg7d2lkdGg6ODBweDtib3JkZXI6MXB4IHNvbGlkICNjZWNlY2U7Ym9yZGVyLXJhZGl1czo1cHg7dGV4dC1kZWNvcmF0aW9uOm5vbmU7dGV4dC10cmFuc2Zvcm06bm9uZX0uZGh4X2NhbF9uZXh0X2J1dHRvbntjdXJzb3I6cG9pbnRlcjtyaWdodDoxNHB4O2JhY2tncm91bmQtY29sb3I6bm9uZTtiYWNrZ3JvdW5kLWltYWdlOnVybChpbWdzX2RoeF90ZXJyYWNlL2Fycm93X3JpZ2h0LnBuZyk7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXIgY2VudGVyO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtoZWlnaHQ6MzBweDt3aWR0aDo0NnB4O2JvcmRlcjoxcHggc29saWQgI2NlY2VjZTtib3JkZXItcmFkaXVzOjAgNXB4IDVweCAwfS5kaHhfY2FsX3RhYnt3aWR0aDo2MHB4O2hlaWdodDozMHB4O2JhY2tncm91bmQtY29sb3I6bm9uZTt0ZXh0LWFsaWduOmNlbnRlcjt0ZXh0LWRlY29yYXRpb246bm9uZTt0ZXh0LXRyYW5zZm9ybTpub25lO2ZvbnQtd2VpZ2h0OjcwMDtwYWRkaW5nLXRvcDowO2JvcmRlci1yYWRpdXM6MDtjdXJzb3I6cG9pbnRlcjtib3JkZXI6MXB4IHNvbGlkICNjZWNlY2U7Y29sb3I6Izc0NzQ3Mztmb250LXNpemU6aW5oZXJpdH0uZGh4X2NhbF90YWIuYWN0aXZle3RleHQtZGVjb3JhdGlvbjpub25lO2N1cnNvcjpkZWZhdWx0O2ZvbnQtd2VpZ2h0OjcwMDtmb250LXNpemU6aW5oZXJpdDtjb2xvcjojNDU0NTQ0O2JvcmRlcjoxcHggc29saWQgI2NlY2VjZTtib3JkZXItYm90dG9tOjE7YmFja2dyb3VuZC1jb2xvcjojZjBlZGU3O3otaW5kZXg6MjV9LmRoeF9jYWxfdGFiX2ZpcnN0e2JvcmRlci1yYWRpdXM6NXB4IDAgMCA1cHg7Ym9yZGVyLXJpZ2h0OjB9LmRoeF9jYWxfdGFiX2xhc3R7Ym9yZGVyLXJhZGl1czowIDVweCA1cHggMH0uZGh4X2NhbF9kYXRlLC5kaHhfY2FsX25leHRfYnV0dG9uLC5kaHhfY2FsX3ByZXZfYnV0dG9uLC5kaHhfY2FsX3RhYiwuZGh4X2NhbF90b2RheV9idXR0b257bGluZS1oZWlnaHQ6MzBweH0uZGh4X2NhbF9oZWFkZXJ7cG9zaXRpb246YWJzb2x1dGU7b3ZlcmZsb3c6aGlkZGVuO2xlZnQ6MTBweDtiYWNrZ3JvdW5kOiNmZmY7Ym9yZGVyLXRvcDoxcHggc29saWQgI2NlY2VjZTtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNjZWNlY2U7ei1pbmRleDoyfS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9jYWxfaGVhZGVye2xlZnQ6dW5zZXR9LmRoeF9jYWxfZGF0YXstd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXRvcDoxcHggc29saWQgI2NlY2VjZTtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDo2MDBweDtvdmVyZmxvdy15OmF1dG87b3ZlcmZsb3cteDpoaWRkZW47LXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6dG91Y2h9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X2NhbF9kYXRhe2RpcmVjdGlvbjpydGx9LmRoeF9jYWxfZGF0YSwuZGh4X2NhbF9ldmVudCwuZGh4X2NhbF9ldmVudF9jbGVhciwuZGh4X2NhbF9ldmVudF9saW5ley1tcy10b3VjaC1hY3Rpb246cGFuLXk7dG91Y2gtYWN0aW9uOnBhbi15fS5kaHhfc2NhbGVfYmFye3Bvc2l0aW9uOmFic29sdXRlO3RleHQtYWxpZ246Y2VudGVyO2JhY2tncm91bmQtY29sb3I6I2ZmZjtwYWRkaW5nOjJweCAwIDAgMDtib3JkZXItbGVmdDoxcHggc29saWQgI2NlY2VjZTtmb250LXNpemU6MTFweDtmb250LXdlaWdodDppbmhlcml0O2xpbmUtaGVpZ2h0OjE2cHg7Y29sb3I6Izc2NzY3Nn0uc2NoZWR1bGVyX2NvbnRhaW5lcl9yZXNpemVfd2F0Y2hlcntiYWNrZ3JvdW5kOjAgMDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDt6LWluZGV4Oi0xO3BvaW50ZXItZXZlbnRzOm5vbmU7Ym9yZGVyOjA7Ym94LXNpemluZzpib3JkZXItYm94O29wYWNpdHk6MH0uZGh4X3NjYWxlX2hvbGRlcntwb3NpdGlvbjphYnNvbHV0ZTtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNjZWNlY2U7YmFja2dyb3VuZC1pbWFnZTp1cmwoaW1nc19kaHhfdGVycmFjZS9kYXRhYmcucG5nKTstbXMtaW50ZXJwb2xhdGlvbi1tb2RlOm5lYXJlc3QtbmVpZ2hib3I7aW1hZ2UtcmVuZGVyaW5nOi1tb3otY3Jpc3AtZWRnZXM7aW1hZ2UtcmVuZGVyaW5nOmNyaXNwLWVkZ2VzO2ltYWdlLXJlbmRlcmluZzpwaXhlbGF0ZWR9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X3NjYWxlX2hvbGRlcntib3JkZXItbGVmdDoxcHggc29saWQgI2NlY2VjZTtib3JkZXItcmlnaHQ6MH0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfY2FsX2hlYWRlcntib3JkZXItcmlnaHQ6MDtib3JkZXItbGVmdDoxcHggc29saWQgI2NlY2VjZX0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfc2NhbGVfYmFye2JvcmRlci1sZWZ0OjA7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9tb250aF9oZWFke2JvcmRlci1yaWdodDowO2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9tb250aF9ib2R5e2JvcmRlci1yaWdodDowO2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfc2NhbGVfaG9sZGVyX25vd3twb3NpdGlvbjphYnNvbHV0ZTstbXMtaW50ZXJwb2xhdGlvbi1tb2RlOm5lYXJlc3QtbmVpZ2hib3I7aW1hZ2UtcmVuZGVyaW5nOi1tb3otY3Jpc3AtZWRnZXM7aW1hZ2UtcmVuZGVyaW5nOmNyaXNwLWVkZ2VzO2ltYWdlLXJlbmRlcmluZzpwaXhlbGF0ZWR9LmRoeF9zY2FsZV9ob2xkZXJfbm93e3Bvc2l0aW9uOmFic29sdXRlO2JvcmRlci1yaWdodDoxcHggc29saWQgI2NlY2VjZTtiYWNrZ3JvdW5kLWltYWdlOnVybChpbWdzX2RoeF90ZXJyYWNlL2RhdGFiZ19ub3cucG5nKX0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfc2NhbGVfaG9sZGVyX25vd3tib3JkZXItcmlnaHQ6MDtib3JkZXItbGVmdDoxcHggc29saWQgI2NlY2VjZX0uZGh4X3NjYWxlX2hvdXJ7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2NlY2VjZTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7dGV4dC1hbGlnbjpjZW50ZXI7bGluZS1oZWlnaHQ6NDRweDtjb2xvcjojNzY3Njc2O2ZvbnQtc2l6ZToxMXB4O2ZvbnQtd2VpZ2h0OmluaGVyaXQ7b3ZlcmZsb3c6aGlkZGVufS5kaHhfbW9udGhfaGVhZHtoZWlnaHQ6MjFweDtwYWRkaW5nOjAgNXB4IDAgMDtmb250LXNpemU6MTJweDtmb250LXdlaWdodDppbmhlcml0O2xpbmUtaGVpZ2h0OjIxcHg7Y29sb3I6IzM2MmQyNjtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNjZWNlY2U7YmFja2dyb3VuZC1jb2xvcjojZmZmO3RleHQtYWxpZ246cmlnaHR9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X21vbnRoX2hlYWR7dGV4dC1hbGlnbjpsZWZ0O3BhZGRpbmc6MCAwIDAgNXB4fS5kaHhfYWZ0ZXIgLmRoeF9tb250aF9oZWFkLC5kaHhfYmVmb3JlIC5kaHhfbW9udGhfaGVhZHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Y29sb3I6I2JiYn0uZGh4X25vdyAuZGh4X21vbnRoX2hlYWR7YmFja2dyb3VuZC1jb2xvcjojZmZmM2ExO2ZvbnQtd2VpZ2h0OjQwMH0uZGh4X3NjYWxlX2hvdXJfYm9yZGVye2JvcmRlci1sZWZ0OjFweCBkb3R0ZWQgIzg4OTRhM30uZGh4X21vbnRoX2JvZHl7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjY2VjZWNlO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNjZWNlY2U7YmFja2dyb3VuZC1jb2xvcjojZmZmfS5kaHhfYWZ0ZXIgLmRoeF9tb250aF9ib2R5LC5kaHhfYmVmb3JlIC5kaHhfbW9udGhfYm9keXtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmRoeF9ub3cgLmRoeF9tb250aF9ib2R5e2JhY2tncm91bmQtY29sb3I6I2ZmZjNhMX0uZGh4X25vdyAuZGh4X21vbnRoX2hlYWR7YmFja2dyb3VuZC1jb2xvcjojZmZmM2ExfS5kaHhfc2NhbGVfaWdub3Jle2Rpc3BsYXk6bm9uZX0uZGh4X2NhbF9kcmFne3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTM7YmFja2dyb3VuZC1jb2xvcjojZmZlNzYzO2JvcmRlcjoxcHggc29saWQgI2I3YTU0MztvcGFjaXR5Oi41fS5kaHhfbG9hZGluZ3twb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxMjhweDtoZWlnaHQ6MTVweDtiYWNrZ3JvdW5kLWltYWdlOnVybChpbWdzL2xvYWRpbmcuZ2lmKTt6LWluZGV4OjEzfS5kaHhfbXVsdGlfZGF5LC5kaHhfbXVsdGlfZGF5X2ljb257YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlci1yaWdodDoxcHggc29saWQgI2NlY2VjZX0uZGh4X211bHRpX2RheXtwb3NpdGlvbjphYnNvbHV0ZTtib3JkZXItdG9wOjFweCBzb2xpZCAjY2VjZWNlO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXItcmlnaHQ6bm9uZTtib3gtc2hhZG93Om5vbmV9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X211bHRpX2RheXtkaXJlY3Rpb246cnRsfS5kaHhfbXVsdGlfZGF5X2ljb24sLmRoeF9tdWx0aV9kYXlfaWNvbl9zbWFsbHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXIgY2VudGVyO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNjZWNlY2U7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjY2VjZWNlO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdH0uZGh4X2NhbF9jb250YWluZXJfcnRsIC5kaHhfbXVsdGlfZGF5X2ljb24sLmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X211bHRpX2RheV9pY29uX3NtYWxse2JvcmRlci1yaWdodDowO2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfbXVsdGlfZGF5X2ljb257YmFja2dyb3VuZC1pbWFnZTp1cmwoaW1nc19kaHhfdGVycmFjZS9jbG9ja19iaWcuZ2lmKX0uZGh4X211bHRpX2RheV9pY29uX3NtYWxse2JhY2tncm91bmQtaW1hZ2U6dXJsKGltZ3NfZGh4X3RlcnJhY2UvY2xvY2tfc21hbGwuZ2lmKX0uZGh0bWx4TGF5b3V0UG9seUNvbnRhaW5lcl9kaHhfc2t5Ymx1ZSAuZGh4X2NhbF9jb250YWluZXJ7YmFja2dyb3VuZC1jb2xvcjojZDBlNWZmfS5kaHhfbW9udGhfYm9keV9ib3JkZXIsLmRoeF9tb250aF9oZWFkX2JvcmRlciwuZGh4X3NjYWxlX2Jhcl9ib3JkZXIsLmRoeF9zY2FsZV9ob3VyX2JvcmRlcntib3JkZXItbGVmdDoxcHggZG90dGVkICM4ODk0YTN9LmRoeF9jYWxfbmF2bGluZSAuZGh4X2NhbF9leHBvcnR7d2lkdGg6MThweDtoZWlnaHQ6MThweDttYXJnaW46MnB4O2N1cnNvcjpwb2ludGVyO3RvcDowfS5kaHhfY2FsX25hdmxpbmUgLmRoeF9jYWxfZXhwb3J0LnBkZntsZWZ0OjJweDtiYWNrZ3JvdW5kLWltYWdlOnVybChpbWdzL2V4cG9ydF9wZGYucG5nKX0uZGh4X2NhbF9uYXZsaW5lIC5kaHhfY2FsX2V4cG9ydC5pY2Fse2xlZnQ6MjRweDtiYWNrZ3JvdW5kLWltYWdlOnVybChpbWdzL2V4cG9ydF9pY2FsLnBuZyl9LmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleHtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246cm93O2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nOjAgMXZ3O2JveC1zaXppbmc6Ym9yZGVyLWJveH0uZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYntib3gtc2l6aW5nOmJvcmRlci1ib3g7aGVpZ2h0OjMycHh9LmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF90YWJfbGFzdHttYXJnaW4tcmlnaHQ6MTRweH0uZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYntib3JkZXItbGVmdC1zdHlsZTpub25lO2JveC1zaGFkb3c6LTFweCAwIDAgI2NlY2VjZX0uZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX2RhdGV7d2lkdGg6YXV0bztmbGV4LWdyb3c6MX0uZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IGRpdntwb3NpdGlvbjpzdGF0aWN9LmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF9uYXZiYXJfcm93e2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC13cmFwOndyYXA7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmc6MCAxdnc7Ym94LXNpemluZzpib3JkZXItYm94O2hlaWdodDoxMDAlO3dpZHRoOjEwMCU7ZmxleC1ncm93OjE7ZmxleC1zaHJpbms6MX0uZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3ByZXZfYnV0dG9uKy5kaHhfY2FsX25leHRfYnV0dG9ue2JvcmRlci1sZWZ0LXN0eWxlOm5vbmV9LmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF9uYXZiYXJfcm93c19jb250YWluZXJ7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47Ym94LXNpemluZzpib3JkZXItYm94O2ZsZXgtZ3JvdzoxO2hlaWdodDoxMDAlfS5kaHhfY2FsX25hdmxpbmUuZGh4X2NhbF9uYXZsaW5lX2ZsZXggLmRoeF9jYWxfbGluZV9icmVhaywuZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX2xpbmVfc3BhY2Vye2Rpc3BsYXk6YmxvY2s7d2lkdGg6YXV0bztmbGV4LWdyb3c6MX0uZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYl9zdGFuZGFsb25lLC5kaHhfY2FsX25hdmxpbmUuZGh4X2NhbF9uYXZsaW5lX2ZsZXggLmRoeF9jYWxfdG9kYXlfYnV0dG9ue21hcmdpbjowIDdweH1AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6MTAyM3B4KXsuZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYiwuZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYi5hY3RpdmUsLmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF90b2RheV9idXR0b257bWluLXdpZHRoOjR2dztmb250LXNpemU6MS4zdnc7Ym94LXNpemluZzpjb250ZW50LWJveDtwYWRkaW5nOjAgLjV2dzt3aWR0aDphdXRvfS5kaHhfY2FsX25hdmxpbmUuZGh4X2NhbF9uYXZsaW5lX2ZsZXggLmRoeF9jYWxfbmV4dF9idXR0b24sLmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF9wcmV2X2J1dHRvbiwuZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYiwuZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYi5hY3RpdmUsLmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF90b2RheV9idXR0b257aGVpZ2h0OjIuNXZ3O2xpbmUtaGVpZ2h0OjIuNXZ3fS5kaHhfY2FsX25hdmxpbmUuZGh4X2NhbF9uYXZsaW5lX2ZsZXggLmRoeF9jYWxfdGFiX2xhc3R7bWFyZ2luLXJpZ2h0OjJ2d319QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjg0MHB4KXsuZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYiwuZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYi5hY3RpdmUsLmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF90b2RheV9idXR0b257bWluLXdpZHRoOjR2dztmb250LXNpemU6MS41dnc7Ym94LXNpemluZzpjb250ZW50LWJveDtwYWRkaW5nOjAgLjV2dzt3aWR0aDphdXRvfS5kaHhfY2FsX25hdmxpbmUuZGh4X2NhbF9uYXZsaW5lX2ZsZXggLmRoeF9jYWxfbmV4dF9idXR0b24sLmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF9wcmV2X2J1dHRvbiwuZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYiwuZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYi5hY3RpdmUsLmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF90b2RheV9idXR0b257aGVpZ2h0OjR2dztsaW5lLWhlaWdodDo0dnd9LmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF90YWJfbGFzdHttYXJnaW4tcmlnaHQ6MXZ3fS5kaHhfY2FsX25hdmxpbmUuZGh4X2NhbF9uYXZsaW5lX2ZsZXggLmRoeF9jYWxfZGF0ZXtmb250LXNpemU6Mi41dnd9fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo0ODBweCl7LmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF90YWIsLmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF90YWIuYWN0aXZlLC5kaHhfY2FsX25hdmxpbmUuZGh4X2NhbF9uYXZsaW5lX2ZsZXggLmRoeF9jYWxfdG9kYXlfYnV0dG9ue2ZvbnQtc2l6ZTouOHJlbTtwYWRkaW5nOjAgMnZ3fS5kaHhfY2FsX25hdmxpbmUuZGh4X2NhbF9uYXZsaW5lX2ZsZXggLmRoeF9jYWxfbmV4dF9idXR0b24sLmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF9wcmV2X2J1dHRvbiwuZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYiwuZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3RhYi5hY3RpdmUsLmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF90b2RheV9idXR0b257aGVpZ2h0OjZ2dztsaW5lLWhlaWdodDo2dnd9LmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF9uZXh0X2J1dHRvbiwuZGh4X2NhbF9uYXZsaW5lLmRoeF9jYWxfbmF2bGluZV9mbGV4IC5kaHhfY2FsX3ByZXZfYnV0dG9ue3dpZHRoOjJyZW19LmRoeF9jYWxfbmF2bGluZS5kaHhfY2FsX25hdmxpbmVfZmxleCAuZGh4X2NhbF9kYXRle2ZvbnQtc2l6ZTo0dnd9fS5kaHhfZm9ybV9yZXBlYXQsLmRoeF9mb3JtX3JlcGVhdCBpbnB1dHtwYWRkaW5nOjA7bWFyZ2luOjA7cGFkZGluZy1sZWZ0OjVweDtmb250LWZhbWlseTpUYWhvbWEsVmVyZGFuYTtmb250LXNpemU6MTFweDtsaW5lLWhlaWdodDoyNHB4fS5kaHhfZm9ybV9yZXBlYXR7b3ZlcmZsb3c6aGlkZGVufS5kaHhfY2FsX2xpZ2h0X3dpZGUgLmRoeF9mb3JtX3JlcGVhdHtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5kaHhfcmVwZWF0X2NlbnRlciwuZGh4X3JlcGVhdF9kaXZpZGVyLC5kaHhfcmVwZWF0X2xlZnQsLmRoeF9yZXBlYXRfcmlnaHR7aGVpZ2h0OjExNXB4Oy1tb3otYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveH0uZGh4X3JlcGVhdF9jZW50ZXIsLmRoeF9yZXBlYXRfbGVmdHtwYWRkaW5nOjEwcHggMCAwIDEwcHg7ZmxvYXQ6bGVmdH0uZGh4X3JlcGVhdF9sZWZ0e3dpZHRoOjEwNXB4fS5kaHhfcmVwZWF0X2NlbnRlcnt3aWR0aDozNDVweDtwYWRkaW5nLXRvcDoyMnB4fS5kaHhfcmVwZWF0X2RpdmlkZXJ7ZmxvYXQ6bGVmdDtib3JkZXItbGVmdDoxcHggZG90dGVkICNkY2M0M2U7d2lkdGg6MXB4fS5kaHhfcmVwZWF0X3JpZ2h0e2Zsb2F0OnJpZ2h0O3dpZHRoOjE3M3B4O3BhZGRpbmc6MTdweCAzcHggMCAxMHB4fS5kaHhfY2FsX2xpZ2h0X3J0bCAuZGh4X3JlcGVhdF9jZW50ZXIsLmRoeF9jYWxfbGlnaHRfcnRsIC5kaHhfcmVwZWF0X2RpdmlkZXIsLmRoeF9jYWxfbGlnaHRfcnRsIC5kaHhfcmVwZWF0X2xlZnQsLmRoeF9jYWxfbGlnaHRfcnRsIC5kaHhfcmVwZWF0X3JpZ2h0e2Zsb2F0Om5vbmU7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wfS5kaHhfY2FsX2xpZ2h0X3J0bCAuZGh4X3JlcGVhdF9yaWdodHttYXJnaW4tcmlnaHQ6MH1pbnB1dC5kaHhfcmVwZWF0X3RleHR7aGVpZ2h0OjE2cHg7d2lkdGg6MjdweDttYXJnaW46MCA0cHggMCA0cHg7bGluZS1oZWlnaHQ6MThweDtwYWRkaW5nOjAgMCAwIDJweH0uZGh4X2NhbF9saWdodF9ydGwgaW5wdXQuZGh4X3JlcGVhdF90ZXh0e3BhZGRpbmc6MCAycHggMCAwfS5kaHhfZm9ybV9yZXBlYXQgc2VsZWN0e2hlaWdodDoyMHB4O3dpZHRoOjg3cHg7cGFkZGluZzowIDAgMCAycHg7bWFyZ2luOjAgNHB4IDAgNHB4fS5kaHhfY2FsX2xpZ2h0X3J0bCAuZGh4X2Zvcm1fcmVwZWF0IHNlbGVjdHtwYWRkaW5nOjAgMnB4IDAgMH1pbnB1dC5kaHhfcmVwZWF0X2RhdGV7aGVpZ2h0OjE4cHg7d2lkdGg6ODBweDtwYWRkaW5nOjAgMCAwIDJweDttYXJnaW46MCA0cHggMCA0cHg7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246NjRweCAwO2JvcmRlcjoxcHggIzdmOWRiOSBzb2xpZDtsaW5lLWhlaWdodDoxOHB4fS5kaHhfY2FsX2xpZ2h0X3J0bCBpbnB1dC5kaHhfcmVwZWF0X2RhdGV7cGFkZGluZzowIDJweCAwIDB9aW5wdXRbdHlwZT1yYWRpb10uZGh4X3JlcGVhdF9yYWRpb3ttYXJnaW46NXB4IDRweCAwIDA7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmU7dG9wOjJweH0uZGh4X2NhbF9saWdodF9ydGwgaW5wdXRbdHlwZT1yYWRpb10uZGh4X3JlcGVhdF9yYWRpb3ttYXJnaW46NXB4IDAgMCA0cHh9aW5wdXQuZGh4X3JlcGVhdF9jaGVja2JveHttYXJnaW46NHB4IDRweCAwIDB9LmRoeF9yZXBlYXRfZGF5cyB0ZHtwYWRkaW5nLXJpZ2h0OjVweH0uZGh4X3JlcGVhdF9kYXlzIGxhYmVse2ZvbnQtc2l6ZToxMHB4fS5kaHhfY3VzdG9tX2J1dHRvbnt3aWR0aDo5MHB4Oy13ZWJraXQtYm9yZGVyLXJhZGl1czo0cHg7LW1vei1ib3JkZXItcmFkaXVzOjRweDstbXMtYm9yZGVyLXJhZGl1czo0cHg7LW8tYm9yZGVyLXJhZGl1czo0cHg7Ym9yZGVyLXJhZGl1czo0cHh9LmRoeF9jdXN0b21fYnV0dG9uX3JlY3VycmluZ3tiYWNrZ3JvdW5kLWltYWdlOnVybChpbWdzX2RoeF90ZXJyYWNlL2J1dF9yZXBlYXQuZ2lmKTtiYWNrZ3JvdW5kLXBvc2l0aW9uOi01cHggMjBweDt3aWR0aDoyMHB4O21hcmdpbi1yaWdodDoxMHB4fS5kaHhfY2FsX2xpZ2h0X3JlY3t3aWR0aDo2NDBweH0uZGh4X2NhbF9saWdodF9yZWMgLmRoeF9jYWxfbGFyZWF7d2lkdGg6NjMycHh9LmRoeF9jYWxfbGlnaHRfcmVjLmRoeF9jYWxfbGlnaHRfd2lkZXt3aWR0aDo4MTZweH0uZGh4X2NhbF9saWdodF9yZWMuZGh4X2NhbF9saWdodF93aWRlIC5kaHhfY2FsX2xhcmVhe3dpZHRoOjgwOHB4fS5kaHhfY2FsX2V2ZW50IC5kaHhfaGVhZGVyLC5kaHhfY2FsX2V2ZW50LmRoeF9jYWxfc2VsZWN0X21lbnUgLmRoeF9mb290ZXJ7ZGlzcGxheTpub25lfS5kaHhfY2FsX2V2ZW50LmRoeF9jYWxfZWRpdG9ye2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnR9ZGl2LmRoeF9tZW51X2hlYWQsZGl2LmRoeF9tZW51X2ljb257YmFja2dyb3VuZC1pbWFnZTp1cmwoaW1nc19kaHhfdGVycmFjZS9jb250cm9scy5wbmcpfS5kaHhfY2FsX3RhYi5hY3RpdmV7dGV4dC1zaGFkb3c6MCAxcHggMCAjZmZmfS5kaHhfY2FsX3RhYl9zdGFuZGFsb25ley13ZWJraXQtYm9yZGVyLXJhZGl1czo1cHg7LW1vei1ib3JkZXItcmFkaXVzOjVweDtib3JkZXItcmFkaXVzOjVweCFpbXBvcnRhbnQ7cGFkZGluZzowIDVweH0uZGh4X2NhbF9sYXJlYXttYXJnaW4tbGVmdDowfS5kaHhfY2FsX2xhcmVhe2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnR9LmRoeF9jYWxfbGlnaHRfd2lkZSAuZGh4X2NhbF9sc2VjdGlvbiAuZGh4X2Z1bGxkYXksLmRoeF9jYWxfbHNlY3Rpb24sLmRoeF9jYWxfbHNlY3Rpb24gLmRoeF9mdWxsZGF5e2NvbG9yOiM3NDc0NzN9LmRoeF9jYWxfbGlnaHR7Ym9yZGVyOjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfc2VjdGlvbl90aW1le2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LmRoeF9idG5fc2V0IGRpdjpmaXJzdC1jaGlsZCwuZGh4X2NhbmNlbF9idG4sLmRoeF9kZWxldGVfYnRuLC5kaHhfc2F2ZV9idG57ZGlzcGxheTpub25lfS5kaHhfY2FsX2x0aXRsZSBzcGFue2Zsb2F0OmxlZnR9LmRoeF9jYWxfbGlnaHRfcnRsIC5kaHhfY2FsX2x0aXRsZSBzcGFue2Zsb2F0Om5vbmV9LmRoeF9tYXJre2Rpc3BsYXk6bm9uZX0uZGh4X2Nsb3NlX2ljb257ZmxvYXQ6cmlnaHQ7d2lkdGg6OXB4O2hlaWdodDo5cHg7YmFja2dyb3VuZDp1cmwoaW1nc19kaHhfdGVycmFjZS9jbG9zZV9pY29uLnBuZykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7cGFkZGluZzoxMHB4O21hcmdpbi10b3A6MXB4fS5kaHhfY2FsX2xpZ2h0X3dpZGUgLmRoeF9jYWxfbHRleHQuZGh4X2NhbF90ZW1wbGF0ZXtsaW5lLWhlaWdodDoyMnB4fS5kaHhfY2FsX2x0ZXh0IHRleHRhcmVhe2JveC1zaXppbmc6Ym9yZGVyLWJveDstbW96LWJveC1zaXppbmc6Ym9yZGVyLWJveH0uZGh4X2NhbF9jb250YWluZXIuZGh4X21pbmlfY2FsZW5kYXJ7Ym94LXNpemluZzpib3JkZXItYm94O2JvcmRlcjoxcHggc29saWQgI2NlY2VjZTtib3gtc2hhZG93OjJweCAycHggNXB4ICNjY2M7Ym9yZGVyLXJhZGl1czozcHh9LmRoeF9taW5pX2NhbGVuZGFyIC5kaHhfeWVhcl9tb250aHtib3JkZXI6MXB4IHNvbGlkICNjZWNlY2U7Zm9udC1mYW1pbHk6QXJpYWx9LmRoeF9taW5pX2NhbGVuZGFyIC5kaHhfbW9udGhfYm9keSwuZGh4X21pbmlfY2FsZW5kYXIgLmRoeF9tb250aF9oZWFkLC5kaHhfbWluaV9jYWxlbmRhciAuZGh4X3NjYWxlX2JhciwuZGh4X21pbmlfY2FsZW5kYXIgLmRoeF95ZWFyX2JvZHksLmRoeF9taW5pX2NhbGVuZGFyIC5kaHhfeWVhcl9tb250aHtib3JkZXItY29sb3I6dHJhbnNwYXJlbnR9LmRoeF9taW5pX2NhbGVuZGFyIC5kaHhfeWVhcl9ib2R5e3BhZGRpbmctdG9wOjFweH0uZGh4X21pbmlfY2FsZW5kYXIgLmRoeF9zY2FsZV9iYXJ7Ym9yZGVyLXdpZHRoOjB9LmRoeF9taW5pX2NhbGVuZGFyIC5kaHhfeWVhcl93ZWVre2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNjZWNlY2U7cGFkZGluZy10b3A6MXB4fS5kaHhfbWluaV9jYWxlbmRhciAuZGh4X21vbnRoX2hlYWR7cGFkZGluZy1yaWdodDowO21hcmdpbi1yaWdodDoxcHg7dGV4dC1hbGlnbjpjZW50ZXJ9LmRoeF9taW5pX2NhbGVuZGFyIC5kaHhfY2FsX25leHRfYnV0dG9uLC5kaHhfbWluaV9jYWxlbmRhciAuZGh4X2NhbF9wcmV2X2J1dHRvbntib3JkZXI6MDtoZWlnaHQ6MjBweH0uZGh4X2NhbF9uYXZsaW5lIGRpdi5kaHhfbWluaWNhbF9pY29ue2xlZnQ6MjEwcHg7dG9wOjE0cHg7d2lkdGg6MzBweDtoZWlnaHQ6MzBweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOjNweCA1cHh9LmRoeF9zZWNvbmRfc2NhbGVfYmFye2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNjZWNlY2V9LmRoeF9yZXBlYXRfZGl2aWRlcntib3JkZXItbGVmdDoxcHggc29saWQgI2NlY2VjZX0uZGh4X2N1c3RvbV9idXR0b257YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgI2NlY2VjZTtjb2xvcjojNzQ3NDczfS5kaHhfYWdlbmRhX2xpbmUgZGl2LC5kaHhfdl9ib3JkZXJ7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfY2FsX2NvbnRhaW5lcl9ydGwgLmRoeF9hZ2VuZGFfbGluZSBkaXYsLmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X3ZfYm9yZGVye2JvcmRlci1yaWdodDowO2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfeWVhcl9tb250aHtib3JkZXI6MXB4IHNvbGlkICNjZWNlY2V9LmRoeF9zY2FsZV9iYXJfbGFzdHtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNjZWNlY2V9LmRoeF95ZWFyX2JvZHl7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNjZWNlY2V9LmRoeF9leHBhbmRfaWNvbnt0b3A6LTNweH0uZGh4X2NhbF9oZWFkZXIgLmRoeF9jYWxfbmV4dF9idXR0b24sLmRoeF9jYWxfaGVhZGVyIC5kaHhfY2FsX3ByZXZfYnV0dG9ue3dpZHRoOjIwcHg7aGVpZ2h0OjIwcHg7dG9wOjAhaW1wb3J0YW50O2JvcmRlcjowfS5kaHhfY2FsX2hlYWRlciAuZGh4X2NhbF9uZXh0X2J1dHRvbntyaWdodDoxcHghaW1wb3J0YW50O2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfY2FsX2hlYWRlciAuZGh4X2NhbF9wcmV2X2J1dHRvbntsZWZ0OjFweCFpbXBvcnRhbnQ7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfY2FsX2RhdGUsLmRoeF9jYWxfbmV4dF9idXR0b24sLmRoeF9jYWxfcHJldl9idXR0b24sLmRoeF9jYWxfdGFiLC5kaHhfY2FsX3RvZGF5X2J1dHRvbntsaW5lLWhlaWdodDozMHB4fS5kaHhfbWFwX2xpbmUgLmhlYWRsaW5lX2RhdGUsLmRoeF9tYXBfbGluZSAuaGVhZGxpbmVfZGVzY3JpcHRpb257Ym9yZGVyOjB9LmRoeF9tYXBfbGluZSAuaGVhZGxpbmVfZGF0ZXtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNjZWNlY2V9LmRodG1sWFRvb2x0aXAudG9vbHRpcHtib3JkZXItbGVmdDoxcHggc29saWQgI2NlY2VjZTtib3JkZXItdG9wOjFweCBzb2xpZCAjY2VjZWNlO2NvbG9yOiM3NDc0NzM7Zm9udC1zaXplOjEycHg7bGluZS1oZWlnaHQ6MTZweH0uZGh4X3dhX3NjYWxlX2Jhcntib3JkZXItdG9wOjFweCBzb2xpZCAjY2VjZWNlO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNjZWNlY2V9LmRoeF93YV9jb2x1bW5fbGFzdCAuZGh4X3dhX2RheV9jb250e2JvcmRlci1sZWZ0OjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfd2FfZXZfYm9keXtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjY2VjZWNlfS5kaHhfd2Ffc2NhbGVfYmFye2JhY2tncm91bmQtY29sb3I6I2YwZWRlN30uZGh4X3dhX2V2X2JvZHkuZGh4X2NhbF9ldmVudF9zZWxlY3RlZHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmYzYTE7Y29sb3I6IzM2MmQyNn0uZGh4X3dhX2RuZHtiYWNrZ3JvdW5kLWNvbG9yOiNmZGRiOTMhaW1wb3J0YW50O2NvbG9yOiM3NDc0NzMhaW1wb3J0YW50O2JvcmRlcjoxcHggc29saWQgI2NjYjE3N30uZGh4X3RleHRfZGlzYWJsZWR7Y29sb3I6IzJlMmUyZX0uZGh4X2NhbF9sdGV4dCAuZGh4X3RleHRfZGlzYWJsZWR7bGluZS1oZWlnaHQ6MjJweH0uZGh4X2dyaWRfdl9ib3JkZXJ7Ym9yZGVyLXJpZ2h0LWNvbG9yOiNjZWNlY2V9LmRoeF9jYWxfY29udGFpbmVyX3J0bCAuZGh4X2dyaWRfdl9ib3JkZXJ7Ym9yZGVyLWxlZnQtY29sb3I6I2NlY2VjZX0uZGh4X21vbnRoX2JvZHlfYm9yZGVyLC5kaHhfbW9udGhfaGVhZF9ib3JkZXIsLmRoeF9zY2FsZV9iYXJfYm9yZGVyLC5kaHhfc2NhbGVfaG91cl9ib3JkZXJ7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNjZWNlY2V9LmRoeF9jYWxfbmF2bGluZSAuZGh4X2NhbF9leHBvcnR7d2lkdGg6MzJweDtoZWlnaHQ6MzJweDttYXJnaW46MnB4O2N1cnNvcjpwb2ludGVyO3RvcDoxMnB4fS5kaHhfY2FsX25hdmxpbmUgLmRoeF9jYWxfZXhwb3J0LnBkZntsZWZ0OmF1dG87cmlnaHQ6MjQ5cHg7YmFja2dyb3VuZC1pbWFnZTp1cmwoaW1nc19kaHhfdGVycmFjZS9leHBvcnRfcGRmLnBuZyl9LmRoeF9jYWxfbmF2bGluZSAuZGh4X2NhbF9leHBvcnQuaWNhbHtsZWZ0OmF1dG87cmlnaHQ6MjEwcHg7YmFja2dyb3VuZC1pbWFnZTp1cmwoaW1nc19kaHhfdGVycmFjZS9leHBvcnRfaWNhbC5wbmcpfS5kaHhfbWluaV9jYWxlbmRhcntwYWRkaW5nOjVweH0uZGh4X21pbmlfY2FsZW5kYXIgLmRoeF9jYWxlbmRhcl9jbGljaywuZGh4X21pbmlfY2FsZW5kYXIgLmRoeF95ZWFyX2V2ZW50e2JvcmRlci1yYWRpdXM6N3B4fS5kaHhfbWluaV9jYWxlbmRhciAuZGh4X21vbnRoX2hlYWR7bWFyZ2luOjJweCAycHh9LmRoeF9taW5pX2NhbGVuZGFyIC5kaHhfeWVhcl9tb250aHtsaW5lLWhlaWdodDoyMHB4O2hlaWdodDoyNXB4O2ZvbnQtc2l6ZToxNHB4fS5kaHhfbWluaV9jYWxlbmRhciAuZGh4X2NhbF9wcmV2X2J1dHRvbnt0b3A6OHB4IWltcG9ydGFudH0uZGh4X21pbmlfY2FsZW5kYXIgLmRoeF9jYWxfbmV4dF9idXR0b257dG9wOjhweCFpbXBvcnRhbnR9]]></Resource>
    <Resource ID="2be5dc9b-5c1c-4c34-b590-c41b69ea544e" Name="dhtmlxscheduler.js" Type="js"><![CDATA[]]></Resource>
    <Resource ID="99bf051c-c2b8-4da1-8faa-79cfbf3f426e" Name="dhtmlxscheduler_limit.js" Type="js"><![CDATA[]]></Resource>
    <Resource ID="ff3c01c1-98f0-4211-a80f-2148d1b40c9f" Name="dhtmlxscheduler_tooltip.js" Type="js"><![CDATA[LyoKCkBsaWNlbnNlCmRodG1seFNjaGVkdWxlciB2LjUuMy45IFN0YW5kYXJkCgpUbyB1c2UgZGh0bWx4U2NoZWR1bGVyIGluIG5vbi1HUEwgcHJvamVjdHMgKGFuZCBnZXQgUHJvIHZlcnNpb24gb2YgdGhlIHByb2R1Y3QpLCBwbGVhc2Ugb2J0YWluIENvbW1lcmNpYWwvRW50ZXJwcmlzZSBvciBVbHRpbWF0ZSBsaWNlbnNlIG9uIG91ciBzaXRlIGh0dHBzOi8vZGh0bWx4LmNvbS9kb2NzL3Byb2R1Y3RzL2RodG1seFNjaGVkdWxlci8jbGljZW5zaW5nIG9yIGNvbnRhY3QgdXMgYXQgc2FsZXNAZGh0bWx4LmNvbQoKKGMpIFhCIFNvZnR3YXJlIEx0ZC4KCiovClNjaGVkdWxlci5wbHVnaW4oZnVuY3Rpb24oZSl7IWZ1bmN0aW9uKCl7d2luZG93LmRodG1sWFRvb2x0aXA9ZS5kaHRtbFhUb29sdGlwPWUudG9vbHRpcD17fSxkaHRtbFhUb29sdGlwLmNvbmZpZz17Y2xhc3NOYW1lOiJkaHRtbFhUb29sdGlwIHRvb2x0aXAiLHRpbWVvdXRfdG9fZGlzcGxheTo1MCx0aW1lb3V0X3RvX2hpZGU6NTAsZGVsdGFfeDoxNSxkZWx0YV95Oi0yMH0sZGh0bWxYVG9vbHRpcC50b29sdGlwPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLGRodG1sWFRvb2x0aXAudG9vbHRpcC5jbGFzc05hbWU9ZGh0bWxYVG9vbHRpcC5jb25maWcuY2xhc3NOYW1lLGUuX3dhaUFyaWEudG9vbHRpcEF0dHIoZGh0bWxYVG9vbHRpcC50b29sdGlwKSxkaHRtbFhUb29sdGlwLnNob3c9ZnVuY3Rpb24odCxhKXtpZighdGhpcy5fbW9iaWxlfHxlLmNvbmZpZy50b3VjaF90b29sdGlwKXt2YXIgbj1kaHRtbFhUb29sdGlwLGk9dGhpcy50b29sdGlwLHI9aS5zdHlsZQo7bi50b29sdGlwLmNsYXNzTmFtZT1uLmNvbmZpZy5jbGFzc05hbWU7dmFyIG89dGhpcy5wb3NpdGlvbih0KSxfPXQudGFyZ2V0fHx0LnNyY0VsZW1lbnQ7aWYoIXRoaXMuaXNUb29sdGlwKF8pKXt2YXIgZD1vLngrKG4uY29uZmlnLmRlbHRhX3h8fDApLHM9by55LShuLmNvbmZpZy5kZWx0YV95fHwwKTtyLnZpc2liaWxpdHk9ImhpZGRlbiIsci5yZW1vdmVBdHRyaWJ1dGU/KHIucmVtb3ZlQXR0cmlidXRlKCJyaWdodCIpLHIucmVtb3ZlQXR0cmlidXRlKCJib3R0b20iKSk6KHIucmVtb3ZlUHJvcGVydHkoInJpZ2h0Iiksci5yZW1vdmVQcm9wZXJ0eSgiYm90dG9tIikpLHIubGVmdD0iMCIsci50b3A9IjAiLGUuY29uZmlnLnJ0bCYmKGkuY2xhc3NOYW1lKz0iIGRodG1sWFRvb2x0aXBfcnRsIiksdGhpcy50b29sdGlwLmlubmVySFRNTD1hLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy50b29sdGlwKQo7dmFyIGw9dGhpcy50b29sdGlwLm9mZnNldFdpZHRoLGM9dGhpcy50b29sdGlwLm9mZnNldEhlaWdodDtkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgtZC1sPDA/KHIucmVtb3ZlQXR0cmlidXRlP3IucmVtb3ZlQXR0cmlidXRlKCJsZWZ0Iik6ci5yZW1vdmVQcm9wZXJ0eSgibGVmdCIpLHIucmlnaHQ9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoLWQrMioobi5jb25maWcuZGVsdGFfeHx8MCkrInB4Iik6ci5sZWZ0PWQ8MD9vLngrTWF0aC5hYnMobi5jb25maWcuZGVsdGFfeHx8MCkrInB4IjpkKyJweCIsZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodC1zLWM8MD8oci5yZW1vdmVBdHRyaWJ1dGU/ci5yZW1vdmVBdHRyaWJ1dGUoInRvcCIpOnIucmVtb3ZlUHJvcGVydHkoInRvcCIpLApyLmJvdHRvbT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LXMtMioobi5jb25maWcuZGVsdGFfeXx8MCkrInB4Iik6ci50b3A9czwwP28ueStNYXRoLmFicyhuLmNvbmZpZy5kZWx0YV95fHwwKSsicHgiOnMrInB4IixlLl93YWlBcmlhLnRvb2x0aXBWaXNpYmxlQXR0cih0aGlzLnRvb2x0aXApLHIudmlzaWJpbGl0eT0idmlzaWJsZSIsdGhpcy50b29sdGlwLm9ubW91c2VsZWF2ZT1mdW5jdGlvbih0KXt0PXR8fHdpbmRvdy5ldmVudDtmb3IodmFyIGE9ZS5kaHRtbFhUb29sdGlwLG49dC5yZWxhdGVkVGFyZ2V0O24hPWUuX29iaiYmbjspbj1uLnBhcmVudE5vZGU7biE9ZS5fb2JqJiZhLmRlbGF5KGEuaGlkZSxhLFtdLGEuY29uZmlnLnRpbWVvdXRfdG9faGlkZSl9LGUuY2FsbEV2ZW50KCJvblRvb2x0aXBEaXNwbGF5ZWQiLFt0aGlzLnRvb2x0aXAsdGhpcy50b29sdGlwLmV2ZW50X2lkXSl9fX0sCmRodG1sWFRvb2x0aXAuX2NsZWFyVGltZW91dD1mdW5jdGlvbigpe3RoaXMudG9vbHRpcC5fdGltZW91dF9pZCYmd2luZG93LmNsZWFyVGltZW91dCh0aGlzLnRvb2x0aXAuX3RpbWVvdXRfaWQpfSxkaHRtbFhUb29sdGlwLmhpZGU9ZnVuY3Rpb24oKXtpZih0aGlzLnRvb2x0aXAucGFyZW50Tm9kZSl7ZS5fd2FpQXJpYS50b29sdGlwSGlkZGVuQXR0cih0aGlzLnRvb2x0aXApO3ZhciB0PXRoaXMudG9vbHRpcC5ldmVudF9pZDt0aGlzLnRvb2x0aXAuZXZlbnRfaWQ9bnVsbCx0aGlzLnRvb2x0aXAub25tb3VzZWxlYXZlPW51bGwsdGhpcy50b29sdGlwLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy50b29sdGlwKSxlLmNhbGxFdmVudCgib25BZnRlclRvb2x0aXAiLFt0XSl9dGhpcy5fY2xlYXJUaW1lb3V0KCl9LGRodG1sWFRvb2x0aXAuZGVsYXk9ZnVuY3Rpb24oZSx0LGEsbil7dGhpcy5fY2xlYXJUaW1lb3V0KCksCnRoaXMudG9vbHRpcC5fdGltZW91dF9pZD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIG49ZS5hcHBseSh0LGEpO3JldHVybiBlPXQ9YT1udWxsLG59LG58fHRoaXMuY29uZmlnLnRpbWVvdXRfdG9fZGlzcGxheSl9LGRodG1sWFRvb2x0aXAuaXNUb29sdGlwPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0hMTtlJiYhdDspdD1lLmNsYXNzTmFtZT09dGhpcy50b29sdGlwLmNsYXNzTmFtZSxlPWUucGFyZW50Tm9kZTtyZXR1cm4gdH0sZGh0bWxYVG9vbHRpcC5wb3NpdGlvbj1mdW5jdGlvbihlKXtyZXR1cm4gZT1lfHx3aW5kb3cuZXZlbnQse3g6ZS5jbGllbnRYLHk6ZS5jbGllbnRZfX0sZS5hdHRhY2hFdmVudCgib25Nb3VzZU1vdmUiLGZ1bmN0aW9uKHQsYSl7dmFyIG49d2luZG93LmV2ZW50fHxhLGk9bi50YXJnZXR8fG4uc3JjRWxlbWVudCxyPWRodG1sWFRvb2x0aXAsbz1yLmlzVG9vbHRpcChpKSxfPXIuaXNUb29sdGlwVGFyZ2V0JiZyLmlzVG9vbHRpcFRhcmdldChpKQo7aWYodCYmZS5nZXRTdGF0ZSgpLmVkaXRvcl9pZCE9dHx8b3x8Xyl7dmFyIGQ7aWYodHx8ci50b29sdGlwLmV2ZW50X2lkKXt2YXIgcz1lLmdldEV2ZW50KHQpfHxlLmdldEV2ZW50KHIudG9vbHRpcC5ldmVudF9pZCk7aWYoIXMpcmV0dXJuO2lmKHIudG9vbHRpcC5ldmVudF9pZD1zLmlkLCEoZD1lLnRlbXBsYXRlcy50b29sdGlwX3RleHQocy5zdGFydF9kYXRlLHMuZW5kX2RhdGUscykpKXJldHVybiByLmhpZGUoKX1fJiYoZD0iIik7dmFyIGw7aWYoZS4kZW52LmlzSUUpe2w9e3BhZ2VYOnZvaWQgMCxwYWdlWTp2b2lkIDAsY2xpZW50WDp2b2lkIDAsY2xpZW50WTp2b2lkIDAsdGFyZ2V0OnZvaWQgMCxzcmNFbGVtZW50OnZvaWQgMH07Zm9yKHZhciBjIGluIGwpbFtjXT1uW2NdfWlmKCFlLmNhbGxFdmVudCgib25CZWZvcmVUb29sdGlwIixbdF0pfHwhZClyZXR1cm47ci5kZWxheShyLnNob3cscixbbHx8bixkXSkKfWVsc2Ugci5kZWxheShyLmhpZGUscixbXSxyLmNvbmZpZy50aW1lb3V0X3RvX2hpZGUpfSksZS5hdHRhY2hFdmVudCgib25CZWZvcmVEcmFnIixmdW5jdGlvbigpe3JldHVybiBkaHRtbFhUb29sdGlwLmhpZGUoKSwhMH0pLGUuYXR0YWNoRXZlbnQoIm9uRXZlbnREZWxldGVkIixmdW5jdGlvbigpe3JldHVybiBkaHRtbFhUb29sdGlwLmhpZGUoKSwhMH0pfSgpfSk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPS4uL3NvdXJjZXMvZXh0L2RodG1seHNjaGVkdWxlcl90b29sdGlwLmpzLm1hcA==]]></Resource>
    <Resource ID="89123004-0fff-403d-8a65-bac50b7d5d53" Name="dhtmlxscheduler_timeline.js" Type="js"><![CDATA[]]></Resource>
  </Resources>
  <SourceCode>
        <![CDATA[import json
class VDOM_scheduler(VDOM_object):
    def render(self, contents=""):
        WOID = (self.id).replace('-', '_')
        ID = 'o_' + WOID

        DEBUG_INFO = {
          "objname": self.name,
          "objtype": "scheduler",
          "js_lib": "dhtmlx scheduler",
          "id": ID,
          "version": self.type.version
        }
        DEBUG_INFO_STRING = " ".join([str(key)+"='"+str(value)+"'" for key, value in DEBUG_INFO.items()])

        DISPLAY = lambda v: "none" if v == "0" else None
        SIZE_CONVERT = lambda v: str(v) + "px"
        STYLES = {
            "display": DISPLAY(self.visible),
            "position": self.positioning1,
            "z-index": self.zindex,
            "top": SIZE_CONVERT(self.top),
            "left": SIZE_CONVERT(self.left),
            "width": SIZE_CONVERT(self.width),
            "height": SIZE_CONVERT(self.height),
        }
        STYLES_STRING_FORMAT = ";".join([str(key)+":"+str(value) for key, value in STYLES.items() if value])

        STYLES_STRING = """<style>.%(id)s { %(styles)s }</style>""" % { "id":ID, "styles": STYLES_STRING_FORMAT }
        STYLES_STRING = STYLES_STRING.replace(" ", "")

        SCRIPT_CONFIG = """<script data-meta='CONFIG'>$(document).ready(() => {%(js_code)s});</script>""" % { 'js_code': self.schedulerconfig }

        TIMELINE_CONFIG = """<script data-meta='TIMELINE CONFIG'>$(document).ready(() => {%(js_code)s});</script>""" % { 'js_code': self.timelineconfig }

        INIT_SCRIPT = """
          <script data-meta='scheduler init script'>
            $(document).ready(() => {
              scheduler.init("scheduler_%(id)s", new Date(), "timeline");
              scheduler.getView().setRange( new Date('%(start_date)s'), new Date('%(end_date)s') );

              scheduler.parse(`%(data)s`, "json");
            })
          </script>
        """ % { "id": ID, "data": self.data, "start_date": self.startdate, "end_date": self.enddate }

        HARDCODE_CONFIG = """
           <script data-meta='TYPE CONFIG'>
            $(document).ready(() => {
              //===============
              //Hard configuration (not editable in attrs)
              //===============
              const E2VDOMIdFormat = (id) => id.slice(2);

              scheduler.attachEvent("onParse", () => {execEventBinded(E2VDOMIdFormat('%(id)s'),'onParse');});

              scheduler.attachEvent("onTemplatesReady", () => {execEventBinded(E2VDOMIdFormat('%(id)s'),'onTemplatesReady');});

              scheduler.attachEvent("onClick", function (id, e) {
                execEventBinded(E2VDOMIdFormat('%(id)s'), 'onClick', {id: id, value: JSON.stringify(e)});
                return true;
              });

              scheduler.attachEvent("onEventChanged", function(id, ev) {
                execEventBinded(E2VDOMIdFormat('%(id)s'), 'onEventChanged', {id: id, value: JSON.stringify(ev)});
              });

              scheduler.attachEvent("onEventDeleted", function(id, ev) {
                execEventBinded(E2VDOMIdFormat('%(id)s'), 'onEventDeleted', {id: id, value: JSON.stringify(ev)});
              });
            })
           </script>
        """ % {'id': ID}

        TYPE_WRAPPER = """<div {debug_string} class='{id} {classname}'>{content}</div>"""

        TYPE_HTML = """
          <div id="scheduler_{id}" class="dhx_cal_container" style='width:100%; height:100%;'></div>
            <div style="position: absolute; left: -9999px; top: -9999px;">
              <div class="dhx_cal_container">
                <div class="dhx_cal_scale_placeholder"></div>
                <div></div>
              </div>
          </div>
        """.format(id=ID)

        SCRIPTS = """{}{}{}{}""".format(SCRIPT_CONFIG, TIMELINE_CONFIG, HARDCODE_CONFIG, INIT_SCRIPT)

        CONTENT = """{}{}{}""".format(STYLES_STRING, TYPE_HTML, SCRIPTS)

        RESULT = TYPE_WRAPPER.format(
          debug_string=DEBUG_INFO_STRING,
          classname=self.cssclass,
          id=ID,
          content=CONTENT
        )

        return VDOM_object.render(self, contents=RESULT)

    def wysiwyg(self, contents=""):
        from scripting.legacy.wysiwyg import get_empty_wysiwyg_value

        image_id = "a0955637-e4dd-4cd1-933b-540c46acf37f"
        result = get_empty_wysiwyg_value(self, image_id)

        return VDOM_object.wysiwyg(self, contents=result)
]]>
  </SourceCode>
  <Libraries>
    <Library Target="html"><![CDATA[<link rel="stylesheet" type="text/css" href="/7693eb8b-3cd2-4270-920c-8e62336ac4a7.css" />]]></Library>

    <Library Target="html"><![CDATA[<script type='text/javascript' src='/2be5dc9b-5c1c-4c34-b590-c41b69ea544e.js'></script>]]></Library>
    <Library Target="html"><![CDATA[<script type='text/javascript' src='/99bf051c-c2b8-4da1-8faa-79cfbf3f426e.js'></script>]]></Library>
    <Library Target="html"><![CDATA[<script type='text/javascript' src='/ff3c01c1-98f0-4211-a80f-2148d1b40c9f.js'></script>]]></Library>
    <Library Target="html"><![CDATA[<script type='text/javascript' src='/89123004-0fff-403d-8a65-bac50b7d5d53.js'></script>]]></Library>
  </Libraries>
  <E2vdom>
    <Events>
      <Userinterfaceevents>
        <Event Name="onParse" Help="#Lang(035)"></Event>
        <Event Name="onTemplatesReady" Help="#Lang(036)"></Event>
        <Event Name="onClick" Help="#Lang(000)">
          <Parameters>
            <Parameter Name="id" Description="#Lang(000)" Order="0"/>
            <Parameter Name="value" Description="#Lang(000)" Order="1"/>
          </Parameters>
        </Event>
        <Event Name="onEventChanged" Help="#Lang(000)">
          <Parameters>
            <Parameter Name="id" Description="#Lang(000)" Order="0"/>
            <Parameter Name="value" Description="#Lang(000)" Order="1"/>
          </Parameters>
        </Event>
        <Event Name="onEventDeleted" Help="#Lang(000)">
          <Parameters>
            <Parameter Name="id" Description="#Lang(000)" Order="0"/>
            <Parameter Name="value" Description="#Lang(000)" Order="1"/>
          </Parameters>
        </Event>
      </Userinterfaceevents>
    </Events>
    <Actions>
      <Container ID="2330fe83-8cd6-4ed5-907d-11874e7ebcf4">
        <Action Help="#Lang(000)" InterfaceName="#Lang(125)" MethodName="hide">
          <Parameters>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(128)" ScriptName="fade" Help="#Lang(801)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[$q(this.domCont).hide(fade);]]></SourceCode>
        </Action>
        <Action Help="#Lang(000)" InterfaceName="#Lang(126)" MethodName="show">
          <Parameters>
            <Parameter DefaultValue="0" Interface="" InterfaceName="#Lang(128)" ScriptName="fade" Help="#Lang(805)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[$q(this.domCont).show(fade);]]></SourceCode>
        </Action>
        <Action Help="#Lang(000)" InterfaceName="#Lang(037)" MethodName="setX_size">
          <Parameters>
            <Parameter DefaultValue="7" Interface="" InterfaceName="#Lang(038)" ScriptName="x_size" Help="#Lang(039)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[scheduler.getView().x_size=x_size;scheduler.setCurrentView();]]></SourceCode>
        </Action>
        <Action Help="#Lang(000)" InterfaceName="#Lang(040)" MethodName="setDateRange">
          <Parameters>
            <Parameter DefaultValue="'2020-01-01'" Interface="" InterfaceName="#Lang(041)" ScriptName="startDate" Help="#Lang(032)" RegularExpressionValidation=".*"/>
            <Parameter DefaultValue="'2020-01-01'" Interface="" InterfaceName="#Lang(041)" ScriptName="endDate" Help="#Lang(032)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[scheduler.getView().setRange(new Date(startDate), new Date(endDate))]]></SourceCode>
        </Action>
        <Action Help="#Lang(000)" InterfaceName="#Lang(042)" MethodName="setDate">
          <Parameters>
            <Parameter DefaultValue="'2020-01-01'" Interface="" InterfaceName="#Lang(041)" ScriptName="date" Help="#Lang(032)" RegularExpressionValidation=".*"/>
          </Parameters>
          <SourceCode><![CDATA[scheduler.setCurrentView(new Date(date))]]></SourceCode>
        </Action>
      </Container>
    </Actions>
  </E2vdom>
</Type>