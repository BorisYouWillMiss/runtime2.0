<?xml version="1.0" encoding="utf-8"?>
<Type>
	<Information>
		<ID>ea0ba7cb-e375-4b52-a647-fb28225e451d</ID>
		<Name>gantt</Name>
		<DisplayName>#Lang(001)</DisplayName>
		<ClassName>VDOM_gantt</ClassName>
		<Description>#Lang(002)</Description>
		<Version>1.5.2</Version>
		<Category>Additional</Category>
		<InterfaceType>1</InterfaceType>
		<Icon>#Res(e0ab6594-77ca-47b3-a35c-d3939406ca8e)</Icon>
		<EditorIcon>#Res(2b5aee40-ed7f-4a64-8d36-f226fca44ac8)</EditorIcon>
		<StructureIcon>#Res(2b5aee40-ed7f-4a64-8d36-f226fca44ac8)</StructureIcon>
		<Dynamic>1</Dynamic>
		<Moveable>1</Moveable>
		<Resizable>3</Resizable>
		<OptimizationPriority>1</OptimizationPriority>
		<Container>1</Container>
		<Containers>htmlcontainer</Containers>
		<Languages>en_US, fr_FR, ru_RU</Languages>
	</Information>
	<Attributes>
		<Attribute>
			<Name>stateful</Name>
			<DisplayName>#Lang(101)</DisplayName>
			<Description>#Lang(201)</Description>
			<DefaultValue>0</DefaultValue>
			<RegularExpressionValidation>^[01]$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(301)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(401)|0)|(#Lang(402)|1))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>hierarchy</Name>
			<DisplayName>#Lang(102)</DisplayName>
			<Description>#Lang(202)</Description>
			<DefaultValue>0</DefaultValue>
			<RegularExpressionValidation>^\d{1,2}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(302)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(2)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>visible</Name>
			<DisplayName>#Lang(103)</DisplayName>
			<Description>#Lang(203)</Description>
			<DefaultValue>1</DefaultValue>
			<RegularExpressionValidation>^[01]$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(303)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(403)|0)|(#Lang(404)|1))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>positioning1</Name>
			<DisplayName>#Lang(021)</DisplayName>
			<Description>#Lang(000)</Description>
			<DefaultValue>absolute</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(122)|absolute)|(#Lang(123)|static)|(#Lang(124)|relative))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>zindex</Name>
			<DisplayName>#Lang(104)</DisplayName>
			<Description>#Lang(204)</Description>
			<DefaultValue>0</DefaultValue>
			<RegularExpressionValidation>^\d{1,2}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(304)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(2)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>top</Name>
			<DisplayName>#Lang(105)</DisplayName>
			<Description>#Lang(205)</Description>
			<DefaultValue>0</DefaultValue>
			<RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(305)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(4)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>left</Name>
			<DisplayName>#Lang(106)</DisplayName>
			<Description>#Lang(206)</Description>
			<DefaultValue>0</DefaultValue>
			<RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(306)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(4)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>width</Name>
			<DisplayName>#Lang(107)</DisplayName>
			<Description>#Lang(207)</Description>
			<DefaultValue>130</DefaultValue>
			<RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(307)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(4)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>height</Name>
			<DisplayName>#Lang(108)</DisplayName>
			<Description>#Lang(208)</Description>
			<DefaultValue>22</DefaultValue>
			<RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(308)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(4)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>columns</Name>
			<DisplayName>#Lang(930)</DisplayName>
			<Description>#Lang(209)</Description>
			<DefaultValue>[
          { name: &quot;text&quot;, tree: true, width: 200, resize: true, label: &quot;Mission&quot; },
          { name: &quot;start_date&quot;, align: &quot;center&quot;, width: 100, resize: true, label: &quot;Start date&quot; },
          { name: &quot;duration&quot;, align: &quot;center&quot;, width: 100, resize: true, label: &quot;Duration&quot; },
          { name: &quot;add&quot;, width: 44, resize: true, hide: false }
        ]</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(309)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>MultiLine(10000)</CodeInterface>
			<ColorGroup>2</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>data</Name>
			<DisplayName>#Lang(109)</DisplayName>
			<Description>#Lang(209)</Description>
			<DefaultValue>{
          &quot;data&quot;: [
            {
              &quot;id&quot;: 1,
              &quot;redactor&quot;: &quot;Natalu VULCAN&quot;,
              &quot;text&quot;: &quot;BOREALIS CHIMIE SAS GRANDPUITS&quot;,
              &quot;start_date&quot;: &quot;&quot;,
              &quot;duration&quot;: 0,
              &quot;progress&quot;: 0.4,
              &quot;open&quot;: true,
              &quot;editable&quot;: false,
              &quot;readonly&quot;: true
            },
            {
              &quot;id&quot;: 2,
              &quot;redactor&quot;: &quot;&quot;,
              &quot;text&quot;: &quot;REUNION&quot;,
              &quot;start_date&quot;: &quot;02-04-2018&quot;,
              &quot;duration&quot;: 24,
              &quot;progress&quot;: 0.6,
              &quot;parent&quot;: 1,
              &quot;open&quot;: true
            },
            {
              &quot;id&quot;: 3,
              &quot;redactor&quot;: &quot;Konstantin DZUBA&quot;,
              &quot;text&quot;: &quot;Deplacement&quot;,
              &quot;start_date&quot;: &quot;05-04-2018&quot;,
              &quot;duration&quot;: 68,
              &quot;progress&quot;: 0.6,
              &quot;parent&quot;: 2
            },
            {
              &quot;id&quot;: 4,
              &quot;redactor&quot;: &quot;Danil ERMOLENKO&quot;,
              &quot;text&quot;: &quot;Prise de nodes&quot;,
              &quot;start_date&quot;: &quot;11-04-2018&quot;,
              &quot;duration&quot;: 15,
              &quot;progress&quot;: 0.6,
              &quot;parent&quot;: 2,
              &quot;deadlines&quot;: true
            }
          ],
          &quot;links&quot;: [
            { &quot;id&quot;: 1, &quot;source&quot;: 1, &quot;target&quot;: 2, &quot;type&quot;: &quot;1&quot; },
            { &quot;id&quot;: 2, &quot;source&quot;: 2, &quot;target&quot;: 3, &quot;type&quot;: &quot;0&quot; },
            { &quot;id&quot;: 3, &quot;source&quot;: 3, &quot;target&quot;: 4, &quot;type&quot;: &quot;0&quot; }
          ]
        }</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(309)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>MultiLine(10000)</CodeInterface>
			<ColorGroup>2</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>startdate</Name>
			<DisplayName>#Lang(927)</DisplayName>
			<Description>#Lang(217)</Description>
			<DefaultValue>new Date()</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(317)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>MultiLine(10000)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>enddate</Name>
			<DisplayName>#Lang(928)</DisplayName>
			<Description>#Lang(217)</Description>
			<DefaultValue></DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(317)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>MultiLine(10000)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>durationunit</Name>
			<DisplayName>#Lang(931)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>day</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(317)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(932)|minute)|(#Lang(933)|hour)|(#Lang(934)|day)|(#Lang(935)|week)|(#Lang(936)|month)|(#Lang(937)|year))</CodeInterface>
			<ColorGroup>2</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>durationstep</Name>
			<DisplayName>#Lang(938)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>1</DefaultValue>
			<RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(308)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(4)</CodeInterface>
			<ColorGroup>2</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>showlightbox</Name>
			<DisplayName>#Lang(947)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>true</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(407)|true)|(#Lang(408)|false))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>rounddnddates</Name>
			<DisplayName>#Lang(939)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>false</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(407)|true)|(#Lang(408)|false))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>worktime</Name>
			<DisplayName>#Lang(940)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>false</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(407)|true)|(#Lang(408)|false))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>correctworktime</Name>
			<DisplayName>#Lang(941)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>false</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(407)|true)|(#Lang(408)|false))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>showtodaymarker</Name>
			<DisplayName>#Lang(948)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>false</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(407)|true)|(#Lang(408)|false))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>autoscheduling</Name>
			<DisplayName>#Lang(951)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>false</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(407)|true)|(#Lang(408)|false))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>mincolumnwidth</Name>
			<DisplayName>#Lang(942)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>10</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(500)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>classname</Name>
			<DisplayName>#Lang(122)</DisplayName>
			<Description>#Lang(222)</Description>
			<DefaultValue></DefaultValue>
			<RegularExpressionValidation>^.*$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(322)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(500)</CodeInterface>
			<ColorGroup>4</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>highlightweekend</Name>
			<DisplayName>#Lang(121)</DisplayName>
			<Description>#Lang(221)</Description>
			<DefaultValue></DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(321)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>Color()</CodeInterface>
			<ColorGroup>2</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>zoom</Name>
			<DisplayName>#Lang(943)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>
				{
					minColumnWidth: 50,
					maxColumnWidth: 50,
					levels: [
						[
							{ unit: "month", format: "%M %Y", step: 1, css: () => '' },
							{
								unit: "week", step: 1, format: function (date) {
									const dateToStr = gantt.date.date_to_str("%d %M");
									const endDate = gantt.date.add(date, -6, "day");
									return dateToStr(date) + " - " + dateToStr(endDate);
								}
							}
						],
						[
							{
								unit: "week", step: 1, format: function (date) {
									const dateToStr = gantt.date.date_to_str("%d %M");
									const endDate = gantt.date.add(date, -6, "day");
									return dateToStr(date) + " - " + dateToStr(endDate);
								}
							},
							{ unit: "day", format: "%d", step: 1 }
						],
						[
							{ unit: "day", format: "%d %M", step: 1 },
							{ unit: "hour", format: "%H:%i", step: 1 }
						]
					],
					useKey: "ctrlKey",
					trigger: "wheel",
					element: function () {
						return gantt_o_0b1e8527_f6dd_4096_9fff_19772a921696.$root.querySelector(".gantt_task");
					}
				}
			</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>MultiLine(10000)</CodeInterface>
			<ColorGroup>2</ColorGroup>
		</Attribute>
	</Attributes>
	<Languages>
		<Language Code="en_US">
			<Sentence ID="001">Gantt</Sentence>
			<Sentence ID="002">The gantt chart</Sentence>
			<Sentence ID="003"></Sentence>
			<Sentence ID="101"></Sentence>
			<Sentence ID="102">Hierarchy</Sentence>
			<Sentence ID="103">Visibility</Sentence>
			<Sentence ID="104">Z-Index</Sentence>
			<Sentence ID="105">Top</Sentence>
			<Sentence ID="106">Left</Sentence>
			<Sentence ID="107">Width</Sentence>
			<Sentence ID="108">Height</Sentence>
			<Sentence ID="109">Data</Sentence>
			<Sentence ID="111">Time scale</Sentence>
			<Sentence ID="112">Split tasks</Sentence>
			<Sentence ID="113">Readonly</Sentence>
			<Sentence ID="114">Duration unit</Sentence>
			<Sentence ID="115">Reordering tasks</Sentence>
			<Sentence ID="116">Disable add button</Sentence>
			<Sentence ID="117">Zooming</Sentence>
			<Sentence ID="118">Deadline</Sentence>
			<Sentence ID="119">Skip off time</Sentence>
			<Sentence ID="121">Highlight weekend</Sentence>
			<Sentence ID="122">CSS Class</Sentence>
			<Sentence ID="123">Style</Sentence>
			<Sentence ID="125">Data Type</Sentence>
			<Sentence ID="126">UI language</Sentence>
			<Sentence ID="127">Base tasks</Sentence>
			<Sentence ID="128">Custom</Sentence>
			<Sentence ID="201"></Sentence>
			<Sentence ID="202">Order of rendering the object on the page</Sentence>
			<Sentence ID="203">Visibility of the object</Sentence>
			<Sentence ID="204">Position in visual hierarchy of objects</Sentence>
			<Sentence ID="205">Spacing between the top edge of the container and the object in pixels</Sentence>
			<Sentence ID="206">Spacing between the left edge of the container and the object in pixels</Sentence>
			<Sentence ID="207">Width of the object in pixels</Sentence>
			<Sentence ID="208">Height of the object in pixels</Sentence>
			<Sentence ID="209">Specific dhtmlx gantt data</Sentence>
			<Sentence ID="211">Defines configuration settings of the time scale</Sentence>
			<Sentence ID="212">Available split tasks</Sentence>
			<Sentence ID="213">Set gantt diagramm only read mode</Sentence>
			<Sentence ID="214">Set duration unit</Sentence>
			<Sentence ID="215">Add reordering tasks by drag and drop</Sentence>
			<Sentence ID="216">Disable add button for levels &gt;= value, where value from 0 to 100</Sentence>
			<Sentence ID="217">Add support zooming time scale</Sentence>
			<Sentence ID="218">Add deadline to task</Sentence>
			<Sentence ID="219">Hide off time days in time scale</Sentence>
			<Sentence ID="221">Color to highlight the weekend</Sentence>
			<Sentence ID="222">CSS class name</Sentence>
			<Sentence ID="223">Custom style for gantt elements</Sentence>
			<Sentence ID="225">Data Type</Sentence>
			<Sentence ID="226">UI language code</Sentence>
			<Sentence ID="227">Define base tasks of gantt chart</Sentence>
			<Sentence ID="228">Add new custom task type</Sentence>
			<Sentence ID="301"></Sentence>
			<Sentence ID="302">Incorrect value, must be even integer from 0 to 99</Sentence>
			<Sentence ID="303">Incorrect value, must be either 0 or 1</Sentence>
			<Sentence ID="304">Incorrect value, must be even integer from 0 to 99</Sentence>
			<Sentence ID="305">Incorrect value, must be even positive integer</Sentence>
			<Sentence ID="306">Incorrect value, must be even positive integer</Sentence>
			<Sentence ID="307">Incorrect value, must be even positive integer</Sentence>
			<Sentence ID="308">Incorrect value, must be even positive integer</Sentence>
			<Sentence ID="309">Invalid data for gantt chart</Sentence>
			<Sentence ID="311">Error in time scale</Sentence>
			<Sentence ID="312">Error in split tasks</Sentence>
			<Sentence ID="313">Error in readonly</Sentence>
			<Sentence ID="314">Error in duration unit</Sentence>
			<Sentence ID="315">Error in reordering tasks</Sentence>
			<Sentence ID="316">Value must be in range from 0 to 100</Sentence>
			<Sentence ID="317">Error in zooming</Sentence>
			<Sentence ID="318">Error in deadline</Sentence>
			<Sentence ID="319">Error in skip off time</Sentence>
			<Sentence ID="321">Error in highlight weekend</Sentence>
			<Sentence ID="322">Names of CSS classes</Sentence>
			<Sentence ID="323">Error in style</Sentence>
			<Sentence ID="325">Invalid data type</Sentence>
			<Sentence ID="326">Wrong language</Sentence>
			<Sentence ID="327">Error in base tasks</Sentence>
			<Sentence ID="328">Error in custom task type</Sentence>
			<Sentence ID="401"></Sentence>
			<Sentence ID="402"></Sentence>
			<Sentence ID="403">Invisible</Sentence>
			<Sentence ID="404">Visible</Sentence>
			<Sentence ID="405">Yes</Sentence>
			<Sentence ID="406">No</Sentence>
			<Sentence ID="407">Yes</Sentence>
			<Sentence ID="408">No</Sentence>
			<Sentence ID="409">day</Sentence>
			<Sentence ID="411">hour</Sentence>
			<Sentence ID="412">Yes</Sentence>
			<Sentence ID="413">No</Sentence>
			<Sentence ID="414">Yes</Sentence>
			<Sentence ID="415">No</Sentence>
			<Sentence ID="416">Yes</Sentence>
			<Sentence ID="417">No</Sentence>
			<Sentence ID="418">Yes</Sentence>
			<Sentence ID="419">No</Sentence>
			<Sentence ID="421">Invisible</Sentence>
			<Sentence ID="422">Visible</Sentence>
			<Sentence ID="423">xml</Sentence>
			<Sentence ID="424">json</Sentence>
			<Sentence ID="425">English</Sentence>
			<Sentence ID="426">French</Sentence>
			<Sentence ID="427">Russian</Sentence>
			<Sentence ID="501">Add new CSS class.</Sentence>
			<Sentence ID="502">Add new link for gantt diagram</Sentence>
			<Sentence ID="503">Add task into gantt diagram</Sentence>
			<Sentence ID="504">Hide the object</Sentence>
			<Sentence ID="505">Move the object to a new position</Sentence>
			<Sentence ID="506">Hide the object</Sentence>
			<Sentence ID="507"></Sentence>
			<Sentence ID="508">Set new gantt data</Sentence>
			<Sentence ID="509">Set focus on the object</Sentence>
			<Sentence ID="511">Set new CSS style of the object</Sentence>
			<Sentence ID="512">Show the object</Sentence>
			<Sentence ID="513"></Sentence>
			<Sentence ID="514"></Sentence>
			<Sentence ID="515"></Sentence>
			<Sentence ID="516"></Sentence>
			<Sentence ID="517"></Sentence>
			<Sentence ID="518"></Sentence>
			<Sentence ID="519"></Sentence>
			<Sentence ID="521"></Sentence>
			<Sentence ID="522"></Sentence>
			<Sentence ID="523"></Sentence>
			<Sentence ID="524"></Sentence>
			<Sentence ID="525">After add, delete or update link</Sentence>
			<Sentence ID="526">After add, delete or update task</Sentence>
			<Sentence ID="527"></Sentence>
			<Sentence ID="601">addClass</Sentence>
			<Sentence ID="602">addLink</Sentence>
			<Sentence ID="603">addTask</Sentence>
			<Sentence ID="604">Hide</Sentence>
			<Sentence ID="605">moveTo</Sentence>
			<Sentence ID="606">Hide</Sentence>
			<Sentence ID="607">setClass</Sentence>
			<Sentence ID="608">setData</Sentence>
			<Sentence ID="609">setFocus</Sentence>
			<Sentence ID="611">setStyle</Sentence>
			<Sentence ID="612">Show</Sentence>
			<Sentence ID="701">className</Sentence>
			<Sentence ID="702">data</Sentence>
			<Sentence ID="703">data</Sentence>
			<Sentence ID="704">Fade</Sentence>
			<Sentence ID="705">newX</Sentence>
			<Sentence ID="706">newY</Sentence>
			<Sentence ID="707">Effect</Sentence>
			<Sentence ID="708">Fade</Sentence>
			<Sentence ID="709"></Sentence>
			<Sentence ID="711">data</Sentence>
			<Sentence ID="712">cssStyleValue</Sentence>
			<Sentence ID="713">Fade</Sentence>
			<Sentence ID="801">The name of the CSS class.</Sentence>
			<Sentence ID="802">Data for link</Sentence>
			<Sentence ID="803">Data for new task</Sentence>
			<Sentence ID="804">Fade effect, time is indicated in milliseconds</Sentence>
			<Sentence ID="805">X-coordinate of the new position relative to the left upper corner of the container</Sentence>
			<Sentence ID="806">Y-coordinate of the new position relative to the left upper corner of the container</Sentence>
			<Sentence ID="807">Visual effect of moving, time is indicated in milliseconds</Sentence>
			<Sentence ID="808">Fade effect, time is indicated in milliseconds</Sentence>
			<Sentence ID="809"></Sentence>
			<Sentence ID="811">New data for gantt chart</Sentence>
			<Sentence ID="812">CSS style value</Sentence>
			<Sentence ID="813">Fade effect, time is indicated in milliseconds</Sentence>
			<Sentence ID="903">Current X-value</Sentence>
			<Sentence ID="904">Current X-value</Sentence>
			<Sentence ID="905">Current X-value</Sentence>
			<Sentence ID="906">Current X-value</Sentence>
			<Sentence ID="907">Current X-value</Sentence>
			<Sentence ID="908">Current X-value</Sentence>
			<Sentence ID="909">Current X-value</Sentence>
			<Sentence ID="911">Current X-value</Sentence>
			<Sentence ID="912">Current X-value</Sentence>
			<Sentence ID="913">Current X-value</Sentence>
			<Sentence ID="914">Current X-value</Sentence>
			<Sentence ID="915">Current X-value</Sentence>
			<Sentence ID="916">Current X-value</Sentence>
			<Sentence ID="917">Current X-value</Sentence>
			<Sentence ID="918">Current X-value</Sentence>
			<Sentence ID="919">Current X-value</Sentence>
			<Sentence ID="921">params</Sentence>
			<Sentence ID="922">Link object</Sentence>
			<Sentence ID="923">Link id</Sentence>
			<Sentence ID="924">Task object</Sentence>
			<Sentence ID="925">Task id</Sentence>
			<Sentence ID="926">Current X-value</Sentence>
			<Sentence ID="927">Start date</Sentence>
			<Sentence ID="928">End date</Sentence>
			<Sentence ID="929">Set date range</Sentence>
			<Sentence ID="930">Columns</Sentence>
			<Sentence ID="931">Duration unit</Sentence>
			<Sentence ID="932">minute</Sentence>
			<Sentence ID="933">hour</Sentence>
			<Sentence ID="934">day</Sentence>
			<Sentence ID="935">week</Sentence>
			<Sentence ID="936">month</Sentence>
			<Sentence ID="937">year</Sentence>
			<Sentence ID="938">Duration step</Sentence>
			<Sentence ID="939">Round dnd dates</Sentence>
			<Sentence ID="940">Work time</Sentence>
			<Sentence ID="941">Correct work time</Sentence>
			<Sentence ID="942">Min column width</Sentence>
			<Sentence ID="943">Zoom config</Sentence>
			<Sentence ID="944">Set config</Sentence>
			<Sentence ID="945">config</Sentence>
			<Sentence ID="946">value</Sentence>
			<Sentence ID="947">Show lightbox</Sentence>
			<Sentence ID="948">Show today marker</Sentence>
			<Sentence ID="949">Zoom in</Sentence>
			<Sentence ID="950">Zoom out</Sentence>
			<Sentence ID="951">Auto scheduling</Sentence>
		</Language>
		<Language Code="fr_FR">
			<Sentence ID="001">Gantt</Sentence>
			<Sentence ID="002">The gantt chart</Sentence>
			<Sentence ID="003"></Sentence>
			<Sentence ID="101"></Sentence>
			<Sentence ID="102">Hiérarchie</Sentence>
			<Sentence ID="103">Visibilité</Sentence>
			<Sentence ID="104">Z-Index</Sentence>
			<Sentence ID="105">Haut</Sentence>
			<Sentence ID="106">Gauche</Sentence>
			<Sentence ID="107">Largeur</Sentence>
			<Sentence ID="108">Hauteur</Sentence>
			<Sentence ID="109">Data</Sentence>
			<Sentence ID="111">Time scale</Sentence>
			<Sentence ID="112"></Sentence>
			<Sentence ID="113">Readonly</Sentence>
			<Sentence ID="114">Duration unit</Sentence>
			<Sentence ID="115"></Sentence>
			<Sentence ID="116">Disable add button</Sentence>
			<Sentence ID="117"></Sentence>
			<Sentence ID="118">Deadline</Sentence>
			<Sentence ID="119">Skip off time</Sentence>
			<Sentence ID="121"></Sentence>
			<Sentence ID="122">Class</Sentence>
			<Sentence ID="123">Style</Sentence>
			<Sentence ID="125"></Sentence>
			<Sentence ID="126"></Sentence>
			<Sentence ID="127">Base tasks</Sentence>
			<Sentence ID="128">Custom parameters</Sentence>
			<Sentence ID="201"></Sentence>
			<Sentence ID="202">Hiérarchie de l&apos;objet, ordre de chargement de l&apos;objet par rapport aux autres</Sentence>
			<Sentence ID="203">Afficher ou cacher l&apos;objet</Sentence>
			<Sentence ID="204">Niveau de superposition de l&apos;objet par rapport aux autres</Sentence>
			<Sentence ID="205">Distance depuis le bord haut de l&apos;objet parent en pixels</Sentence>
			<Sentence ID="206">Distance depuis le bord gauche de l&apos;objet parent en pixels</Sentence>
			<Sentence ID="207">Largeur de l&apos;objet en pixels</Sentence>
			<Sentence ID="208">Hauteur de l&apos;objet en pixels</Sentence>
			<Sentence ID="209">Specific dhtmlx gantt data</Sentence>
			<Sentence ID="211">Defines configuration settings of the time scale</Sentence>
			<Sentence ID="212"></Sentence>
			<Sentence ID="213">Set gantt diagramm only read mode</Sentence>
			<Sentence ID="214">Set duration unit</Sentence>
			<Sentence ID="215"></Sentence>
			<Sentence ID="216">Disable add button for levels &gt;= value, where value from 0 to 100</Sentence>
			<Sentence ID="217"></Sentence>
			<Sentence ID="218">Add deadline to task</Sentence>
			<Sentence ID="219">Hide off time days in time scale</Sentence>
			<Sentence ID="221"></Sentence>
			<Sentence ID="222">CSS class name</Sentence>
			<Sentence ID="223">Custom style for gantt elements</Sentence>
			<Sentence ID="225"></Sentence>
			<Sentence ID="226"></Sentence>
			<Sentence ID="227">Define base tasks of gantt chart</Sentence>
			<Sentence ID="228">Add new custom task type</Sentence>
			<Sentence ID="301"></Sentence>
			<Sentence ID="302">Valeur Incorrecte, doit être positive</Sentence>
			<Sentence ID="303">Valeur Incorrecte, doit être 0 ou 1</Sentence>
			<Sentence ID="304">Valeur Incorrecte, doit être positive</Sentence>
			<Sentence ID="305">Valeur Incorrecte, doit être positive</Sentence>
			<Sentence ID="306">Valeur Incorrecte, doit être positive</Sentence>
			<Sentence ID="307">Valeur Incorrecte, doit être positive</Sentence>
			<Sentence ID="308">Valeur Incorrecte, doit être positive</Sentence>
			<Sentence ID="309">Invalid data for gantt chart</Sentence>
			<Sentence ID="311">Error in time scale</Sentence>
			<Sentence ID="312"></Sentence>
			<Sentence ID="313">Error in readonly</Sentence>
			<Sentence ID="314">Error in duration unit</Sentence>
			<Sentence ID="315"></Sentence>
			<Sentence ID="316">Value must be in range from 0 to 100</Sentence>
			<Sentence ID="317"></Sentence>
			<Sentence ID="318">Error in deadline</Sentence>
			<Sentence ID="319">Error in skip off time</Sentence>
			<Sentence ID="321"></Sentence>
			<Sentence ID="322">Incorrect value</Sentence>
			<Sentence ID="323">Error in style</Sentence>
			<Sentence ID="325"></Sentence>
			<Sentence ID="326"></Sentence>
			<Sentence ID="327">Error in base tasks</Sentence>
			<Sentence ID="328">Error in custom task type</Sentence>
			<Sentence ID="401"></Sentence>
			<Sentence ID="402"></Sentence>
			<Sentence ID="403">Invisible</Sentence>
			<Sentence ID="404">Visible</Sentence>
			<Sentence ID="405"></Sentence>
			<Sentence ID="406"></Sentence>
			<Sentence ID="407"></Sentence>
			<Sentence ID="408"></Sentence>
			<Sentence ID="409">day</Sentence>
			<Sentence ID="411">hour</Sentence>
			<Sentence ID="412"></Sentence>
			<Sentence ID="413"></Sentence>
			<Sentence ID="414"></Sentence>
			<Sentence ID="415"></Sentence>
			<Sentence ID="416">Yes</Sentence>
			<Sentence ID="417">No</Sentence>
			<Sentence ID="418"></Sentence>
			<Sentence ID="419"></Sentence>
			<Sentence ID="421">Invisible</Sentence>
			<Sentence ID="422">Visible</Sentence>
			<Sentence ID="423"></Sentence>
			<Sentence ID="424"></Sentence>
			<Sentence ID="425">English</Sentence>
			<Sentence ID="426">French</Sentence>
			<Sentence ID="427">Russian</Sentence>
			<Sentence ID="501">Add new CSS class.</Sentence>
			<Sentence ID="502">Add new link for gantt diagram</Sentence>
			<Sentence ID="503">Add task into gantt diagram</Sentence>
			<Sentence ID="504">Hide the object</Sentence>
			<Sentence ID="505">Move object to selected point</Sentence>
			<Sentence ID="506">Hide the object</Sentence>
			<Sentence ID="507"></Sentence>
			<Sentence ID="508">Set new gantt data</Sentence>
			<Sentence ID="509">Set focus to the object</Sentence>
			<Sentence ID="511">Set new CSS style</Sentence>
			<Sentence ID="512">Show the object</Sentence>
			<Sentence ID="513"></Sentence>
			<Sentence ID="514"></Sentence>
			<Sentence ID="515"></Sentence>
			<Sentence ID="516"></Sentence>
			<Sentence ID="517"></Sentence>
			<Sentence ID="518"></Sentence>
			<Sentence ID="519"></Sentence>
			<Sentence ID="521"></Sentence>
			<Sentence ID="522"></Sentence>
			<Sentence ID="523"></Sentence>
			<Sentence ID="524"></Sentence>
			<Sentence ID="525">After add, delete or update link</Sentence>
			<Sentence ID="526">After add, delete or update task</Sentence>
			<Sentence ID="527"></Sentence>
			<Sentence ID="601">addClass</Sentence>
			<Sentence ID="602">addLink</Sentence>
			<Sentence ID="603">addTask</Sentence>
			<Sentence ID="604">Hide</Sentence>
			<Sentence ID="605">moveTo</Sentence>
			<Sentence ID="606">Hide</Sentence>
			<Sentence ID="607">setClass</Sentence>
			<Sentence ID="608">setData</Sentence>
			<Sentence ID="609">setFocus</Sentence>
			<Sentence ID="611">setStyle</Sentence>
			<Sentence ID="612">Show</Sentence>
			<Sentence ID="701">className</Sentence>
			<Sentence ID="702">data</Sentence>
			<Sentence ID="703">data</Sentence>
			<Sentence ID="704">Fade</Sentence>
			<Sentence ID="705">newX</Sentence>
			<Sentence ID="706">newY</Sentence>
			<Sentence ID="707">Effect</Sentence>
			<Sentence ID="708">Fade</Sentence>
			<Sentence ID="709"></Sentence>
			<Sentence ID="711">data</Sentence>
			<Sentence ID="712">cssStyleValue</Sentence>
			<Sentence ID="713">Fade</Sentence>
			<Sentence ID="801">The name of the CSS class.</Sentence>
			<Sentence ID="802">Data for link</Sentence>
			<Sentence ID="803">Data for new task</Sentence>
			<Sentence ID="804">Fade time</Sentence>
			<Sentence ID="805">X-coordinate of new point</Sentence>
			<Sentence ID="806">Y-coordinate of new point</Sentence>
			<Sentence ID="807">Visual effect by moving</Sentence>
			<Sentence ID="808">Fade time</Sentence>
			<Sentence ID="809"></Sentence>
			<Sentence ID="811">New data for gantt chart</Sentence>
			<Sentence ID="812">New CSS style value</Sentence>
			<Sentence ID="813">Time of appearance</Sentence>
			<Sentence ID="903">Current X-value</Sentence>
			<Sentence ID="904">Current X-value</Sentence>
			<Sentence ID="905">Current X-value</Sentence>
			<Sentence ID="906">Current X-value</Sentence>
			<Sentence ID="907">Current X-value</Sentence>
			<Sentence ID="908">Current X-value</Sentence>
			<Sentence ID="909">Current X-value</Sentence>
			<Sentence ID="911">Current X-value</Sentence>
			<Sentence ID="912">Current X-value</Sentence>
			<Sentence ID="913">Current X-value</Sentence>
			<Sentence ID="914">Current X-value</Sentence>
			<Sentence ID="915">Current X-value</Sentence>
			<Sentence ID="916">Current X-value</Sentence>
			<Sentence ID="917">Current X-value</Sentence>
			<Sentence ID="918">Current X-value</Sentence>
			<Sentence ID="919">Current X-value</Sentence>
			<Sentence ID="921"></Sentence>
			<Sentence ID="922">Link object</Sentence>
			<Sentence ID="923">Link id</Sentence>
			<Sentence ID="924">Task object</Sentence>
			<Sentence ID="925">Task id</Sentence>
			<Sentence ID="926">Current X-value</Sentence>
			<Sentence ID="927">Start date</Sentence>
			<Sentence ID="928">End date</Sentence>
			<Sentence ID="929">Set date range</Sentence>
			<Sentence ID="930">Columns</Sentence>
			<Sentence ID="931">Duration unit</Sentence>
			<Sentence ID="932">minute</Sentence>
			<Sentence ID="933">hour</Sentence>
			<Sentence ID="934">day</Sentence>
			<Sentence ID="935">week</Sentence>
			<Sentence ID="936">month</Sentence>
			<Sentence ID="937">year</Sentence>
			<Sentence ID="938">Duration step</Sentence>
			<Sentence ID="939">Round dnd dates</Sentence>
			<Sentence ID="940">Work time</Sentence>
			<Sentence ID="941">Correct work time</Sentence>
			<Sentence ID="942">Min column width</Sentence>
			<Sentence ID="943">Zoom config</Sentence>
			<Sentence ID="944">Set config</Sentence>
			<Sentence ID="945">config</Sentence>
			<Sentence ID="946">value</Sentence>
			<Sentence ID="947">Show lightbox</Sentence>
			<Sentence ID="948">Show today marker</Sentence>
			<Sentence ID="949">Zoom in</Sentence>
			<Sentence ID="950">Zoom out</Sentence>
			<Sentence ID="951">Auto scheduling</Sentence>
		</Language>
		<Language Code="ru_RU">
			<Sentence ID="001">Gantt</Sentence>
			<Sentence ID="002">The gantt chart</Sentence>
			<Sentence ID="003"></Sentence>
			<Sentence ID="101"></Sentence>
			<Sentence ID="102">Иерархия</Sentence>
			<Sentence ID="103">Отображение</Sentence>
			<Sentence ID="104">Позиция</Sentence>
			<Sentence ID="105">Сверху</Sentence>
			<Sentence ID="106">Слева</Sentence>
			<Sentence ID="107">Ширина</Sentence>
			<Sentence ID="108">Высота</Sentence>
			<Sentence ID="109">Data</Sentence>
			<Sentence ID="111">Time scale</Sentence>
			<Sentence ID="112"></Sentence>
			<Sentence ID="113">Readonly</Sentence>
			<Sentence ID="114">Duration unit</Sentence>
			<Sentence ID="115"></Sentence>
			<Sentence ID="116">Disable add button</Sentence>
			<Sentence ID="117"></Sentence>
			<Sentence ID="118">Deadline</Sentence>
			<Sentence ID="119">Skip off time</Sentence>
			<Sentence ID="121"></Sentence>
			<Sentence ID="122">Класс CSS</Sentence>
			<Sentence ID="123">Style</Sentence>
			<Sentence ID="125"></Sentence>
			<Sentence ID="126"></Sentence>
			<Sentence ID="127">Base tasks</Sentence>
			<Sentence ID="128">Custom parameters</Sentence>
			<Sentence ID="201"></Sentence>
			<Sentence ID="202">Порядок визуализации объекта в ходе загрузки страницы</Sentence>
			<Sentence ID="203">Неправильное значение, должен быть указан 0 или 1</Sentence>
			<Sentence ID="204">Положение в визуальной иерархии объектов</Sentence>
			<Sentence ID="205">Расстояние от верхней границы родительского контейнера до объекта в пикселях</Sentence>
			<Sentence ID="206">Расстояние от левой границы родительского контейнера до объекта в пикселях</Sentence>
			<Sentence ID="207">Ширина объекта в пикселях</Sentence>
			<Sentence ID="208">Высота объекта в пикселях</Sentence>
			<Sentence ID="209">Specific dhtmlx gantt data</Sentence>
			<Sentence ID="211">Defines configuration settings of the time scale</Sentence>
			<Sentence ID="212"></Sentence>
			<Sentence ID="213">Set gantt diagramm only read mode</Sentence>
			<Sentence ID="214">Set duration unit</Sentence>
			<Sentence ID="215"></Sentence>
			<Sentence ID="216">Disable add button for levels &gt;= value, where value from 0 to 100</Sentence>
			<Sentence ID="217"></Sentence>
			<Sentence ID="218">Add deadline to task</Sentence>
			<Sentence ID="219">Hide off time days in time scale</Sentence>
			<Sentence ID="221"></Sentence>
			<Sentence ID="222">Имя класса CSS</Sentence>
			<Sentence ID="223">Custom style for gantt elements</Sentence>
			<Sentence ID="225"></Sentence>
			<Sentence ID="226"></Sentence>
			<Sentence ID="227">Define base tasks of gantt chart</Sentence>
			<Sentence ID="228">Add new custom task type</Sentence>
			<Sentence ID="301"></Sentence>
			<Sentence ID="302">Неправильное значение, должно быть указано целое число от 0 до 99</Sentence>
			<Sentence ID="303">Неправильное значение</Sentence>
			<Sentence ID="304">Неправильное значение, должно быть указано целое число от 0 до 99</Sentence>
			<Sentence ID="305">Неправильное значение, должно быть указано целое положительное число</Sentence>
			<Sentence ID="306">Неправильное значение, должно быть указано целое положительное число</Sentence>
			<Sentence ID="307">Неправильное значение, должно быть указано целое положительное число</Sentence>
			<Sentence ID="308">Неправильное значение, должно быть указано целое положительное число</Sentence>
			<Sentence ID="309">Invalid data for gantt chart</Sentence>
			<Sentence ID="311">Error in time scale</Sentence>
			<Sentence ID="312"></Sentence>
			<Sentence ID="313">Error in readonly</Sentence>
			<Sentence ID="314">Error in duration unit</Sentence>
			<Sentence ID="315"></Sentence>
			<Sentence ID="316">Value must be in range from 0 to 100</Sentence>
			<Sentence ID="317"></Sentence>
			<Sentence ID="318">Error in deadline</Sentence>
			<Sentence ID="319">Error in skip off time</Sentence>
			<Sentence ID="321"></Sentence>
			<Sentence ID="322">Неправильное значение</Sentence>
			<Sentence ID="323">Error in style</Sentence>
			<Sentence ID="325"></Sentence>
			<Sentence ID="326"></Sentence>
			<Sentence ID="327">Error in base tasks</Sentence>
			<Sentence ID="328">Error in custom task type</Sentence>
			<Sentence ID="401"></Sentence>
			<Sentence ID="402"></Sentence>
			<Sentence ID="403">Не отображать</Sentence>
			<Sentence ID="404">Отображать</Sentence>
			<Sentence ID="405"></Sentence>
			<Sentence ID="406"></Sentence>
			<Sentence ID="407"></Sentence>
			<Sentence ID="408"></Sentence>
			<Sentence ID="409">day</Sentence>
			<Sentence ID="411">hour</Sentence>
			<Sentence ID="412"></Sentence>
			<Sentence ID="413"></Sentence>
			<Sentence ID="414"></Sentence>
			<Sentence ID="415"></Sentence>
			<Sentence ID="416">Yes</Sentence>
			<Sentence ID="417">No</Sentence>
			<Sentence ID="418">Yes</Sentence>
			<Sentence ID="419">No</Sentence>
			<Sentence ID="421">Невидимая</Sentence>
			<Sentence ID="422">Видимая</Sentence>
			<Sentence ID="423"></Sentence>
			<Sentence ID="424"></Sentence>
			<Sentence ID="425">English</Sentence>
			<Sentence ID="426">French</Sentence>
			<Sentence ID="427">Russian</Sentence>
			<Sentence ID="501">Add new CSS class.</Sentence>
			<Sentence ID="502">Add new link for gantt diagram</Sentence>
			<Sentence ID="503">Add task into gantt diagram</Sentence>
			<Sentence ID="504">Скрыть объект</Sentence>
			<Sentence ID="505">Сдвинуть объект в заданную точку</Sentence>
			<Sentence ID="506">Скрыть объект</Sentence>
			<Sentence ID="507"></Sentence>
			<Sentence ID="508">Set new gantt data</Sentence>
			<Sentence ID="509">Установить фокус на объекте</Sentence>
			<Sentence ID="511">Установить новый стиль CSS</Sentence>
			<Sentence ID="512">Показать объект</Sentence>
			<Sentence ID="513"></Sentence>
			<Sentence ID="514"></Sentence>
			<Sentence ID="515"></Sentence>
			<Sentence ID="516"></Sentence>
			<Sentence ID="517"></Sentence>
			<Sentence ID="518"></Sentence>
			<Sentence ID="519"></Sentence>
			<Sentence ID="521"></Sentence>
			<Sentence ID="522"></Sentence>
			<Sentence ID="523"></Sentence>
			<Sentence ID="524"></Sentence>
			<Sentence ID="525">After add, delete or update link</Sentence>
			<Sentence ID="526">After add, delete or update task</Sentence>
			<Sentence ID="527"></Sentence>
			<Sentence ID="601">addClass</Sentence>
			<Sentence ID="602">addLink</Sentence>
			<Sentence ID="603">addTask</Sentence>
			<Sentence ID="604">Скрыть</Sentence>
			<Sentence ID="605">Сдвинуть</Sentence>
			<Sentence ID="606">Скрыть</Sentence>
			<Sentence ID="607">setClass</Sentence>
			<Sentence ID="608">setData</Sentence>
			<Sentence ID="609">Установить фокус</Sentence>
			<Sentence ID="611">Установить стиль</Sentence>
			<Sentence ID="612">Показать</Sentence>
			<Sentence ID="701">className</Sentence>
			<Sentence ID="702">data</Sentence>
			<Sentence ID="703">data</Sentence>
			<Sentence ID="704">Исчезновение</Sentence>
			<Sentence ID="705">Координата по оси X</Sentence>
			<Sentence ID="706">Координата по оси Y</Sentence>
			<Sentence ID="707">Эффект</Sentence>
			<Sentence ID="708">Исчезновение</Sentence>
			<Sentence ID="709"></Sentence>
			<Sentence ID="711">data</Sentence>
			<Sentence ID="712">Стиль CSS</Sentence>
			<Sentence ID="713">Появление</Sentence>
			<Sentence ID="801">The name of the CSS class.</Sentence>
			<Sentence ID="802">Data for link</Sentence>
			<Sentence ID="803">Data for new task</Sentence>
			<Sentence ID="804">Время исчезновения в миллисекундах</Sentence>
			<Sentence ID="805">Координата новой точки по оси X</Sentence>
			<Sentence ID="806">Координата новой точки по оси Y</Sentence>
			<Sentence ID="807">Визуальный эффект при перетаскивании</Sentence>
			<Sentence ID="808">Время исчезновения в миллисекундах</Sentence>
			<Sentence ID="809"></Sentence>
			<Sentence ID="811">New data for gantt chart</Sentence>
			<Sentence ID="812">Новое значение стиля</Sentence>
			<Sentence ID="813">Время появления в миллисекундах</Sentence>
			<Sentence ID="903">Текущее значение X</Sentence>
			<Sentence ID="904">Текущее значение X</Sentence>
			<Sentence ID="905">Текущее значение X</Sentence>
			<Sentence ID="906">Текущее значение X</Sentence>
			<Sentence ID="907">Текущее значение X</Sentence>
			<Sentence ID="908">Текущее значение X</Sentence>
			<Sentence ID="909">Текущее значение X</Sentence>
			<Sentence ID="911">Текущее значение X</Sentence>
			<Sentence ID="912">Текущее значение X</Sentence>
			<Sentence ID="913">Текущее значение X</Sentence>
			<Sentence ID="914">Текущее значение X</Sentence>
			<Sentence ID="915">Текущее значение X</Sentence>
			<Sentence ID="916">Текущее значение X</Sentence>
			<Sentence ID="917">Текущее значение X</Sentence>
			<Sentence ID="918">Текущее значение X</Sentence>
			<Sentence ID="919">Текущее значение X</Sentence>
			<Sentence ID="921"></Sentence>
			<Sentence ID="922">Link object</Sentence>
			<Sentence ID="923">Link id</Sentence>
			<Sentence ID="924">Task object</Sentence>
			<Sentence ID="925">Task id</Sentence>
			<Sentence ID="926">Текущее значение X</Sentence>
			<Sentence ID="927">Start date</Sentence>
			<Sentence ID="928">End date</Sentence>
			<Sentence ID="929">Set date range</Sentence>
			<Sentence ID="930">Columns</Sentence>
			<Sentence ID="931">Duration unit</Sentence>
			<Sentence ID="932">minute</Sentence>
			<Sentence ID="933">hour</Sentence>
			<Sentence ID="934">day</Sentence>
			<Sentence ID="935">week</Sentence>
			<Sentence ID="936">month</Sentence>
			<Sentence ID="937">year</Sentence>
			<Sentence ID="938">Duration step</Sentence>
			<Sentence ID="939">Round dnd dates</Sentence>
			<Sentence ID="940">Work time</Sentence>
			<Sentence ID="941">Correct work time</Sentence>
			<Sentence ID="942">Min column width</Sentence>
			<Sentence ID="943">Zoom config</Sentence>
			<Sentence ID="944">Set config</Sentence>
			<Sentence ID="945">config</Sentence>
			<Sentence ID="946">value</Sentence>
			<Sentence ID="947">Show lightbox</Sentence>
			<Sentence ID="948">Show today marker</Sentence>
			<Sentence ID="949">Zoom in</Sentence>
			<Sentence ID="950">Zoom out</Sentence>
			<Sentence ID="951">Auto scheduling</Sentence>
		</Language>
	</Languages>
	<Resources>
		<Resource ID="2b5aee40-ed7f-4a64-8d36-f226fca44ac8" Type="png" Name="GantIcon.png">
			iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAA8ElEQVQ4T52SPQqEMBCFJ1FEwcoL
			2HgmDyDW9hZWimJlJXgBwTN4BCtvIoKdqEsChp31L2u6vLz5MrwZkqbpFoYhvD2EUrotywJZlkkx
			fj8TgDiOpQBRFCGfADC1KAqoqgoZDMOAvu8v4QgwDAOM44jM0zSBbdtIM00TCCFcQ4CzbyzLOshd
			14HjOHKAp2BQB+u6HvyU0luGALBiTdMOZpaBrutyIe6upmlEgeu6cNfFaYie5wlAWZagKAq/M5Cq
			qtd7cNan7/tQ1zV/CoIA8jz/D/DtZnuyj5V1Ms/z8x5IjbFt2yff9RSSJNleVvO6D9O3cZax4OrM
			AAAAAElFTkSuQmCC
		</Resource>
		<Resource ID="32dda2ed-1356-4297-8c4b-371919c9c0c5" Type="png" Name="Gantt.png">
			iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAQAAABecRxxAAAABGdBTUEAALGPC/xhBQAAACBjSFJN
			AAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZ
			cwAADsQAAA7EAZUrDhsAAAAHdElNRQfkAxMNBTr3rs8xAAAHj0lEQVR42u3dsYqcVRyH4TOyUSSC
			xWKhndh5A9ZaWdpqaSGolfZWegk24iVYCUbwIiwMpBAkBLV1CSFYaDFWlkEz82X/k3mfZ+pv+O2w
			vHBgmLMWAAAAAAAAAAAAAAAAAAAAcGp267uDnnuw3pueDhxrt/YHPXe1LqenA8d6ZnoAMEcAIEwA
			IEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwA
			IEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIOxiesBa67P1yvQEovbro+kJs3Zrf9BzV+tysw131uvT
			HwNZu+kBsxwBIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwA
			IEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIOwUrgf/ZXoAWYfdjX1GTuF6cGCI
			IwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCE
			CQCECQCECQCECQCECQCEncLNQE/Sc+ul6Qln5+G6Pz2BrZx7AN5a309PODtfrw+mJ7AVRwAIEwAI
			EwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAI
			EwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIO/frwX9c70xPODv3pgewnd3aH/Tc1bqcng4cyxEA
			wgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAws799wD4L39PDzg7v67Xpif8
			fwJQ5z9gazemBzwORwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAI
			EwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIczds3SfTA87Og+kBj2O3
			9gc9d7Uup6cDx3IEgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDAB
			gDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDAB
			gDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDAB
			gDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgLCL6QEHemF9Mz3h7NxdH09P4Lo9
			rQF4dr09PeHs3J4ewPVzBIAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAw
			AYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYCwp/V24L/WrekJZ+fu
			9ACu327tD3rual1OTweO5QgAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIA
			YQIAYQIAYQIAYQIAYQIAYQIAYQIAYU/rz4KfinfXm9MTNvPb+nx6Atdvf9Drj+nZJ+LLAz+/U3z9
			NP1hcv0cASBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBM
			ACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACDM9eDH+X3dnp6wmZ+nB3D9dmt/0HNX
			63J6OnAsRwAIEwAIEwAIEwAIEwAIEwAIEwAI80UgHuXG+nR6wgbur6+mJ5wyXwTiUW6uh9MTNnBv
			vTo94ZQ5AkCYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECY
			AECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECY68F5lP36c3rCBs7hb3iCBIBH+XPd
			nJ7Ak+YIAGECAGECAGECAGECAGECAGECAGG+B0DLF+v96Qkb+HB9u80bCQAtL66Xpyds4Pmt3sgR
			AMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIE
			AMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMLcDkzLD+vB9IQN3NnqjXZrf9BzV+ty+jMAjuUI
			AGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGEC
			AGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGEC
			AGECAGECAGECAGECAGECAGECAGECAGECAGECAGEXBz/3xvR04Fi7tZ+eAExxBIAwAYAwAYAwAYAw
			AYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAw
			AYAwAYAwAYCwi3VregIAAAAAAAAAAAAAAAAAAAAA8K9/ALHxwLV3wQfhAAAAJXRFWHRkYXRlOmNy
			ZWF0ZQAyMDIwLTAzLTE5VDEzOjA1OjU4KzAwOjAwSPQjOQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAy
			MC0wMy0xOVQxMzowNTo1OCswMDowMDmpm4UAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5v
			cmeb7jwaAAAAAElFTkSuQmCC
		</Resource>
		<Resource ID="1c6c06ee-d1ea-4fc7-820c-0230065716bd" Type="svg" Name="constraint-arrow.svg">
            PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0Ij48cGF0aCBkPSJNMCAwaDI0djI0SDB6IiBmaWxsPSJub25lIi8+PHBhdGggZD0iTTExLjU5IDcuNDFMMTUuMTcgMTFIMXYyaDE0LjE3bC0zLjU5IDMuNTlMMTMgMThsNi02LTYtNi0xLjQxIDEuNDF6TTIwIDZ2MTJoMlY2aC0yeiIvPjwvc3ZnPg==
		</Resource>
		<Resource ID="d33d62b0-81cb-3424-6214-3ce5fcfadac6" Type="js" Name="dhtmlxgantt.js"></Resource>
		<Resource ID="ec8cf865-3e9b-fde2-a67f-3ce5b21f1caf" Type="css" Name="dhtmlxgantt.css">
		</Resource>
	</Resources>
	<SourceCode>
<![CDATA[class VDOM_gantt(VDOM_object):
    def render(self, contents=""):
        WOID = (self.id).replace('-', '_')
        ID = 'o_' + WOID

        DEBUG_INFO = {
          "objname": self.name,
          "objtype": "gantt",
          "js_lib": "dhtmlx gantt",
          "id": ID,
          "version": self.type.version
        }
        DEBUG_INFO_STRING = " ".join([str(key)+"='"+str(value)+"'" for key, value in DEBUG_INFO.items()])

        DISPLAY = lambda v: "none" if v == "0" else None
        SIZE_CONVERT = lambda v: str(v) + "px"
        STYLES = {
            "display": DISPLAY(self.visible),
            "position": self.positioning1,
            "z-index": self.zindex,
            "top": SIZE_CONVERT(self.top),
            "left": SIZE_CONVERT(self.left),
            "width": SIZE_CONVERT(self.width),
            "height": SIZE_CONVERT(self.height),
        }
        STYLES_STRING_FORMAT = ";".join([str(key)+":"+str(value) for key, value in STYLES.items() if value])

        STYLES_STRING = """
        <style>
          .%(id)s { %(styles)s }

          .%(id)s .week_end { background-color: #%(highlight_weekend)s; }

          .constraint-marker {
              position: absolute;
              -moz-box-sizing: border-box;
              box-sizing: border-box;
              width: 56px;
              height: 56px;
              margin-top: -11px;
              opacity: 0.4;
              z-index: 1;
              background: url(/1c6c06ee-d1ea-4fc7-820c-0230065716bd.svg);
              background-size: cover;
          }

          .constraint-marker.earliest-start { margin-left: -53px; }

          .constraint-marker.latest-end {
              margin-left: -3px;
              transform: rotate(180deg);
          }
        </style>""" % {
          "id":ID, 
          "styles": STYLES_STRING_FORMAT, 
          "highlight_weekend": self.highlightweekend 
        }

        INIT_SCRIPT = """
          <script data-meta='init script'>
            window.gantt_%(id)s = null;
            $(document).ready(() => {
              gantt_%(id)s = Gantt.getGanttInstance();

              gantt_%(id)s.plugins({
                marker: true,
                auto_scheduling: true
              });

              if (%(show_today_marker)s) {
                const todayMarkerLabelFormat = gantt_%(id)s.date.date_to_str(gantt_%(id)s.config.task_date);
                gantt_%(id)s.addMarker({
                    id: 'today',
                    start_date: new Date(),
                    css: "today",
                    title: todayMarkerLabelFormat(new Date())
                });

                // Auto update today marker
                setInterval(function() {
                    const today = gantt_%(id)s.getMarker('today');
                    today.start_date = new Date();
                    today.title = todayMarkerLabelFormat(today.start_date);
                    gantt_%(id)s.updateMarker('today');
                }, 1000*60);
              }

              // Contrsaints
              gantt_%(id)s.config.auto_scheduling = %(auto_scheduling)s;

              gantt_%(id)s.addTaskLayer(function draw_deadline(task) {
                  var constraintType = gantt_%(id)s.getConstraintType(task);
                  var types = gantt_%(id)s.config.constraint_types;
                  if (constraintType != types.ASAP && constraintType != types.ALAP && task.constraint_date) {
                      var dates = gantt_%(id)s.getConstraintLimitations(task);

                      var els = document.createElement("div");

                      if (dates.earliestStart) {
                          els.appendChild(renderDiv(task, dates.earliestStart, 'constraint-marker earliest-start'));
                      }

                      if (dates.latestEnd) {
                          els.appendChild(renderDiv(task, dates.latestEnd, 'constraint-marker latest-end'));
                      }

                      els.title = gantt_%(id)s.locale.labels[constraintType] + " " + gantt_%(id)s.templates.task_date(task.constraint_date);

                      if (els.children.length) return els;
                }
                return false;
              });

              function renderDiv(task, date, className) {
                  var el = document.createElement('div');
                  el.className = className;
                  var sizes = gantt_%(id)s.getTaskPosition(task, date);
                  el.style.left = sizes.left + 'px';
                  el.style.top = sizes.top + 'px';
                  return el;
              }

              gantt_%(id)s.config.constraint_types = {
                  // As Soon As Possible
                  ASAP: "asap",
                  // As Late As Possible
                  ALAP: "alap",
                  // Start No Earlier Than
                  SNET: "snet",
                  // Start No Later Than
                  SNLT: "snlt",
                  // Finish No Earlier Than
                  FNET: "fnet",
                  // Finish No Later Than
                  FNLT: "fnlt",
                  // Must Start On
                  MSO: "mso",
                  // Must Finish On
                  MFO: "mfo"
              };


              gantt_%(id)s.config.start_date = new Date("%(start_date)s");
              gantt_%(id)s.config.end_date = new Date("%(end_date)s");

              gantt_%(id)s.config.start_on_monday = true;

              gantt_%(id)s.config.show_tasks_outside_timescale = true;

              gantt_%(id)s.config.duration_unit = "%(duration_unit)s";
              gantt_%(id)s.config.duration_step = %(duration_step)s;


              gantt_%(id)s.config.round_dnd_dates = %(round_dnd_dates)s;


              gantt_%(id)s.config.min_column_width = %(min_column_width)s;


              gantt_%(id)s.ext.zoom.init(%(zoom_config)s);


              gantt_%(id)s.config.work_time = %(work_time)s;
              gantt_%(id)s.config.correct_work_time = %(correct_work_time)s;


              const weekEndClassCalculation = (date) => {
                if(!gantt_%(id)s.isWorkTime({date, unit: 'day'})) {
                  return "week_end";
                }
              };
              gantt_%(id)s.templates.timeline_cell_class = (task, date) => weekEndClassCalculation(date);
              gantt_%(id)s.templates.scale_cell_class = weekEndClassCalculation;


              gantt_%(id)s.config.columns = %(columns)s;


              gantt_%(id)s.init("gantt_%(id)s");


              //----E2VDOM----
              const E2VDOMIdFormat = (id) => id.slice(2);

              gantt_%(id)s.attachEvent("onAfterTaskUpdate", function(id, item) {
                execEventBinded(E2VDOMIdFormat('%(id)s'), 'onAfterTaskUpdate', {id: id, value: JSON.stringify(item)});
              });

              gantt_%(id)s.attachEvent("onTaskClick", function(id, e) {
                  const task = gantt_%(id)s.getTask(id);
                  execEventBinded(E2VDOMIdFormat('%(id)s'), 'onTaskClick', {id: id, value: JSON.stringify(task)});
                  return true;
              });

              gantt_%(id)s.attachEvent("onTaskDblClick", function(id, e) {
                  const task = gantt_%(id)s.getTask(id);
                  execEventBinded(E2VDOMIdFormat('%(id)s'), 'onTaskDblClick', {id: id, value: JSON.stringify(task)});
                  return %(show_lightbox)s;
              });

              gantt_%(id)s.attachEvent("onAfterTaskDelete", function(id,item){
                  execEventBinded(E2VDOMIdFormat('%(id)s'), 'onAfterTaskDelete', {id: id, value: JSON.stringify(item)});
              });
            })
          </script>
        """ % {
          "id": ID,
          "start_date": self.startdate,
          "end_date": self.enddate,
          "columns": self.columns,
          "duration_unit": self.durationunit,
          "duration_step": self.durationstep,
          "round_dnd_dates": self.rounddnddates,
          "work_time": self.worktime,
          "correct_work_time": self.correctworktime,
          "min_column_width": self.mincolumnwidth,
          "zoom_config": self.zoom,
          "show_lightbox": self.showlightbox,
          "show_today_marker": self.showtodaymarker,
          "auto_scheduling": self.autoscheduling
        }

        SET_DATA_SCRIPT = """<script>$(document).ready(()=>{gantt_%(id)s.parse(`%(data)s`);})</script>""" % { "id": ID, "data": self.data }

        TYPE_WRAPPER = """<div {debug_string} class='{id} {classname}'>{content}</div>"""

        TYPE_HTML = """<div id="gantt_{id}" style='width:100%; height:100%;'></div>""".format(id=ID)

        SCRIPTS = """{}{}""".format(INIT_SCRIPT, SET_DATA_SCRIPT)

        CONTENT = """{}{}{}""".format(STYLES_STRING, TYPE_HTML, SCRIPTS)

        RESULT = TYPE_WRAPPER.format(
          debug_string=DEBUG_INFO_STRING,
          classname=self.classname,
          id=ID,
          content=CONTENT
        )

        return VDOM_object.render(self, contents=RESULT)

    def wysiwyg(self, contents=""):
        from scripting.legacy.wysiwyg import get_empty_wysiwyg_value

        image_id = "32dda2ed-1356-4297-8c4b-371919c9c0c5"
        result = get_empty_wysiwyg_value(self, image_id)

        return VDOM_object.wysiwyg(self, contents=result)]]>
	</SourceCode>
	<Libraries>
		<Library Target="html"><![CDATA[<script type="text/javascript" src="/d33d62b0-81cb-3424-6214-3ce5fcfadac6.js"></script>]]></Library>
		<Library Target="html"><![CDATA[<link rel="stylesheet" type="text/css" href="/ec8cf865-3e9b-fde2-a67f-3ce5b21f1caf.css" />]]></Library>
	</Libraries>
	<E2VDOM>
		<Events>
			<UserInterfaceEvents>
				<Event Name="onTaskDblClick" Description="#Lang(401)">
					<Parameters>
						<Parameter Name="id" Description="#Lang(401)" Order="0"/>
						<Parameter Name="value" Description="#Lang(401)" Order="1"/>
					</Parameters>
				</Event>
				<Event Name="onTaskClick" Description="#Lang(401)">
					<Parameters>
						<Parameter Name="id" Description="#Lang(401)" Order="0"/>
						<Parameter Name="value" Description="#Lang(401)" Order="1"/>
					</Parameters>
				</Event>
				<Event Name="onAfterTaskDelete" Description="#Lang(401)">
					<Parameters>
						<Parameter Name="id" Description="#Lang(401)" Order="0"/>
						<Parameter Name="value" Description="#Lang(401)" Order="1"/>
					</Parameters>
				</Event>
				<Event Name="dblclick" Description="#Lang(516)">
					<Parameters>
						<Parameter Name="id" Description="#Lang(907)" Order="0"/>
						<Parameter Name="value" Description="#Lang(908)" Order="0"/>
					</Parameters>
				</Event>
				<Event Name="onAfterTaskUpdate" Description="#Lang(401)">
					<Parameters>
						<Parameter Name="id" Description="#Lang(401)" Order="0"/>
						<Parameter Name="value" Description="#Lang(401)" Order="1"/>
					</Parameters>
				</Event>
			</UserInterfaceEvents>
		</Events>
		<Actions>
			<Container ID="2330fe83-8cd6-4ed5-907d-11874e7ebcf4">
				<Action Name="hide" DisplayName="#Lang(604)" Description="#Lang(504)">
					<Parameters>
						<Parameter Name="fade" DisplayName="#Lang(704)" Description="#Lang(804)" DefaultValue="0" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[vdom_ui_hide(this.domCont, fade);]]></SourceCode>
				</Action>
				<Action Name="show" DisplayName="#Lang(612)" Description="#Lang(512)">
					<Parameters>
						<Parameter Name="fade" DisplayName="#Lang(713)" Description="#Lang(813)" DefaultValue="0" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[vdom_ui_show(this.domCont, fade);window[`gantt_${this.name}`].render()]]></SourceCode>
				</Action>
				<Action Name="removeClass" DisplayName="#Lang(606)" Description="#Lang(506)">
					<Parameters>
						<Parameter Name="className" DisplayName="#Lang(708)" Description="#Lang(808)" DefaultValue="" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[$q(this.domCont).removeClass(className);]]></SourceCode>
				</Action>
				<Action Name="addClass" DisplayName="#Lang(601)" Description="#Lang(501)">
					<Parameters>
						<Parameter Name="className" DisplayName="#Lang(701)" Description="#Lang(801)" DefaultValue="" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[$q(this.domCont).addClass(className);]]></SourceCode>
				</Action>
				<Action Name="setData" DisplayName="#Lang(608)" Description="#Lang(000)">
					<Parameters>
						<Parameter Name="data" DisplayName="#Lang(711)" Description="#Lang(401)" DefaultValue="" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[window[`gantt_${this.name}`].parse(data);]]></SourceCode>
				</Action>
				<Action Name="setStyle" DisplayName="#Lang(611)" Description="#Lang(511)">
					<Parameters>
						<Parameter Name="cssStyleValue" DisplayName="#Lang(712)" Description="#Lang(812)" DefaultValue="" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[var t=$q(this.domCont);t.attr('style', t.attr('style') + ';' + cssStyleValue);]]>
					</SourceCode>
				</Action>
				<Action Name="setDateRange" DisplayName="#Lang(929)" Description="#Lang(401)">
					<Parameters>
						<Parameter Name="startDate" DisplayName="#Lang(927)" Description="#Lang(401)" DefaultValue="&apos;2020-01-01&apos;" RegularExpressionValidation=".*" Interface="" />
						<Parameter Name="endDate" DisplayName="#Lang(928)" Description="#Lang(401)" DefaultValue="&apos;2020-01-05&apos;" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode>
						<![CDATA[
							window[`gantt_${this.name}`].config.start_date = new Date(startDate);
							window[`gantt_${this.name}`].config.end_date = new Date(endDate);
							window[`gantt_${this.name}`].render();
						]]>
					</SourceCode>
				</Action>
				<Action Name="setConfig" DisplayName="#Lang(944)" Description="#Lang(401)">
					<Parameters>
						<Parameter Name="config" DisplayName="#Lang(945)" Description="#Lang(401)" DefaultValue="" RegularExpressionValidation=".*" Interface="" />
						<Parameter Name="value" DisplayName="#Lang(946)" Description="#Lang(401)" DefaultValue="" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[window[`gantt_${this.name}`].config[config] = value;]]></SourceCode>
				</Action>
				<Action Name="setClass" DisplayName="#Lang(607)" Description="#Lang(507)">
					<Parameters>
						<Parameter Name="className" DisplayName="#Lang(709)" Description="#Lang(809)" DefaultValue="" RegularExpressionValidation=".*" Interface="setClass" />
					</Parameters>
					<SourceCode><![CDATA[$q(this.domCont).attr('class',className);]]></SourceCode>
				</Action>
				<Action Name="zoomIn" DisplayName="#Lang(949)" Description="#Lang(401)">
					<SourceCode><![CDATA[window[`gantt_${this.name}`].ext.zoom.zoomIn()]]></SourceCode>
				</Action>
				<Action Name="zoomOut" DisplayName="#Lang(950)" Description="#Lang(401)">
					<SourceCode><![CDATA[window[`gantt_${this.name}`].ext.zoom.zoomOut()]]></SourceCode>
				</Action>
			</Container>
		</Actions>
	</E2VDOM>
</Type>
