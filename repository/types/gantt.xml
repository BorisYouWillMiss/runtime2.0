<?xml version="1.0" encoding="utf-8"?>
<Type>
	<Information>
		<ID>ea0ba7cb-e375-4b52-a647-fb28225e451d</ID>
		<Name>gantt</Name>
		<DisplayName>#Lang(001)</DisplayName>
		<ClassName>VDOM_gantt</ClassName>
		<Description>#Lang(002)</Description>
		<Version>1.4</Version>
		<Category>Additional</Category>
		<InterfaceType>1</InterfaceType>
		<Icon>#Res(e0ab6594-77ca-47b3-a35c-d3939406ca8e)</Icon>
		<EditorIcon>#Res(2b5aee40-ed7f-4a64-8d36-f226fca44ac8)</EditorIcon>
		<StructureIcon>#Res(2b5aee40-ed7f-4a64-8d36-f226fca44ac8)</StructureIcon>
		<Dynamic>1</Dynamic>
		<Moveable>1</Moveable>
		<Resizable>3</Resizable>
		<OptimizationPriority>1</OptimizationPriority>
		<Container>1</Container>
		<Containers>htmlcontainer</Containers>
		<Languages>en_US, fr_FR, ru_RU</Languages>
	</Information>
	<Attributes>
		<Attribute>
			<Name>stateful</Name>
			<DisplayName>#Lang(101)</DisplayName>
			<Description>#Lang(201)</Description>
			<DefaultValue>0</DefaultValue>
			<RegularExpressionValidation>^[01]$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(301)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(401)|0)|(#Lang(402)|1))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>hierarchy</Name>
			<DisplayName>#Lang(102)</DisplayName>
			<Description>#Lang(202)</Description>
			<DefaultValue>0</DefaultValue>
			<RegularExpressionValidation>^\d{1,2}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(302)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(2)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>visible</Name>
			<DisplayName>#Lang(103)</DisplayName>
			<Description>#Lang(203)</Description>
			<DefaultValue>1</DefaultValue>
			<RegularExpressionValidation>^[01]$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(303)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(403)|0)|(#Lang(404)|1))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>positioning1</Name>
			<DisplayName>#Lang(021)</DisplayName>
			<Description>#Lang(000)</Description>
			<DefaultValue>absolute</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(004)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(122)|absolute)|(#Lang(123)|static)|(#Lang(124)|relative))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>zindex</Name>
			<DisplayName>#Lang(104)</DisplayName>
			<Description>#Lang(204)</Description>
			<DefaultValue>0</DefaultValue>
			<RegularExpressionValidation>^\d{1,2}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(304)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(2)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>top</Name>
			<DisplayName>#Lang(105)</DisplayName>
			<Description>#Lang(205)</Description>
			<DefaultValue>0</DefaultValue>
			<RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(305)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(4)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>left</Name>
			<DisplayName>#Lang(106)</DisplayName>
			<Description>#Lang(206)</Description>
			<DefaultValue>0</DefaultValue>
			<RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(306)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(4)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>width</Name>
			<DisplayName>#Lang(107)</DisplayName>
			<Description>#Lang(207)</Description>
			<DefaultValue>130</DefaultValue>
			<RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(307)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(4)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>height</Name>
			<DisplayName>#Lang(108)</DisplayName>
			<Description>#Lang(208)</Description>
			<DefaultValue>22</DefaultValue>
			<RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(308)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(4)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>columns</Name>
			<DisplayName>#Lang(930)</DisplayName>
			<Description>#Lang(209)</Description>
			<DefaultValue>[
          { name: &quot;text&quot;, tree: true, width: 200, resize: true, label: &quot;Mission&quot; },
          { name: &quot;start_date&quot;, align: &quot;center&quot;, width: 100, resize: true, label: &quot;Start date&quot; },
          { name: &quot;duration&quot;, align: &quot;center&quot;, width: 100, resize: true, label: &quot;Duration&quot; },
          { name: &quot;add&quot;, width: 44, resize: true, hide: false }
        ]</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(309)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>MultiLine(10000)</CodeInterface>
			<ColorGroup>2</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>data</Name>
			<DisplayName>#Lang(109)</DisplayName>
			<Description>#Lang(209)</Description>
			<DefaultValue>{
          &quot;data&quot;: [
            {
              &quot;id&quot;: 1,
              &quot;redactor&quot;: &quot;Natalu VULCAN&quot;,
              &quot;text&quot;: &quot;BOREALIS CHIMIE SAS GRANDPUITS&quot;,
              &quot;start_date&quot;: &quot;&quot;,
              &quot;duration&quot;: 0,
              &quot;progress&quot;: 0.4,
              &quot;open&quot;: true,
              &quot;editable&quot;: false,
              &quot;readonly&quot;: true
            },
            {
              &quot;id&quot;: 2,
              &quot;redactor&quot;: &quot;&quot;,
              &quot;text&quot;: &quot;REUNION&quot;,
              &quot;start_date&quot;: &quot;02-04-2018&quot;,
              &quot;duration&quot;: 24,
              &quot;progress&quot;: 0.6,
              &quot;parent&quot;: 1,
              &quot;open&quot;: true
            },
            {
              &quot;id&quot;: 3,
              &quot;redactor&quot;: &quot;Konstantin DZUBA&quot;,
              &quot;text&quot;: &quot;Deplacement&quot;,
              &quot;start_date&quot;: &quot;05-04-2018&quot;,
              &quot;duration&quot;: 68,
              &quot;progress&quot;: 0.6,
              &quot;parent&quot;: 2
            },
            {
              &quot;id&quot;: 4,
              &quot;redactor&quot;: &quot;Danil ERMOLENKO&quot;,
              &quot;text&quot;: &quot;Prise de nodes&quot;,
              &quot;start_date&quot;: &quot;11-04-2018&quot;,
              &quot;duration&quot;: 15,
              &quot;progress&quot;: 0.6,
              &quot;parent&quot;: 2,
              &quot;deadlines&quot;: true
            }
          ],
          &quot;links&quot;: [
            { &quot;id&quot;: 1, &quot;source&quot;: 1, &quot;target&quot;: 2, &quot;type&quot;: &quot;1&quot; },
            { &quot;id&quot;: 2, &quot;source&quot;: 2, &quot;target&quot;: 3, &quot;type&quot;: &quot;0&quot; },
            { &quot;id&quot;: 3, &quot;source&quot;: 3, &quot;target&quot;: 4, &quot;type&quot;: &quot;0&quot; }
          ]
        }</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(309)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>MultiLine(10000)</CodeInterface>
			<ColorGroup>2</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>startdate</Name>
			<DisplayName>#Lang(927)</DisplayName>
			<Description>#Lang(217)</Description>
			<DefaultValue>new Date()</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(317)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>MultiLine(10000)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>enddate</Name>
			<DisplayName>#Lang(928)</DisplayName>
			<Description>#Lang(217)</Description>
			<DefaultValue></DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(317)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>MultiLine(10000)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>durationunit</Name>
			<DisplayName>#Lang(931)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>day</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(317)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(932)|minute)|(#Lang(933)|hour)|(#Lang(934)|day)|(#Lang(935)|week)|(#Lang(936)|month)|(#Lang(937)|year))</CodeInterface>
			<ColorGroup>2</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>durationstep</Name>
			<DisplayName>#Lang(938)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>1</DefaultValue>
			<RegularExpressionValidation>^\d{1,4}$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(308)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(4)</CodeInterface>
			<ColorGroup>2</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>showlightbox</Name>
			<DisplayName>#Lang(947)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>true</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(407)|true)|(#Lang(408)|false))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>rounddnddates</Name>
			<DisplayName>#Lang(939)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>false</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(407)|true)|(#Lang(408)|false))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>worktime</Name>
			<DisplayName>#Lang(940)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>false</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(407)|true)|(#Lang(408)|false))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>correctworktime</Name>
			<DisplayName>#Lang(941)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>false</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(407)|true)|(#Lang(408)|false))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>showtodaymarker</Name>
			<DisplayName>#Lang(948)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>false</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>DropDown((#Lang(407)|true)|(#Lang(408)|false))</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>mincolumnwidth</Name>
			<DisplayName>#Lang(942)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>10</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(500)</CodeInterface>
			<ColorGroup>1</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>classname</Name>
			<DisplayName>#Lang(122)</DisplayName>
			<Description>#Lang(222)</Description>
			<DefaultValue></DefaultValue>
			<RegularExpressionValidation>^.*$</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(322)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>TextField(500)</CodeInterface>
			<ColorGroup>4</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>highlightweekend</Name>
			<DisplayName>#Lang(121)</DisplayName>
			<Description>#Lang(221)</Description>
			<DefaultValue></DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(321)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>Color()</CodeInterface>
			<ColorGroup>2</ColorGroup>
		</Attribute>
		<Attribute>
			<Name>zoom</Name>
			<DisplayName>#Lang(943)</DisplayName>
			<Description>#Lang(401)</Description>
			<DefaultValue>
				{
					minColumnWidth: 50,
					maxColumnWidth: 50,
					levels: [
						[
							{ unit: "month", format: "%M %Y", step: 1, css: () => '' },
							{
								unit: "week", step: 1, format: function (date) {
									const dateToStr = gantt.date.date_to_str("%d %M");
									const endDate = gantt.date.add(date, -6, "day");
									return dateToStr(date) + " - " + dateToStr(endDate);
								}
							}
						],
						[
							{
								unit: "week", step: 1, format: function (date) {
									const dateToStr = gantt.date.date_to_str("%d %M");
									const endDate = gantt.date.add(date, -6, "day");
									return dateToStr(date) + " - " + dateToStr(endDate);
								}
							},
							{ unit: "day", format: "%d", step: 1 }
						],
						[
							{ unit: "day", format: "%d %M", step: 1 },
							{ unit: "hour", format: "%H:%i", step: 1 }
						]
					],
					useKey: "ctrlKey",
					trigger: "wheel",
					element: function () {
						return gantt_o_0b1e8527_f6dd_4096_9fff_19772a921696.$root.querySelector(".gantt_task");
					}
				}
			</DefaultValue>
			<RegularExpressionValidation>.*</RegularExpressionValidation>
			<ErrorValidationMessage>#Lang(401)</ErrorValidationMessage>
			<Visible>1</Visible>
			<InterfaceType>0</InterfaceType>
			<CodeInterface>MultiLine(10000)</CodeInterface>
			<ColorGroup>2</ColorGroup>
		</Attribute>
	</Attributes>
	<Languages>
		<Language Code="en_US">
			<Sentence ID="001">Gantt</Sentence>
			<Sentence ID="002">The gantt chart</Sentence>
			<Sentence ID="003"></Sentence>
			<Sentence ID="101"></Sentence>
			<Sentence ID="102">Hierarchy</Sentence>
			<Sentence ID="103">Visibility</Sentence>
			<Sentence ID="104">Z-Index</Sentence>
			<Sentence ID="105">Top</Sentence>
			<Sentence ID="106">Left</Sentence>
			<Sentence ID="107">Width</Sentence>
			<Sentence ID="108">Height</Sentence>
			<Sentence ID="109">Data</Sentence>
			<Sentence ID="111">Time scale</Sentence>
			<Sentence ID="112">Split tasks</Sentence>
			<Sentence ID="113">Readonly</Sentence>
			<Sentence ID="114">Duration unit</Sentence>
			<Sentence ID="115">Reordering tasks</Sentence>
			<Sentence ID="116">Disable add button</Sentence>
			<Sentence ID="117">Zooming</Sentence>
			<Sentence ID="118">Deadline</Sentence>
			<Sentence ID="119">Skip off time</Sentence>
			<Sentence ID="121">Highlight weekend</Sentence>
			<Sentence ID="122">CSS Class</Sentence>
			<Sentence ID="123">Style</Sentence>
			<Sentence ID="125">Data Type</Sentence>
			<Sentence ID="126">UI language</Sentence>
			<Sentence ID="127">Base tasks</Sentence>
			<Sentence ID="128">Custom</Sentence>
			<Sentence ID="201"></Sentence>
			<Sentence ID="202">Order of rendering the object on the page</Sentence>
			<Sentence ID="203">Visibility of the object</Sentence>
			<Sentence ID="204">Position in visual hierarchy of objects</Sentence>
			<Sentence ID="205">Spacing between the top edge of the container and the object in pixels</Sentence>
			<Sentence ID="206">Spacing between the left edge of the container and the object in pixels</Sentence>
			<Sentence ID="207">Width of the object in pixels</Sentence>
			<Sentence ID="208">Height of the object in pixels</Sentence>
			<Sentence ID="209">Specific dhtmlx gantt data</Sentence>
			<Sentence ID="211">Defines configuration settings of the time scale</Sentence>
			<Sentence ID="212">Available split tasks</Sentence>
			<Sentence ID="213">Set gantt diagramm only read mode</Sentence>
			<Sentence ID="214">Set duration unit</Sentence>
			<Sentence ID="215">Add reordering tasks by drag and drop</Sentence>
			<Sentence ID="216">Disable add button for levels &gt;= value, where value from 0 to 100</Sentence>
			<Sentence ID="217">Add support zooming time scale</Sentence>
			<Sentence ID="218">Add deadline to task</Sentence>
			<Sentence ID="219">Hide off time days in time scale</Sentence>
			<Sentence ID="221">Color to highlight the weekend</Sentence>
			<Sentence ID="222">CSS class name</Sentence>
			<Sentence ID="223">Custom style for gantt elements</Sentence>
			<Sentence ID="225">Data Type</Sentence>
			<Sentence ID="226">UI language code</Sentence>
			<Sentence ID="227">Define base tasks of gantt chart</Sentence>
			<Sentence ID="228">Add new custom task type</Sentence>
			<Sentence ID="301"></Sentence>
			<Sentence ID="302">Incorrect value, must be even integer from 0 to 99</Sentence>
			<Sentence ID="303">Incorrect value, must be either 0 or 1</Sentence>
			<Sentence ID="304">Incorrect value, must be even integer from 0 to 99</Sentence>
			<Sentence ID="305">Incorrect value, must be even positive integer</Sentence>
			<Sentence ID="306">Incorrect value, must be even positive integer</Sentence>
			<Sentence ID="307">Incorrect value, must be even positive integer</Sentence>
			<Sentence ID="308">Incorrect value, must be even positive integer</Sentence>
			<Sentence ID="309">Invalid data for gantt chart</Sentence>
			<Sentence ID="311">Error in time scale</Sentence>
			<Sentence ID="312">Error in split tasks</Sentence>
			<Sentence ID="313">Error in readonly</Sentence>
			<Sentence ID="314">Error in duration unit</Sentence>
			<Sentence ID="315">Error in reordering tasks</Sentence>
			<Sentence ID="316">Value must be in range from 0 to 100</Sentence>
			<Sentence ID="317">Error in zooming</Sentence>
			<Sentence ID="318">Error in deadline</Sentence>
			<Sentence ID="319">Error in skip off time</Sentence>
			<Sentence ID="321">Error in highlight weekend</Sentence>
			<Sentence ID="322">Names of CSS classes</Sentence>
			<Sentence ID="323">Error in style</Sentence>
			<Sentence ID="325">Invalid data type</Sentence>
			<Sentence ID="326">Wrong language</Sentence>
			<Sentence ID="327">Error in base tasks</Sentence>
			<Sentence ID="328">Error in custom task type</Sentence>
			<Sentence ID="401"></Sentence>
			<Sentence ID="402"></Sentence>
			<Sentence ID="403">Invisible</Sentence>
			<Sentence ID="404">Visible</Sentence>
			<Sentence ID="405">Yes</Sentence>
			<Sentence ID="406">No</Sentence>
			<Sentence ID="407">Yes</Sentence>
			<Sentence ID="408">No</Sentence>
			<Sentence ID="409">day</Sentence>
			<Sentence ID="411">hour</Sentence>
			<Sentence ID="412">Yes</Sentence>
			<Sentence ID="413">No</Sentence>
			<Sentence ID="414">Yes</Sentence>
			<Sentence ID="415">No</Sentence>
			<Sentence ID="416">Yes</Sentence>
			<Sentence ID="417">No</Sentence>
			<Sentence ID="418">Yes</Sentence>
			<Sentence ID="419">No</Sentence>
			<Sentence ID="421">Invisible</Sentence>
			<Sentence ID="422">Visible</Sentence>
			<Sentence ID="423">xml</Sentence>
			<Sentence ID="424">json</Sentence>
			<Sentence ID="425">English</Sentence>
			<Sentence ID="426">French</Sentence>
			<Sentence ID="427">Russian</Sentence>
			<Sentence ID="501">Add new CSS class.</Sentence>
			<Sentence ID="502">Add new link for gantt diagram</Sentence>
			<Sentence ID="503">Add task into gantt diagram</Sentence>
			<Sentence ID="504">Hide the object</Sentence>
			<Sentence ID="505">Move the object to a new position</Sentence>
			<Sentence ID="506">Hide the object</Sentence>
			<Sentence ID="507"></Sentence>
			<Sentence ID="508">Set new gantt data</Sentence>
			<Sentence ID="509">Set focus on the object</Sentence>
			<Sentence ID="511">Set new CSS style of the object</Sentence>
			<Sentence ID="512">Show the object</Sentence>
			<Sentence ID="513"></Sentence>
			<Sentence ID="514"></Sentence>
			<Sentence ID="515"></Sentence>
			<Sentence ID="516"></Sentence>
			<Sentence ID="517"></Sentence>
			<Sentence ID="518"></Sentence>
			<Sentence ID="519"></Sentence>
			<Sentence ID="521"></Sentence>
			<Sentence ID="522"></Sentence>
			<Sentence ID="523"></Sentence>
			<Sentence ID="524"></Sentence>
			<Sentence ID="525">After add, delete or update link</Sentence>
			<Sentence ID="526">After add, delete or update task</Sentence>
			<Sentence ID="527"></Sentence>
			<Sentence ID="601">addClass</Sentence>
			<Sentence ID="602">addLink</Sentence>
			<Sentence ID="603">addTask</Sentence>
			<Sentence ID="604">Hide</Sentence>
			<Sentence ID="605">moveTo</Sentence>
			<Sentence ID="606">Hide</Sentence>
			<Sentence ID="607">setClass</Sentence>
			<Sentence ID="608">setData</Sentence>
			<Sentence ID="609">setFocus</Sentence>
			<Sentence ID="611">setStyle</Sentence>
			<Sentence ID="612">Show</Sentence>
			<Sentence ID="701">className</Sentence>
			<Sentence ID="702">data</Sentence>
			<Sentence ID="703">data</Sentence>
			<Sentence ID="704">Fade</Sentence>
			<Sentence ID="705">newX</Sentence>
			<Sentence ID="706">newY</Sentence>
			<Sentence ID="707">Effect</Sentence>
			<Sentence ID="708">Fade</Sentence>
			<Sentence ID="709"></Sentence>
			<Sentence ID="711">data</Sentence>
			<Sentence ID="712">cssStyleValue</Sentence>
			<Sentence ID="713">Fade</Sentence>
			<Sentence ID="801">The name of the CSS class.</Sentence>
			<Sentence ID="802">Data for link</Sentence>
			<Sentence ID="803">Data for new task</Sentence>
			<Sentence ID="804">Fade effect, time is indicated in milliseconds</Sentence>
			<Sentence ID="805">X-coordinate of the new position relative to the left upper corner of the container</Sentence>
			<Sentence ID="806">Y-coordinate of the new position relative to the left upper corner of the container</Sentence>
			<Sentence ID="807">Visual effect of moving, time is indicated in milliseconds</Sentence>
			<Sentence ID="808">Fade effect, time is indicated in milliseconds</Sentence>
			<Sentence ID="809"></Sentence>
			<Sentence ID="811">New data for gantt chart</Sentence>
			<Sentence ID="812">CSS style value</Sentence>
			<Sentence ID="813">Fade effect, time is indicated in milliseconds</Sentence>
			<Sentence ID="903">Current X-value</Sentence>
			<Sentence ID="904">Current X-value</Sentence>
			<Sentence ID="905">Current X-value</Sentence>
			<Sentence ID="906">Current X-value</Sentence>
			<Sentence ID="907">Current X-value</Sentence>
			<Sentence ID="908">Current X-value</Sentence>
			<Sentence ID="909">Current X-value</Sentence>
			<Sentence ID="911">Current X-value</Sentence>
			<Sentence ID="912">Current X-value</Sentence>
			<Sentence ID="913">Current X-value</Sentence>
			<Sentence ID="914">Current X-value</Sentence>
			<Sentence ID="915">Current X-value</Sentence>
			<Sentence ID="916">Current X-value</Sentence>
			<Sentence ID="917">Current X-value</Sentence>
			<Sentence ID="918">Current X-value</Sentence>
			<Sentence ID="919">Current X-value</Sentence>
			<Sentence ID="921">params</Sentence>
			<Sentence ID="922">Link object</Sentence>
			<Sentence ID="923">Link id</Sentence>
			<Sentence ID="924">Task object</Sentence>
			<Sentence ID="925">Task id</Sentence>
			<Sentence ID="926">Current X-value</Sentence>
			<Sentence ID="927">Start date</Sentence>
			<Sentence ID="928">End date</Sentence>
			<Sentence ID="929">Set date range</Sentence>
			<Sentence ID="930">Columns</Sentence>
			<Sentence ID="931">Duration unit</Sentence>
			<Sentence ID="932">minute</Sentence>
			<Sentence ID="933">hour</Sentence>
			<Sentence ID="934">day</Sentence>
			<Sentence ID="935">week</Sentence>
			<Sentence ID="936">month</Sentence>
			<Sentence ID="937">year</Sentence>
			<Sentence ID="938">Duration step</Sentence>
			<Sentence ID="939">Round dnd dates</Sentence>
			<Sentence ID="940">Work time</Sentence>
			<Sentence ID="941">Correct work time</Sentence>
			<Sentence ID="942">Min column width</Sentence>
			<Sentence ID="943">Zoom config</Sentence>
			<Sentence ID="944">Set config</Sentence>
			<Sentence ID="945">config</Sentence>
			<Sentence ID="946">value</Sentence>
			<Sentence ID="947">Show lightbox</Sentence>
			<Sentence ID="948">Show today marker</Sentence>
			<Sentence ID="949">Zoom in</Sentence>
			<Sentence ID="950">Zoom out</Sentence>
		</Language>
		<Language Code="fr_FR">
			<Sentence ID="001">Gantt</Sentence>
			<Sentence ID="002">The gantt chart</Sentence>
			<Sentence ID="003"></Sentence>
			<Sentence ID="101"></Sentence>
			<Sentence ID="102">Hiérarchie</Sentence>
			<Sentence ID="103">Visibilité</Sentence>
			<Sentence ID="104">Z-Index</Sentence>
			<Sentence ID="105">Haut</Sentence>
			<Sentence ID="106">Gauche</Sentence>
			<Sentence ID="107">Largeur</Sentence>
			<Sentence ID="108">Hauteur</Sentence>
			<Sentence ID="109">Data</Sentence>
			<Sentence ID="111">Time scale</Sentence>
			<Sentence ID="112"></Sentence>
			<Sentence ID="113">Readonly</Sentence>
			<Sentence ID="114">Duration unit</Sentence>
			<Sentence ID="115"></Sentence>
			<Sentence ID="116">Disable add button</Sentence>
			<Sentence ID="117"></Sentence>
			<Sentence ID="118">Deadline</Sentence>
			<Sentence ID="119">Skip off time</Sentence>
			<Sentence ID="121"></Sentence>
			<Sentence ID="122">Class</Sentence>
			<Sentence ID="123">Style</Sentence>
			<Sentence ID="125"></Sentence>
			<Sentence ID="126"></Sentence>
			<Sentence ID="127">Base tasks</Sentence>
			<Sentence ID="128">Custom parameters</Sentence>
			<Sentence ID="201"></Sentence>
			<Sentence ID="202">Hiérarchie de l&apos;objet, ordre de chargement de l&apos;objet par rapport aux autres</Sentence>
			<Sentence ID="203">Afficher ou cacher l&apos;objet</Sentence>
			<Sentence ID="204">Niveau de superposition de l&apos;objet par rapport aux autres</Sentence>
			<Sentence ID="205">Distance depuis le bord haut de l&apos;objet parent en pixels</Sentence>
			<Sentence ID="206">Distance depuis le bord gauche de l&apos;objet parent en pixels</Sentence>
			<Sentence ID="207">Largeur de l&apos;objet en pixels</Sentence>
			<Sentence ID="208">Hauteur de l&apos;objet en pixels</Sentence>
			<Sentence ID="209">Specific dhtmlx gantt data</Sentence>
			<Sentence ID="211">Defines configuration settings of the time scale</Sentence>
			<Sentence ID="212"></Sentence>
			<Sentence ID="213">Set gantt diagramm only read mode</Sentence>
			<Sentence ID="214">Set duration unit</Sentence>
			<Sentence ID="215"></Sentence>
			<Sentence ID="216">Disable add button for levels &gt;= value, where value from 0 to 100</Sentence>
			<Sentence ID="217"></Sentence>
			<Sentence ID="218">Add deadline to task</Sentence>
			<Sentence ID="219">Hide off time days in time scale</Sentence>
			<Sentence ID="221"></Sentence>
			<Sentence ID="222">CSS class name</Sentence>
			<Sentence ID="223">Custom style for gantt elements</Sentence>
			<Sentence ID="225"></Sentence>
			<Sentence ID="226"></Sentence>
			<Sentence ID="227">Define base tasks of gantt chart</Sentence>
			<Sentence ID="228">Add new custom task type</Sentence>
			<Sentence ID="301"></Sentence>
			<Sentence ID="302">Valeur Incorrecte, doit être positive</Sentence>
			<Sentence ID="303">Valeur Incorrecte, doit être 0 ou 1</Sentence>
			<Sentence ID="304">Valeur Incorrecte, doit être positive</Sentence>
			<Sentence ID="305">Valeur Incorrecte, doit être positive</Sentence>
			<Sentence ID="306">Valeur Incorrecte, doit être positive</Sentence>
			<Sentence ID="307">Valeur Incorrecte, doit être positive</Sentence>
			<Sentence ID="308">Valeur Incorrecte, doit être positive</Sentence>
			<Sentence ID="309">Invalid data for gantt chart</Sentence>
			<Sentence ID="311">Error in time scale</Sentence>
			<Sentence ID="312"></Sentence>
			<Sentence ID="313">Error in readonly</Sentence>
			<Sentence ID="314">Error in duration unit</Sentence>
			<Sentence ID="315"></Sentence>
			<Sentence ID="316">Value must be in range from 0 to 100</Sentence>
			<Sentence ID="317"></Sentence>
			<Sentence ID="318">Error in deadline</Sentence>
			<Sentence ID="319">Error in skip off time</Sentence>
			<Sentence ID="321"></Sentence>
			<Sentence ID="322">Incorrect value</Sentence>
			<Sentence ID="323">Error in style</Sentence>
			<Sentence ID="325"></Sentence>
			<Sentence ID="326"></Sentence>
			<Sentence ID="327">Error in base tasks</Sentence>
			<Sentence ID="328">Error in custom task type</Sentence>
			<Sentence ID="401"></Sentence>
			<Sentence ID="402"></Sentence>
			<Sentence ID="403">Invisible</Sentence>
			<Sentence ID="404">Visible</Sentence>
			<Sentence ID="405"></Sentence>
			<Sentence ID="406"></Sentence>
			<Sentence ID="407"></Sentence>
			<Sentence ID="408"></Sentence>
			<Sentence ID="409">day</Sentence>
			<Sentence ID="411">hour</Sentence>
			<Sentence ID="412"></Sentence>
			<Sentence ID="413"></Sentence>
			<Sentence ID="414"></Sentence>
			<Sentence ID="415"></Sentence>
			<Sentence ID="416">Yes</Sentence>
			<Sentence ID="417">No</Sentence>
			<Sentence ID="418"></Sentence>
			<Sentence ID="419"></Sentence>
			<Sentence ID="421">Invisible</Sentence>
			<Sentence ID="422">Visible</Sentence>
			<Sentence ID="423"></Sentence>
			<Sentence ID="424"></Sentence>
			<Sentence ID="425">English</Sentence>
			<Sentence ID="426">French</Sentence>
			<Sentence ID="427">Russian</Sentence>
			<Sentence ID="501">Add new CSS class.</Sentence>
			<Sentence ID="502">Add new link for gantt diagram</Sentence>
			<Sentence ID="503">Add task into gantt diagram</Sentence>
			<Sentence ID="504">Hide the object</Sentence>
			<Sentence ID="505">Move object to selected point</Sentence>
			<Sentence ID="506">Hide the object</Sentence>
			<Sentence ID="507"></Sentence>
			<Sentence ID="508">Set new gantt data</Sentence>
			<Sentence ID="509">Set focus to the object</Sentence>
			<Sentence ID="511">Set new CSS style</Sentence>
			<Sentence ID="512">Show the object</Sentence>
			<Sentence ID="513"></Sentence>
			<Sentence ID="514"></Sentence>
			<Sentence ID="515"></Sentence>
			<Sentence ID="516"></Sentence>
			<Sentence ID="517"></Sentence>
			<Sentence ID="518"></Sentence>
			<Sentence ID="519"></Sentence>
			<Sentence ID="521"></Sentence>
			<Sentence ID="522"></Sentence>
			<Sentence ID="523"></Sentence>
			<Sentence ID="524"></Sentence>
			<Sentence ID="525">After add, delete or update link</Sentence>
			<Sentence ID="526">After add, delete or update task</Sentence>
			<Sentence ID="527"></Sentence>
			<Sentence ID="601">addClass</Sentence>
			<Sentence ID="602">addLink</Sentence>
			<Sentence ID="603">addTask</Sentence>
			<Sentence ID="604">Hide</Sentence>
			<Sentence ID="605">moveTo</Sentence>
			<Sentence ID="606">Hide</Sentence>
			<Sentence ID="607">setClass</Sentence>
			<Sentence ID="608">setData</Sentence>
			<Sentence ID="609">setFocus</Sentence>
			<Sentence ID="611">setStyle</Sentence>
			<Sentence ID="612">Show</Sentence>
			<Sentence ID="701">className</Sentence>
			<Sentence ID="702">data</Sentence>
			<Sentence ID="703">data</Sentence>
			<Sentence ID="704">Fade</Sentence>
			<Sentence ID="705">newX</Sentence>
			<Sentence ID="706">newY</Sentence>
			<Sentence ID="707">Effect</Sentence>
			<Sentence ID="708">Fade</Sentence>
			<Sentence ID="709"></Sentence>
			<Sentence ID="711">data</Sentence>
			<Sentence ID="712">cssStyleValue</Sentence>
			<Sentence ID="713">Fade</Sentence>
			<Sentence ID="801">The name of the CSS class.</Sentence>
			<Sentence ID="802">Data for link</Sentence>
			<Sentence ID="803">Data for new task</Sentence>
			<Sentence ID="804">Fade time</Sentence>
			<Sentence ID="805">X-coordinate of new point</Sentence>
			<Sentence ID="806">Y-coordinate of new point</Sentence>
			<Sentence ID="807">Visual effect by moving</Sentence>
			<Sentence ID="808">Fade time</Sentence>
			<Sentence ID="809"></Sentence>
			<Sentence ID="811">New data for gantt chart</Sentence>
			<Sentence ID="812">New CSS style value</Sentence>
			<Sentence ID="813">Time of appearance</Sentence>
			<Sentence ID="903">Current X-value</Sentence>
			<Sentence ID="904">Current X-value</Sentence>
			<Sentence ID="905">Current X-value</Sentence>
			<Sentence ID="906">Current X-value</Sentence>
			<Sentence ID="907">Current X-value</Sentence>
			<Sentence ID="908">Current X-value</Sentence>
			<Sentence ID="909">Current X-value</Sentence>
			<Sentence ID="911">Current X-value</Sentence>
			<Sentence ID="912">Current X-value</Sentence>
			<Sentence ID="913">Current X-value</Sentence>
			<Sentence ID="914">Current X-value</Sentence>
			<Sentence ID="915">Current X-value</Sentence>
			<Sentence ID="916">Current X-value</Sentence>
			<Sentence ID="917">Current X-value</Sentence>
			<Sentence ID="918">Current X-value</Sentence>
			<Sentence ID="919">Current X-value</Sentence>
			<Sentence ID="921"></Sentence>
			<Sentence ID="922">Link object</Sentence>
			<Sentence ID="923">Link id</Sentence>
			<Sentence ID="924">Task object</Sentence>
			<Sentence ID="925">Task id</Sentence>
			<Sentence ID="926">Current X-value</Sentence>
			<Sentence ID="927">Start date</Sentence>
			<Sentence ID="928">End date</Sentence>
			<Sentence ID="929">Set date range</Sentence>
			<Sentence ID="930">Columns</Sentence>
			<Sentence ID="931">Duration unit</Sentence>
			<Sentence ID="932">minute</Sentence>
			<Sentence ID="933">hour</Sentence>
			<Sentence ID="934">day</Sentence>
			<Sentence ID="935">week</Sentence>
			<Sentence ID="936">month</Sentence>
			<Sentence ID="937">year</Sentence>
			<Sentence ID="938">Duration step</Sentence>
			<Sentence ID="939">Round dnd dates</Sentence>
			<Sentence ID="940">Work time</Sentence>
			<Sentence ID="941">Correct work time</Sentence>
			<Sentence ID="942">Min column width</Sentence>
			<Sentence ID="943">Zoom config</Sentence>
			<Sentence ID="944">Set config</Sentence>
			<Sentence ID="945">config</Sentence>
			<Sentence ID="946">value</Sentence>
			<Sentence ID="947">Show lightbox</Sentence>
			<Sentence ID="948">Show today marker</Sentence>
			<Sentence ID="949">Zoom in</Sentence>
			<Sentence ID="950">Zoom out</Sentence>
		</Language>
		<Language Code="ru_RU">
			<Sentence ID="001">Gantt</Sentence>
			<Sentence ID="002">The gantt chart</Sentence>
			<Sentence ID="003"></Sentence>
			<Sentence ID="101"></Sentence>
			<Sentence ID="102">Иерархия</Sentence>
			<Sentence ID="103">Отображение</Sentence>
			<Sentence ID="104">Позиция</Sentence>
			<Sentence ID="105">Сверху</Sentence>
			<Sentence ID="106">Слева</Sentence>
			<Sentence ID="107">Ширина</Sentence>
			<Sentence ID="108">Высота</Sentence>
			<Sentence ID="109">Data</Sentence>
			<Sentence ID="111">Time scale</Sentence>
			<Sentence ID="112"></Sentence>
			<Sentence ID="113">Readonly</Sentence>
			<Sentence ID="114">Duration unit</Sentence>
			<Sentence ID="115"></Sentence>
			<Sentence ID="116">Disable add button</Sentence>
			<Sentence ID="117"></Sentence>
			<Sentence ID="118">Deadline</Sentence>
			<Sentence ID="119">Skip off time</Sentence>
			<Sentence ID="121"></Sentence>
			<Sentence ID="122">Класс CSS</Sentence>
			<Sentence ID="123">Style</Sentence>
			<Sentence ID="125"></Sentence>
			<Sentence ID="126"></Sentence>
			<Sentence ID="127">Base tasks</Sentence>
			<Sentence ID="128">Custom parameters</Sentence>
			<Sentence ID="201"></Sentence>
			<Sentence ID="202">Порядок визуализации объекта в ходе загрузки страницы</Sentence>
			<Sentence ID="203">Неправильное значение, должен быть указан 0 или 1</Sentence>
			<Sentence ID="204">Положение в визуальной иерархии объектов</Sentence>
			<Sentence ID="205">Расстояние от верхней границы родительского контейнера до объекта в пикселях</Sentence>
			<Sentence ID="206">Расстояние от левой границы родительского контейнера до объекта в пикселях</Sentence>
			<Sentence ID="207">Ширина объекта в пикселях</Sentence>
			<Sentence ID="208">Высота объекта в пикселях</Sentence>
			<Sentence ID="209">Specific dhtmlx gantt data</Sentence>
			<Sentence ID="211">Defines configuration settings of the time scale</Sentence>
			<Sentence ID="212"></Sentence>
			<Sentence ID="213">Set gantt diagramm only read mode</Sentence>
			<Sentence ID="214">Set duration unit</Sentence>
			<Sentence ID="215"></Sentence>
			<Sentence ID="216">Disable add button for levels &gt;= value, where value from 0 to 100</Sentence>
			<Sentence ID="217"></Sentence>
			<Sentence ID="218">Add deadline to task</Sentence>
			<Sentence ID="219">Hide off time days in time scale</Sentence>
			<Sentence ID="221"></Sentence>
			<Sentence ID="222">Имя класса CSS</Sentence>
			<Sentence ID="223">Custom style for gantt elements</Sentence>
			<Sentence ID="225"></Sentence>
			<Sentence ID="226"></Sentence>
			<Sentence ID="227">Define base tasks of gantt chart</Sentence>
			<Sentence ID="228">Add new custom task type</Sentence>
			<Sentence ID="301"></Sentence>
			<Sentence ID="302">Неправильное значение, должно быть указано целое число от 0 до 99</Sentence>
			<Sentence ID="303">Неправильное значение</Sentence>
			<Sentence ID="304">Неправильное значение, должно быть указано целое число от 0 до 99</Sentence>
			<Sentence ID="305">Неправильное значение, должно быть указано целое положительное число</Sentence>
			<Sentence ID="306">Неправильное значение, должно быть указано целое положительное число</Sentence>
			<Sentence ID="307">Неправильное значение, должно быть указано целое положительное число</Sentence>
			<Sentence ID="308">Неправильное значение, должно быть указано целое положительное число</Sentence>
			<Sentence ID="309">Invalid data for gantt chart</Sentence>
			<Sentence ID="311">Error in time scale</Sentence>
			<Sentence ID="312"></Sentence>
			<Sentence ID="313">Error in readonly</Sentence>
			<Sentence ID="314">Error in duration unit</Sentence>
			<Sentence ID="315"></Sentence>
			<Sentence ID="316">Value must be in range from 0 to 100</Sentence>
			<Sentence ID="317"></Sentence>
			<Sentence ID="318">Error in deadline</Sentence>
			<Sentence ID="319">Error in skip off time</Sentence>
			<Sentence ID="321"></Sentence>
			<Sentence ID="322">Неправильное значение</Sentence>
			<Sentence ID="323">Error in style</Sentence>
			<Sentence ID="325"></Sentence>
			<Sentence ID="326"></Sentence>
			<Sentence ID="327">Error in base tasks</Sentence>
			<Sentence ID="328">Error in custom task type</Sentence>
			<Sentence ID="401"></Sentence>
			<Sentence ID="402"></Sentence>
			<Sentence ID="403">Не отображать</Sentence>
			<Sentence ID="404">Отображать</Sentence>
			<Sentence ID="405"></Sentence>
			<Sentence ID="406"></Sentence>
			<Sentence ID="407"></Sentence>
			<Sentence ID="408"></Sentence>
			<Sentence ID="409">day</Sentence>
			<Sentence ID="411">hour</Sentence>
			<Sentence ID="412"></Sentence>
			<Sentence ID="413"></Sentence>
			<Sentence ID="414"></Sentence>
			<Sentence ID="415"></Sentence>
			<Sentence ID="416">Yes</Sentence>
			<Sentence ID="417">No</Sentence>
			<Sentence ID="418">Yes</Sentence>
			<Sentence ID="419">No</Sentence>
			<Sentence ID="421">Невидимая</Sentence>
			<Sentence ID="422">Видимая</Sentence>
			<Sentence ID="423"></Sentence>
			<Sentence ID="424"></Sentence>
			<Sentence ID="425">English</Sentence>
			<Sentence ID="426">French</Sentence>
			<Sentence ID="427">Russian</Sentence>
			<Sentence ID="501">Add new CSS class.</Sentence>
			<Sentence ID="502">Add new link for gantt diagram</Sentence>
			<Sentence ID="503">Add task into gantt diagram</Sentence>
			<Sentence ID="504">Скрыть объект</Sentence>
			<Sentence ID="505">Сдвинуть объект в заданную точку</Sentence>
			<Sentence ID="506">Скрыть объект</Sentence>
			<Sentence ID="507"></Sentence>
			<Sentence ID="508">Set new gantt data</Sentence>
			<Sentence ID="509">Установить фокус на объекте</Sentence>
			<Sentence ID="511">Установить новый стиль CSS</Sentence>
			<Sentence ID="512">Показать объект</Sentence>
			<Sentence ID="513"></Sentence>
			<Sentence ID="514"></Sentence>
			<Sentence ID="515"></Sentence>
			<Sentence ID="516"></Sentence>
			<Sentence ID="517"></Sentence>
			<Sentence ID="518"></Sentence>
			<Sentence ID="519"></Sentence>
			<Sentence ID="521"></Sentence>
			<Sentence ID="522"></Sentence>
			<Sentence ID="523"></Sentence>
			<Sentence ID="524"></Sentence>
			<Sentence ID="525">After add, delete or update link</Sentence>
			<Sentence ID="526">After add, delete or update task</Sentence>
			<Sentence ID="527"></Sentence>
			<Sentence ID="601">addClass</Sentence>
			<Sentence ID="602">addLink</Sentence>
			<Sentence ID="603">addTask</Sentence>
			<Sentence ID="604">Скрыть</Sentence>
			<Sentence ID="605">Сдвинуть</Sentence>
			<Sentence ID="606">Скрыть</Sentence>
			<Sentence ID="607">setClass</Sentence>
			<Sentence ID="608">setData</Sentence>
			<Sentence ID="609">Установить фокус</Sentence>
			<Sentence ID="611">Установить стиль</Sentence>
			<Sentence ID="612">Показать</Sentence>
			<Sentence ID="701">className</Sentence>
			<Sentence ID="702">data</Sentence>
			<Sentence ID="703">data</Sentence>
			<Sentence ID="704">Исчезновение</Sentence>
			<Sentence ID="705">Координата по оси X</Sentence>
			<Sentence ID="706">Координата по оси Y</Sentence>
			<Sentence ID="707">Эффект</Sentence>
			<Sentence ID="708">Исчезновение</Sentence>
			<Sentence ID="709"></Sentence>
			<Sentence ID="711">data</Sentence>
			<Sentence ID="712">Стиль CSS</Sentence>
			<Sentence ID="713">Появление</Sentence>
			<Sentence ID="801">The name of the CSS class.</Sentence>
			<Sentence ID="802">Data for link</Sentence>
			<Sentence ID="803">Data for new task</Sentence>
			<Sentence ID="804">Время исчезновения в миллисекундах</Sentence>
			<Sentence ID="805">Координата новой точки по оси X</Sentence>
			<Sentence ID="806">Координата новой точки по оси Y</Sentence>
			<Sentence ID="807">Визуальный эффект при перетаскивании</Sentence>
			<Sentence ID="808">Время исчезновения в миллисекундах</Sentence>
			<Sentence ID="809"></Sentence>
			<Sentence ID="811">New data for gantt chart</Sentence>
			<Sentence ID="812">Новое значение стиля</Sentence>
			<Sentence ID="813">Время появления в миллисекундах</Sentence>
			<Sentence ID="903">Текущее значение X</Sentence>
			<Sentence ID="904">Текущее значение X</Sentence>
			<Sentence ID="905">Текущее значение X</Sentence>
			<Sentence ID="906">Текущее значение X</Sentence>
			<Sentence ID="907">Текущее значение X</Sentence>
			<Sentence ID="908">Текущее значение X</Sentence>
			<Sentence ID="909">Текущее значение X</Sentence>
			<Sentence ID="911">Текущее значение X</Sentence>
			<Sentence ID="912">Текущее значение X</Sentence>
			<Sentence ID="913">Текущее значение X</Sentence>
			<Sentence ID="914">Текущее значение X</Sentence>
			<Sentence ID="915">Текущее значение X</Sentence>
			<Sentence ID="916">Текущее значение X</Sentence>
			<Sentence ID="917">Текущее значение X</Sentence>
			<Sentence ID="918">Текущее значение X</Sentence>
			<Sentence ID="919">Текущее значение X</Sentence>
			<Sentence ID="921"></Sentence>
			<Sentence ID="922">Link object</Sentence>
			<Sentence ID="923">Link id</Sentence>
			<Sentence ID="924">Task object</Sentence>
			<Sentence ID="925">Task id</Sentence>
			<Sentence ID="926">Текущее значение X</Sentence>
			<Sentence ID="927">Start date</Sentence>
			<Sentence ID="928">End date</Sentence>
			<Sentence ID="929">Set date range</Sentence>
			<Sentence ID="930">Columns</Sentence>
			<Sentence ID="931">Duration unit</Sentence>
			<Sentence ID="932">minute</Sentence>
			<Sentence ID="933">hour</Sentence>
			<Sentence ID="934">day</Sentence>
			<Sentence ID="935">week</Sentence>
			<Sentence ID="936">month</Sentence>
			<Sentence ID="937">year</Sentence>
			<Sentence ID="938">Duration step</Sentence>
			<Sentence ID="939">Round dnd dates</Sentence>
			<Sentence ID="940">Work time</Sentence>
			<Sentence ID="941">Correct work time</Sentence>
			<Sentence ID="942">Min column width</Sentence>
			<Sentence ID="943">Zoom config</Sentence>
			<Sentence ID="944">Set config</Sentence>
			<Sentence ID="945">config</Sentence>
			<Sentence ID="946">value</Sentence>
			<Sentence ID="947">Show lightbox</Sentence>
			<Sentence ID="948">Show today marker</Sentence>
			<Sentence ID="949">Zoom in</Sentence>
			<Sentence ID="950">Zoom out</Sentence>
		</Language>
	</Languages>
	<Resources>
		<Resource ID="2b5aee40-ed7f-4a64-8d36-f226fca44ac8" Type="png" Name="GantIcon.png">
			iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAA8ElEQVQ4T52SPQqEMBCFJ1FEwcoL
			2HgmDyDW9hZWimJlJXgBwTN4BCtvIoKdqEsChp31L2u6vLz5MrwZkqbpFoYhvD2EUrotywJZlkkx
			fj8TgDiOpQBRFCGfADC1KAqoqgoZDMOAvu8v4QgwDAOM44jM0zSBbdtIM00TCCFcQ4CzbyzLOshd
			14HjOHKAp2BQB+u6HvyU0luGALBiTdMOZpaBrutyIe6upmlEgeu6cNfFaYie5wlAWZagKAq/M5Cq
			qtd7cNan7/tQ1zV/CoIA8jz/D/DtZnuyj5V1Ms/z8x5IjbFt2yff9RSSJNleVvO6D9O3cZax4OrM
			AAAAAElFTkSuQmCC
		</Resource>
		<Resource ID="32dda2ed-1356-4297-8c4b-371919c9c0c5" Type="png" Name="Gantt.png">
			iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAQAAABecRxxAAAABGdBTUEAALGPC/xhBQAAACBjSFJN
			AAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QAAKqNIzIAAAAJcEhZ
			cwAADsQAAA7EAZUrDhsAAAAHdElNRQfkAxMNBTr3rs8xAAAHj0lEQVR42u3dsYqcVRyH4TOyUSSC
			xWKhndh5A9ZaWdpqaSGolfZWegk24iVYCUbwIiwMpBAkBLV1CSFYaDFWlkEz82X/k3mfZ+pv+O2w
			vHBgmLMWAAAAAAAAAAAAAAAAAAAAcGp267uDnnuw3pueDhxrt/YHPXe1LqenA8d6ZnoAMEcAIEwA
			IEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwA
			IEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIOxiesBa67P1yvQEovbro+kJs3Zrf9BzV+tysw131uvT
			HwNZu+kBsxwBIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwA
			IEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIOwUrgf/ZXoAWYfdjX1GTuF6cGCI
			IwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCE
			CQCECQCECQCECQCECQCEncLNQE/Sc+ul6Qln5+G6Pz2BrZx7AN5a309PODtfrw+mJ7AVRwAIEwAI
			EwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAI
			EwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIO/frwX9c70xPODv3pgewnd3aH/Tc1bqcng4cyxEA
			wgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAws799wD4L39PDzg7v67Xpif8
			fwJQ5z9gazemBzwORwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAI
			EwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIEwAIczds3SfTA87Og+kBj2O3
			9gc9d7Uup6cDx3IEgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDAB
			gDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDAB
			gDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDAB
			gDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgDABgLCL6QEHemF9Mz3h7NxdH09P4Lo9
			rQF4dr09PeHs3J4ewPVzBIAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAw
			AYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYCwp/V24L/WrekJZ+fu
			9ACu327tD3rual1OTweO5QgAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIAYQIA
			YQIAYQIAYQIAYQIAYQIAYQIAYQIAYU/rz4KfinfXm9MTNvPb+nx6Atdvf9Drj+nZJ+LLAz+/U3z9
			NP1hcv0cASBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBM
			ACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACBMACDM9eDH+X3dnp6wmZ+nB3D9dmt/0HNX
			63J6OnAsRwAIEwAIEwAIEwAIEwAIEwAIEwAI80UgHuXG+nR6wgbur6+mJ5wyXwTiUW6uh9MTNnBv
			vTo94ZQ5AkCYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECY
			AECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECYAECY68F5lP36c3rCBs7hb3iCBIBH+XPd
			nJ7Ak+YIAGECAGECAGECAGECAGECAGECAGG+B0DLF+v96Qkb+HB9u80bCQAtL66Xpyds4Pmt3sgR
			AMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIE
			AMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMIEAMLcDkzLD+vB9IQN3NnqjXZrf9BzV+ty+jMAjuUI
			AGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGEC
			AGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGECAGEC
			AGECAGECAGECAGECAGECAGECAGECAGECAGECAGEXBz/3xvR04Fi7tZ+eAExxBIAwAYAwAYAwAYAw
			AYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAw
			AYAwAYAwAYCwi3VregIAAAAAAAAAAAAAAAAAAAAA8K9/ALHxwLV3wQfhAAAAJXRFWHRkYXRlOmNy
			ZWF0ZQAyMDIwLTAzLTE5VDEzOjA1OjU4KzAwOjAwSPQjOQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAy
			MC0wMy0xOVQxMzowNTo1OCswMDowMDmpm4UAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5v
			cmeb7jwaAAAAAElFTkSuQmCC
		</Resource>
		<Resource ID="d33d62b0-81cb-3424-6214-3ce5fcfadac6" Type="js" Name="dhtmlxgantt.js">
			</Resource>
		<Resource ID="ec8cf865-3e9b-fde2-a67f-3ce5b21f1caf" Type="css" Name="dhtmlxgantt.css">
			LmdyaWRIb3ZlclN0eWxlLC5ncmlkU2VsZWN0aW9uLC50aW1lbGluZVNlbGVjdGlvbntiYWNrZ3Jv
			dW5kLWNvbG9yOiNmZmYzYTF9LmdhbnR0X2dyaWRfc2NhbGUgLmdhbnR0X2dyaWRfaGVhZF9jZWxs
			e2NvbG9yOiNhNmE2YTY7Ym9yZGVyLXRvcDpub25lIWltcG9ydGFudDtib3JkZXItcmlnaHQ6bm9u
			ZSFpbXBvcnRhbnR9LmdhbnR0X2dyaWRfZGF0YSAuZ2FudHRfY2VsbHtib3JkZXItcmlnaHQ6bm9u
			ZTtjb2xvcjojNDU0NTQ1fS5nYW50dF90YXNrX2xpbmsgLmdhbnR0X2xpbmtfYXJyb3dfcmlnaHR7
			Ym9yZGVyLXdpZHRoOjZweDttYXJnaW4tdG9wOi0zcHh9LmdhbnR0X3Rhc2tfbGluayAuZ2FudHRf
			bGlua19hcnJvd19sZWZ0e2JvcmRlci13aWR0aDo2cHg7bWFyZ2luLWxlZnQ6LTZweDttYXJnaW4t
			dG9wOi0zcHh9LmdhbnR0X3Rhc2tfbGluayAuZ2FudHRfbGlua19hcnJvd19kb3duLC5nYW50dF90
			YXNrX2xpbmsgLmdhbnR0X2xpbmtfYXJyb3dfdXB7Ym9yZGVyLXdpZHRoOjZweH0uZ2FudHRfdGFz
			a19saW5lIC5nYW50dF90YXNrX3Byb2dyZXNzX2RyYWd7Ym90dG9tOi00cHg7aGVpZ2h0OjEwcHg7
			bWFyZ2luLWxlZnQ6LThweDt3aWR0aDoxNnB4fS5jaGFydEhlYWRlckJne2JhY2tncm91bmQtY29s
			b3I6I2ZmZn0uZ2FudHRfdGFzayAuZ2FudHRfdGFza19zY2FsZSAuZ2FudHRfc2NhbGVfY2VsbHtj
			b2xvcjojYTZhNmE2O2JvcmRlci1yaWdodDoxcHggc29saWQgI2ViZWJlYn0uZ2FudHRfcm93Lmdh
			bnR0X3Byb2plY3QsLmdhbnR0X3Jvdy5vZGQuZ2FudHRfcHJvamVjdHtiYWNrZ3JvdW5kLWNvbG9y
			OiNlZGZmZWZ9LmdhbnR0X3Rhc2tfcm93LmdhbnR0X3Byb2plY3QsLmdhbnR0X3Rhc2tfcm93Lm9k
			ZC5nYW50dF9wcm9qZWN0e2JhY2tncm91bmQtY29sb3I6I2Y1ZmZmNn0uZ2FudHRfdGFza19saW5l
			LmdhbnR0X3Byb2plY3R7YmFja2dyb3VuZC1jb2xvcjojNjVjMTZmO2JvcmRlcjoxcHggc29saWQg
			IzNjOTQ0NX0uZ2FudHRfdGFza19saW5lLmdhbnR0X3Byb2plY3QgLmdhbnR0X3Rhc2tfcHJvZ3Jl
			c3N7YmFja2dyb3VuZC1jb2xvcjojNDZhZDUxfS5idXR0b25CZ3tiYWNrZ3JvdW5kOiNmZmZ9Lmdh
			bnR0X2NhbF9saWdodCAuZ2FudHRfYnRuX3NldHttYXJnaW46NXB4IDEwcHh9LmdhbnR0X2J0bl9z
			ZXQuZ2FudHRfY2FuY2VsX2J0bl9zZXR7YmFja2dyb3VuZDojZmZmO2NvbG9yOiM0NTQ1NDU7Ym9y
			ZGVyOjFweCBzb2xpZCAjY2VjZWNlfS5nYW50dF9idG5fc2V0LmdhbnR0X3NhdmVfYnRuX3NldHti
			YWNrZ3JvdW5kOiMzZGI5ZDM7dGV4dC1zaGFkb3c6MCAtMXB4IDAgIzI0OGE5Zjtjb2xvcjojZmZm
			fS5nYW50dF9idG5fc2V0LmdhbnR0X2RlbGV0ZV9idG5fc2V0e3RleHQtc2hhZG93OjAgLTFweCAw
			ICM2ZjZmNmY7YmFja2dyb3VuZDojZWM4ZTAwO3RleHQtc2hhZG93OjAgLTFweCAwICNhNjA7Y29s
			b3I6I2ZmZn0uZ2FudHRfY2FsX2xpZ2h0X3dpZGV7cGFkZGluZy1sZWZ0OjAhaW1wb3J0YW50O3Bh
			ZGRpbmctcmlnaHQ6MCFpbXBvcnRhbnR9LmdhbnR0X2NhbF9saWdodF93aWRlIC5nYW50dF9jYWxf
			bGFyZWF7Ym9yZGVyLWxlZnQ6bm9uZSFpbXBvcnRhbnQ7Ym9yZGVyLXJpZ2h0Om5vbmUhaW1wb3J0
			YW50fS5nYW50dF9wb3B1cF9idXR0b24uZ2FudHRfb2tfYnV0dG9ue2JhY2tncm91bmQ6IzNkYjlk
			Mzt0ZXh0LXNoYWRvdzowIC0xcHggMCAjMjQ4YTlmO2NvbG9yOiNmZmY7Zm9udC13ZWlnaHQ6NzAw
			O2JvcmRlci13aWR0aDowfS5nYW50dF9wb3B1cF9idXR0b24uZ2FudHRfY2FuY2VsX2J1dHRvbntm
			b250LXdlaWdodDo3MDA7Y29sb3I6IzQ1NDU0NH0uZ2FudHRfcG9wdXBfdGl0bGV7YmFja2dyb3Vu
			ZC1jb2xvcjojZmZmfS5nYW50dF9wb3B1cF9zaGFkb3d7Ym94LXNoYWRvdzozcHggM3B4IDNweCBy
			Z2JhKDAsMCwwLC4wNyl9LmdhbnR0X3FpX2JpZ19pY29uLmljb25fZWRpdHtjb2xvcjojNDU0NTQ1
			O2JhY2tncm91bmQ6I2ZmZn0uZ2FudHRfcWlfYmlnX2ljb24uaWNvbl9kZWxldGV7dGV4dC1zaGFk
			b3c6MCAtMXB4IDAgI2E2MDtiYWNrZ3JvdW5kOiNlYzhlMDA7Y29sb3I6I2ZmZjtib3JkZXItd2lk
			dGg6MH0uZ2FudHRfdG9vbHRpcHtib3gtc2hhZG93OjNweCAzcHggM3B4IHJnYmEoMCwwLDAsLjA3
			KTtib3JkZXItbGVmdDoxcHggc29saWQgcmdiYSgwLDAsMCwuMDcpO2JvcmRlci10b3A6MXB4IHNv
			bGlkIHJnYmEoMCwwLDAsLjA3KTtmb250LXNpemU6OHB0O2NvbG9yOiM0NTQ1NDV9LmdhbnR0X2Nv
			bnRhaW5lciwuZ2FudHRfdG9vbHRpcHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Zm9udC1mYW1pbHk6
			QXJpYWx9LmdhbnR0X2NvbnRhaW5lcntmb250LXNpemU6MTNweDtib3JkZXI6MXB4IHNvbGlkICNj
			ZWNlY2U7cG9zaXRpb246cmVsYXRpdmU7d2hpdGUtc3BhY2U6bm93cmFwO292ZXJmbG93LXg6aGlk
			ZGVuO292ZXJmbG93LXk6aGlkZGVufS5nYW50dF90YXNrX3Njcm9sbHtvdmVyZmxvdy14OnNjcm9s
			bH0uZ2FudHRfZ3JpZCwuZ2FudHRfdGFza3twb3NpdGlvbjpyZWxhdGl2ZTtvdmVyZmxvdy14Omhp
			ZGRlbjtvdmVyZmxvdy15OmhpZGRlbjtkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGln
			bjp0b3B9LmdhbnR0X2dyaWRfc2NhbGUsLmdhbnR0X3Rhc2tfc2NhbGV7Y29sb3I6IzZiNmI2Yjtm
			b250LXNpemU6MTJweDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjY2VjZWNlO2JveC1zaXppbmc6
			Ym9yZGVyLWJveH0uZ2FudHRfZ3JpZF9zY2FsZSwuZ2FudHRfdGFza19zY2FsZSwuZ2FudHRfdGFz
			a192c2Nyb2xse2JhY2tncm91bmQtY29sb3I6I2ZmZn0uZ2FudHRfc2NhbGVfbGluZXtib3gtc2l6
			aW5nOmJvcmRlci1ib3g7LW1vei1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym9yZGVyLXRvcDoxcHgg
			c29saWQgI2NlY2VjZX0uZ2FudHRfc2NhbGVfbGluZTpmaXJzdC1jaGlsZHtib3JkZXItdG9wOm5v
			bmV9LmdhbnR0X2dyaWRfaGVhZF9jZWxse2Rpc3BsYXk6aW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFs
			aWduOnRvcDtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNjZWNlY2U7dGV4dC1hbGlnbjpjZW50ZXI7
			cG9zaXRpb246cmVsYXRpdmU7Y3Vyc29yOmRlZmF1bHQ7aGVpZ2h0OjEwMCU7Ym94LXNpemluZzpi
			b3JkZXItYm94Oy1tb3otYm94LXNpemluZzpib3JkZXItYm94O2xpbmUtaGVpZ2h0OjMzcHg7LW1v
			ei11c2VyLXNlbGVjdDotbW96LW5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lO3VzZXItc2Vs
			ZWN0Om5vbmU7b3ZlcmZsb3c6aGlkZGVufS5nYW50dF9zY2FsZV9saW5le2NsZWFyOmJvdGh9Lmdh
			bnR0X2dyaWRfZGF0YXt3aWR0aDoxMDAlO292ZXJmbG93OmhpZGRlbjtwb3NpdGlvbjpyZWxhdGl2
			ZX0uZ2FudHRfcm93e3Bvc2l0aW9uOnJlbGF0aXZlOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTst
			bW96LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDotbW96LW5vbmV9LmdhbnR0X2Fk
			ZCwuZ2FudHRfZ3JpZF9oZWFkX2FkZHt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2JhY2tncm91bmQt
			aW1hZ2U6dXJsKGRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFB
			QkFBQUFBUUNBWUFBQUFmOC85aEFBQUFHWFJGV0hSVGIyWjBkMkZ5WlFCQlpHOWlaU0JKYldGblpW
			SmxZV1I1Y2NsbFBBQUFBeUpwVkZoMFdFMU1PbU52YlM1aFpHOWlaUzU0YlhBQUFBQUFBRHcvZUhC
			aFkydGxkQ0JpWldkcGJqMGk3N3UvSWlCcFpEMGlWelZOTUUxd1EyVm9hVWg2Y21WVGVrNVVZM3By
			WXpsa0lqOCtJRHg0T25odGNHMWxkR0VnZUcxc2JuTTZlRDBpWVdSdlltVTZibk02YldWMFlTOGlJ
			SGc2ZUcxd2RHczlJa0ZrYjJKbElGaE5VQ0JEYjNKbElEVXVNeTFqTURFeElEWTJMakUwTlRZMk1T
			d2dNakF4TWk4d01pOHdOaTB4TkRvMU5qb3lOeUFnSUNBZ0lDQWdJajRnUEhKa1pqcFNSRVlnZUcx
			c2JuTTZjbVJtUFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eE9UazVMekF5THpJeUxYSmtaaTF6
			ZVc1MFlYZ3Ribk1qSWo0Z1BISmtaanBFWlhOamNtbHdkR2x2YmlCeVpHWTZZV0p2ZFhROUlpSWdl
			RzFzYm5NNmVHMXdQU0pvZEhSd09pOHZibk11WVdSdlltVXVZMjl0TDNoaGNDOHhMakF2SWlCNGJX
			eHVjenA0YlhCTlRUMGlhSFIwY0RvdkwyNXpMbUZrYjJKbExtTnZiUzk0WVhBdk1TNHdMMjF0THlJ
			Z2VHMXNibk02YzNSU1pXWTlJbWgwZEhBNkx5OXVjeTVoWkc5aVpTNWpiMjB2ZUdGd0x6RXVNQzl6
			Vkhsd1pTOVNaWE52ZFhKalpWSmxaaU1pSUhodGNEcERjbVZoZEc5eVZHOXZiRDBpUVdSdlltVWdV
			R2h2ZEc5emFHOXdJRU5UTmlBb1YybHVaRzkzY3lraUlIaHRjRTFOT2tsdWMzUmhibU5sU1VROUlu
			aHRjQzVwYVdRNk5UUTNNak15TUVORE5rSTBNVEZGTWprNE1USTVRVGczTURoRk5EVkRRVGtpSUho
			dGNFMU5Pa1J2WTNWdFpXNTBTVVE5SW5odGNDNWthV1E2TlRRM01qTXlNRVJETmtJME1URkZNams0
			TVRJNVFUZzNNRGhGTkRWRFFUa2lQaUE4ZUcxd1RVMDZSR1Z5YVhabFpFWnliMjBnYzNSU1pXWTZh
			VzV6ZEdGdVkyVkpSRDBpZUcxd0xtbHBaRG8xTkRjeU16SXdRVU0yUWpReE1VVXlPVGd4TWpsQk9E
			Y3dPRVUwTlVOQk9TSWdjM1JTWldZNlpHOWpkVzFsYm5SSlJEMGllRzF3TG1ScFpEbzFORGN5TXpJ
			d1FrTTJRalF4TVVVeU9UZ3hNamxCT0Rjd09FVTBOVU5CT1NJdlBpQThMM0prWmpwRVpYTmpjbWx3
			ZEdsdmJqNGdQQzl5WkdZNlVrUkdQaUE4TDNnNmVHMXdiV1YwWVQ0Z1BEOTRjR0ZqYTJWMElHVnVa
			RDBpY2lJL1BzaFpUOFVBQUFCYlNVUkJWSGphWXJUZGVabUJFc0NFUis0d0VQK0g0c1BrR0dDRGcw
			MjBBUlI3Z2I0R0lBY1lES01EZFBuRHlBYllrR0c1RFZXOWNJUU12VWRCQkF1VVk0dkR6OGlBY1pp
			bkEyemdDSHFBWVFNc2VBeXdKY1lGQUFFR0FNK1VGR3VvaEZjekFBQUFBRWxGVGtTdVFtQ0MpO2Jh
			Y2tncm91bmQtcG9zaXRpb246NTAlO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtjdXJzb3I6
			cG9pbnRlcjtwb3NpdGlvbjpyZWxhdGl2ZTstbW96LW9wYWNpdHk6LjM7b3BhY2l0eTouM30uZ2Fu
			dHRfZ3JpZF9oZWFkX2NlbGwuZ2FudHRfZ3JpZF9oZWFkX2FkZHstbW96LW9wYWNpdHk6LjY7b3Bh
			Y2l0eTouNjt0b3A6MH0uZ2FudHRfZ3JpZF9oZWFkX2NlbGwuZ2FudHRfZ3JpZF9oZWFkX2FkZDpo
			b3ZlcnstbW96LW9wYWNpdHk6MTtvcGFjaXR5OjF9LmdhbnR0X2dyaWRfZGF0YSAuZ2FudHRfcm93
			Lm9kZDpob3ZlciwuZ2FudHRfZ3JpZF9kYXRhIC5nYW50dF9yb3c6aG92ZXJ7YmFja2dyb3VuZC1j
			b2xvcjojZmZmM2ExfS5nYW50dF9ncmlkX2RhdGEgLmdhbnR0X3Jvdy5vZGQ6aG92ZXIgLmdhbnR0
			X2FkZCwuZ2FudHRfZ3JpZF9kYXRhIC5nYW50dF9yb3c6aG92ZXIgLmdhbnR0X2FkZHstbW96LW9w
			YWNpdHk6MTtvcGFjaXR5OjF9LmdhbnR0X3JvdywuZ2FudHRfdGFza19yb3d7Ym9yZGVyLWJvdHRv
			bToxcHggc29saWQgI2ViZWJlYjtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmdhbnR0X3Jvdy5vZGQs
			LmdhbnR0X3Rhc2tfcm93Lm9kZHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmdhbnR0X2NlbGwsLmdh
			bnR0X2dyaWRfaGVhZF9jZWxsLC5nYW50dF9yb3csLmdhbnR0X3NjYWxlX2NlbGwsLmdhbnR0X3Rh
			c2tfY2VsbCwuZ2FudHRfdGFza19yb3d7Ym94LXNpemluZzpib3JkZXItYm94Oy1tb3otYm94LXNp
			emluZzpib3JkZXItYm94fS5nYW50dF9ncmlkX2hlYWRfY2VsbCwuZ2FudHRfc2NhbGVfY2VsbHts
			aW5lLWhlaWdodDppbmhlcml0fS5nYW50dF9ncmlkX3NjYWxlIC5nYW50dF9ncmlkX2NvbHVtbl9y
			ZXNpemVfd3JhcHtjdXJzb3I6Y29sLXJlc2l6ZTtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxM3B4
			O21hcmdpbi1sZWZ0Oi03cHh9LmdhbnR0X2dyaWRfY29sdW1uX3Jlc2l6ZV93cmFwIC5nYW50dF9n
			cmlkX2NvbHVtbl9yZXNpemV7YmFja2dyb3VuZC1jb2xvcjojY2VjZWNlO2hlaWdodDoxMDAlO3dp
			ZHRoOjFweDttYXJnaW46MCBhdXRvfS5nYW50dF9kcmFnX21hcmtlci5nYW50dF9ncmlkX3Jlc2l6
			ZV9hcmVhe2JhY2tncm91bmQtY29sb3I6aHNsYSgwLDAlLDkxJSwuNSk7Ym9yZGVyLWxlZnQ6MXB4
			IHNvbGlkICNjZWNlY2U7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjY2VjZWNlO2hlaWdodDoxMDAl
			O3dpZHRoOjEwMCU7Ym94LXNpemluZzpib3JkZXItYm94fS5nYW50dF9jZWxse2Rpc3BsYXk6aW5s
			aW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOnRvcDtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNlYmVi
			ZWI7cGFkZGluZy1sZWZ0OjZweDtwYWRkaW5nLXJpZ2h0OjZweDtoZWlnaHQ6MTAwJTtvdmVyZmxv
			dzpoaWRkZW47d2hpdGUtc3BhY2U6bm93cmFwO2ZvbnQtc2l6ZToxM3B4fS5nYW50dF9ncmlkX2Rh
			dGEgLmdhbnR0X2xhc3RfY2VsbCwuZ2FudHRfZ3JpZF9zY2FsZSAuZ2FudHRfbGFzdF9jZWxsLC5n
			YW50dF90YXNrIC5nYW50dF90YXNrX3NjYWxlIC5nYW50dF9zY2FsZV9jZWxsLmdhbnR0X2xhc3Rf
			Y2VsbCwuZ2FudHRfdGFza19iZyAuZ2FudHRfbGFzdF9jZWxse2JvcmRlci1yaWdodC13aWR0aDow
			fS5nYW50dF90YXNrIC5nYW50dF90YXNrX3NjYWxlIC5nYW50dF9zY2FsZV9jZWxsLmdhbnR0X2xh
			c3RfY2VsbHtib3JkZXItcmlnaHQtd2lkdGg6MXB4fS5nYW50dF90YXNrX2Jne292ZXJmbG93Omhp
			ZGRlbn0uZ2FudHRfc2NhbGVfY2VsbHtkaXNwbGF5OmlubGluZS1ibG9jazt3aGl0ZS1zcGFjZTpu
			b3dyYXA7b3ZlcmZsb3c6aGlkZGVuO2JvcmRlci1yaWdodDoxcHggc29saWQgI2NlY2VjZTt0ZXh0
			LWFsaWduOmNlbnRlcjtoZWlnaHQ6MTAwJX0uZ2FudHRfdGFza19jZWxse2Rpc3BsYXk6aW5saW5l
			LWJsb2NrO2hlaWdodDoxMDAlO2JvcmRlci1yaWdodDoxcHggc29saWQgI2ViZWJlYn0uZ2FudHRf
			bGF5b3V0X2NlbGwuZ2FudHRfdmVyX3Njcm9sbHt3aWR0aDowO2JhY2tncm91bmQtY29sb3I6dHJh
			bnNwYXJlbnQ7aGVpZ2h0OjFweDtvdmVyZmxvdy14OmhpZGRlbjtvdmVyZmxvdy15OnNjcm9sbDtw
			b3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3otaW5kZXg6MX0uZ2FudHRfdmVyX3Njcm9sbD5kaXZ7
			d2lkdGg6MXB4O2hlaWdodDoxcHh9LmdhbnR0X2hvcl9zY3JvbGx7aGVpZ2h0OjA7YmFja2dyb3Vu
			ZC1jb2xvcjp0cmFuc3BhcmVudDt3aWR0aDoxMDAlO2NsZWFyOmJvdGg7b3ZlcmZsb3cteDpzY3Jv
			bGw7b3ZlcmZsb3cteTpoaWRkZW59LmdhbnR0X2xheW91dF9jZWxsIC5nYW50dF9ob3Jfc2Nyb2xs
			e3Bvc2l0aW9uOmFic29sdXRlfS5nYW50dF9ob3Jfc2Nyb2xsPmRpdnt3aWR0aDo1MDAwcHg7aGVp
			Z2h0OjFweH0uZ2FudHRfdHJlZV9pbmRlbnR7d2lkdGg6MTVweDtoZWlnaHQ6MTAwJTtkaXNwbGF5
			OmlubGluZS1ibG9ja30uZ2FudHRfdHJlZV9jb250ZW50LC5nYW50dF90cmVlX2ljb257dmVydGlj
			YWwtYWxpZ246dG9wfS5nYW50dF90cmVlX2ljb257d2lkdGg6MjhweDtiYWNrZ3JvdW5kLXJlcGVh
			dDpuby1yZXBlYXQ7YmFja2dyb3VuZC1wb3NpdGlvbjo1MCV9LmdhbnR0X3RyZWVfY29udGVudCwu
			Z2FudHRfdHJlZV9pY29ue2hlaWdodDoxMDAlO2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5nYW50dF90
			cmVlX2ljb24uZ2FudHRfb3BlbntiYWNrZ3JvdW5kLWltYWdlOnVybChkYXRhOmltYWdlL3BuZzti
			YXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJJQUFBQVNDQVlBQUFCV3pvNVhBQUFBcmts
			RVFWUTRUMk5rb0JKZ3BKSTVERVBBb0ZPblR2MC9jK1lNUVIrYm1KZ3dtSm1ad1gyRTRiVnAwNmI5
			ajR5TVpPRGc0TUJwMkk4ZlB4aVdMMS9Pa0pXVk5VQUdjWEp5TW56Ly9oM3VRckpkUkxGQklBUFFB
			Y2hsSkxzSUZ1Q01qSXdNLy8vL0I1c0pNb1JrZzJDdUlkdHJRY0hCRE94c2JIQmZDUWdJTUh6NDhB
			SE8vL25yRjhPNnRXc0pSNys3dXpzREl4TVR6blQwLzk4L2hwMDdkK0kzaUdvcG0yRGV3S0ZnOE9W
			K0FKV2tmUk1yVG9iTEFBQUFBRWxGVGtTdVFtQ0MpO3dpZHRoOjE4cHg7Y3Vyc29yOnBvaW50ZXJ9
			LmdhbnR0X3RyZWVfaWNvbi5nYW50dF9jbG9zZXtiYWNrZ3JvdW5kLWltYWdlOnVybChkYXRhOmlt
			YWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJJQUFBQVNDQVlBQUFCV3pv
			NVhBQUFBa1VsRVFWUTRUMk5rb0JKZ3BKSTVERVBBb0ZPblR2MC9jK1lNUVIrYm1KZ3dtSm1ad1gy
			RTRiVnAwNmI5ajR5TVpPRGc0TUJwMkk4ZlB4aVdMMS9Pa0pXVk5lSU40dVRreEFpbjc5Ky9NNUFj
			UnRnQ0hHUUl5UWJoaWphaURRb0tEbVpnWjJQREdmMC9mLzFpV0xkMkxlSG9kM2QzWjJCa1lzSnAw
			UDkvL3hoMjd0eUozeUNxcFd5Q2VRT0hnc0dYK3dFWnBXNFQ1TEN4S3dBQUFBQkpSVTVFcmtKZ2dn
			PT0pO3dpZHRoOjE4cHg7Y3Vyc29yOnBvaW50ZXJ9LmdhbnR0X3RyZWVfaWNvbi5nYW50dF9ibGFu
			a3t3aWR0aDoxOHB4fS5nYW50dF90cmVlX2ljb24uZ2FudHRfZm9sZGVyX29wZW57YmFja2dyb3Vu
			ZC1pbWFnZTp1cmwoZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdB
			QUFCSUFBQUFTQ0FZQUFBQld6bzVYQUFBQXMwbEVRVlE0VDYyVDBRMkVJQkJFcFFsenVhYU1zUW9x
			b29xTHNTbGpiTUxMbU14bVVYQlI0VStRdDdNemkyc3FMVmVKMDBTZ0VNS1dBbnZ2ellMeUF5SGZU
			NXNVMmZYREpTd0NBWEs4TUkwL1VUa3ZhN0lJRkpzZzNOU3duS2RGb0t0QVdPUTFDTjdDRXFlVG90
			RTVMN1F5SmhtQmNrbFpNNFpnVGlBcjNpT1Uza0Q5M3BwTzVTa01qQjFFZVhkQldvU2tScWwzWWVJ
			UmUrY0d2a3RTMDU2SlI5d3NtZUJVa3VqQ2ZOWFdDUEM4R3VnUHFuNWlpL2hWK0ZvQUFBQUFTVVZP
			Uks1Q1lJST0pfS5nYW50dF90cmVlX2ljb24uZ2FudHRfZm9sZGVyX2Nsb3NlZHtiYWNrZ3JvdW5k
			LWltYWdlOnVybChkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FB
			QUJJQUFBQVNDQVlBQUFCV3pvNVhBQUFBZkVsRVFWUTRUMk5rb0JKZ3BKSTVEQ2dHVFo4Ky9UODJn
			ek16TXdsYUNGY0FNMFJLUWd5ckkvMERnL0VhaG1JUXlCQjBEUnZYcjRXNzh0bUxWMWd0QWJtWW9F
			RWduY2lHNFFwVG9nekNGeUV3U3lnMkNCUzJvQ0FaTlFoM2NBK2hNQUo1QWxjS3h1VkJsT2duTmdW
			ak13eVVyUWptYW1LTEdhb1pCQUFPVEZ5TG5GRlc0d0FBQUFCSlJVNUVya0pnZ2c9PSl9LmdhbnR0
			X3RyZWVfaWNvbi5nYW50dF9maWxle2JhY2tncm91bmQtaW1hZ2U6dXJsKGRhdGE6aW1hZ2UvcG5n
			O2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQklBQUFBU0NBWUFBQUJXem81WEFBQUFl
			RWxFUVZRNFQyTmtvQkpnUkRabit2VHAvd21abTVtWmlhSUhwaDdESUNrSk1VSm1NZmdIQm1NWWh0
			VWdiQW8zcmwrTDRscDBOVVFiQlBJMnVtdVJEYVBJSUZBWXdBeWp2MEhvTVFBTE01SmRoRzRRTE14
			R0RjS2R5SWRvR0lFODlPekZLNEtaRjVSbDhFWS9RUk9RRkdBMWlCUUQwTlVDQUpWamN4TzBuYUFR
			QUFBQUFFbEZUa1N1UW1DQyl9LmdhbnR0X2dyaWRfaGVhZF9jZWxsIC5nYW50dF9zb3J0e3Bvc2l0
			aW9uOmFic29sdXRlO3JpZ2h0OjVweDt0b3A6OHB4O3dpZHRoOjdweDtoZWlnaHQ6MTNweDtiYWNr
			Z3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7YmFja2dyb3VuZC1wb3NpdGlvbjo1MCV9LmdhbnR0X2dy
			aWRfaGVhZF9jZWxsIC5nYW50dF9zb3J0LmdhbnR0X2FzY3tiYWNrZ3JvdW5kLWltYWdlOnVybChk
			YXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUFjQUFBQU5DQVlB
			QUFCbHlYUzFBQUFBUlVsRVFWUjRuR05nUUFLR3hpYi9HYkFCa0lTN2I4Qi9EQVV3Q1JpR0swQ1h3
			RkJBYjFEZlAvVS9Mc3p3SHdpMlg3cUZnVUVBckJ0ZEFWd0NCbUFLTUNTUUZTRHpBV1hYYU9Ic1hl
			cWtBQUFBQUVsRlRrU3VRbUNDKX0uZ2FudHRfZ3JpZF9oZWFkX2NlbGwgLmdhbnR0X3NvcnQuZ2Fu
			dHRfZGVzY3tiYWNrZ3JvdW5kLWltYWdlOnVybChkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3
			MEtHZ29BQUFBTlNVaEVVZ0FBQUFjQUFBQU5DQVlBQUFCbHlYUzFBQUFBUlVsRVFWUjQybU5nUUFM
			MS9WUC9NMkFESUludEYyLzl4MUFBbHJoMEM0N2hDbUE2MERGWXdYODhnSUZHd05EWTVEOHVERmJn
			N2h2d0h4MmptSUJUQWxrQjBlNEJBRWpsYU50QldKUG5BQUFBQUVsRlRrU3VRbUNDKX0uZ2FudHRf
			aW5zZXJ0ZWQsLmdhbnR0X3VwZGF0ZWR7Zm9udC13ZWlnaHQ6NzAwfS5nYW50dF9kZWxldGVke3Rl
			eHQtZGVjb3JhdGlvbjpsaW5lLXRocm91Z2h9LmdhbnR0X2ludmFsaWR7YmFja2dyb3VuZC1jb2xv
			cjojZmZlMGUwfS5nYW50dF9lcnJvcntjb2xvcjpyZWR9LmdhbnR0X3N0YXR1c3tyaWdodDoxcHg7
			cGFkZGluZzo1cHggMTBweDtiYWNrZ3JvdW5kOmhzbGEoMCwwJSw2MSUsLjEpO3Bvc2l0aW9uOmFi
			c29sdXRlO3RvcDoxcHg7dHJhbnNpdGlvbjpvcGFjaXR5IC4ycztvcGFjaXR5OjB9LmdhbnR0X3N0
			YXR1cy5nYW50dF9zdGF0dXNfdmlzaWJsZXtvcGFjaXR5OjF9I2dhbnR0X2FqYXhfZG90cyBzcGFu
			e3RyYW5zaXRpb246b3BhY2l0eSAuMnM7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O29wYWNp
			dHk6MH0jZ2FudHRfYWpheF9kb3RzIHNwYW4uZ2FudHRfZG90X3Zpc2libGV7b3BhY2l0eToxfS5n
			YW50dF9tZXNzYWdlX2FyZWF7cG9zaXRpb246Zml4ZWQ7cmlnaHQ6NXB4O3dpZHRoOjI1MHB4O3ot
			aW5kZXg6MTAwMH0uZ2FudHQtaW5mb3ttaW4td2lkdGg6MTIwcHg7cGFkZGluZzo0cHggNHB4IDRw
			eCAyMHB4O2ZvbnQtZmFtaWx5OkFyaWFsO3otaW5kZXg6MTAwMDA7bWFyZ2luOjVweDttYXJnaW4t
			Ym90dG9tOjEwcHg7dHJhbnNpdGlvbjphbGwgLjVzIGVhc2V9LmdhbnR0LWluZm8uaGlkZGVue2hl
			aWdodDowO3BhZGRpbmc6MDtib3JkZXItd2lkdGg6MDttYXJnaW46MDtvdmVyZmxvdzpoaWRkZW59
			LmdhbnR0X21vZGFsX2JveHtvdmVyZmxvdzpoaWRkZW47ZGlzcGxheTppbmxpbmUtYmxvY2s7bWlu
			LXdpZHRoOjI1MHB4O3dpZHRoOjI1MHB4O3RleHQtYWxpZ246Y2VudGVyO3Bvc2l0aW9uOmZpeGVk
			O3otaW5kZXg6MjAwMDA7Ym94LXNoYWRvdzozcHggM3B4IDNweCByZ2JhKDAsMCwwLC4wNyk7Zm9u
			dC1mYW1pbHk6QXJpYWw7Ym9yZGVyLXJhZGl1czo2cHg7Ym9yZGVyOjFweCBzb2xpZCAjY2VjZWNl
			O2JhY2tncm91bmQ6I2ZmZn0uZ2FudHRfcG9wdXBfdGl0bGV7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1
			czo2cHg7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NnB4O2JvcmRlci13aWR0aDowfS5nYW50dF9i
			dXR0b24sLmdhbnR0X3BvcHVwX2J1dHRvbntib3JkZXI6MXB4IHNvbGlkICNjZWNlY2U7aGVpZ2h0
			OjMwcHg7bGluZS1oZWlnaHQ6MzBweDtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW46MCA1cHg7
			Ym9yZGVyLXJhZGl1czo0cHg7YmFja2dyb3VuZDojZmZmfS5nYW50dC1pbmZvLC5nYW50dF9idXR0
			b24sLmdhbnR0X3BvcHVwX2J1dHRvbnt1c2VyLXNlbGVjdDpub25lOy13ZWJraXQtdXNlci1zZWxl
			Y3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Oi1tb3otbm9uZTtjdXJzb3I6cG9pbnRlcn0uZ2FudHRf
			cG9wdXBfdGV4dHtvdmVyZmxvdzpoaWRkZW59LmdhbnR0X3BvcHVwX2NvbnRyb2xze2JvcmRlci1y
			YWRpdXM6NnB4O3BhZGRpbmc6MTBweH0uZ2FudHRfcG9wdXBfYnV0dG9ue21pbi13aWR0aDoxMDBw
			eH1kaXYuZGh4X21vZGFsX2NvdmVye2JhY2tncm91bmQtY29sb3I6IzAwMDtjdXJzb3I6ZGVmYXVs
			dDtmaWx0ZXI6cHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkFscGhhKG9wYWNpdHk9
			MjApO29wYWNpdHk6LjI7cG9zaXRpb246Zml4ZWQ7ei1pbmRleDoxOTk5OTtsZWZ0OjA7dG9wOjA7
			d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtib3JkZXI6bm9uZTt6b29tOjF9LmdhbnR0LWluZm8gaW1n
			LC5nYW50dF9tb2RhbF9ib3ggaW1ne2Zsb2F0OmxlZnQ7bWFyZ2luLXJpZ2h0OjIwcHh9LmdhbnR0
			LWFsZXJ0LWVycm9yLC5nYW50dC1jb25maXJtLWVycm9ye2JvcmRlcjoxcHggc29saWQgcmVkfS5n
			YW50dF9idXR0b24gaW5wdXQsLmdhbnR0X3BvcHVwX2J1dHRvbiBkaXZ7Ym9yZGVyLXJhZGl1czo0
			cHg7Zm9udC1zaXplOjE0cHg7Ym94LXNpemluZzpjb250ZW50LWJveDtwYWRkaW5nOjA7bWFyZ2lu
			OjA7dmVydGljYWwtYWxpZ246dG9wfS5nYW50dF9wb3B1cF90aXRsZXtib3JkZXItYm90dG9tOjFw
			eCBzb2xpZCAjY2VjZWNlO2hlaWdodDo0MHB4O2xpbmUtaGVpZ2h0OjQwcHg7Zm9udC1zaXplOjIw
			cHh9LmdhbnR0X3BvcHVwX3RleHR7bWFyZ2luOjE1cHggMTVweCA1cHg7Zm9udC1zaXplOjE0cHg7
			Y29sb3I6IzAwMDttaW4taGVpZ2h0OjMwcHg7Ym9yZGVyLXJhZGl1czo2cHh9LmdhbnR0LWVycm9y
			LC5nYW50dC1pbmZve2ZvbnQtc2l6ZToxNHB4O2NvbG9yOiMwMDA7Ym94LXNoYWRvdzozcHggM3B4
			IDNweCByZ2JhKDAsMCwwLC4wNyk7cGFkZGluZzowO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3Jk
			ZXItcmFkaXVzOjNweDtib3JkZXI6MXB4IHNvbGlkICNmZmZ9LmdhbnR0LWluZm8gZGl2e3BhZGRp
			bmc6NXB4IDEwcHg7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlci1yYWRpdXM6M3B4O2JvcmRl
			cjoxcHggc29saWQgI2NlY2VjZX0uZ2FudHQtZXJyb3J7YmFja2dyb3VuZC1jb2xvcjojZDgxYjFi
			O2JvcmRlcjoxcHggc29saWQgI2ZmM2MzY30uZ2FudHQtZXJyb3IgZGl2e2JhY2tncm91bmQtY29s
			b3I6I2Q4MWIxYjtib3JkZXI6MXB4IHNvbGlkICM5NDAwMDA7Y29sb3I6I2ZmZn0uZ2FudHQtd2Fy
			bmluZ3tiYWNrZ3JvdW5kLWNvbG9yOiNmZjkwMDA7Ym9yZGVyOjFweCBzb2xpZCAjZmZhNjMzfS5n
			YW50dC13YXJuaW5nIGRpdntiYWNrZ3JvdW5kLWNvbG9yOiNmZjkwMDA7Ym9yZGVyOjFweCBzb2xp
			ZCAjYjM2NTAwO2NvbG9yOiNmZmZ9LmdhbnR0X2RhdGFfYXJlYSBkaXYsLmdhbnR0X2dyaWQgZGl2
			ey1tcy10b3VjaC1hY3Rpb246bm9uZTstd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6cmdiYSgw
			LDAsMCwwKX0uZ2FudHRfZGF0YV9hcmVhe3Bvc2l0aW9uOnJlbGF0aXZlO292ZXJmbG93LXg6aGlk
			ZGVuO292ZXJmbG93LXk6aGlkZGVuOy1tb3otdXNlci1zZWxlY3Q6LW1vei1ub25lOy13ZWJraXQt
			dXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lfS5nYW50dF9saW5rc19hcmVhe3Bvc2l0
			aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MH0uZ2FudHRfc2lkZV9jb250ZW50LC5nYW50dF90YXNr
			X2NvbnRlbnQsLmdhbnR0X3Rhc2tfcHJvZ3Jlc3N7bGluZS1oZWlnaHQ6aW5oZXJpdDtvdmVyZmxv
			dzpoaWRkZW47aGVpZ2h0OjEwMCV9LmdhbnR0X3Rhc2tfY29udGVudHtmb250LXNpemU6MTJweDtj
			b2xvcjojZmZmO3dpZHRoOjEwMCU7dG9wOjA7Y3Vyc29yOnBvaW50ZXI7cG9zaXRpb246YWJzb2x1
			dGU7d2hpdGUtc3BhY2U6bm93cmFwO3RleHQtYWxpZ246Y2VudGVyfS5nYW50dF90YXNrX3Byb2dy
			ZXNze3RleHQtYWxpZ246Y2VudGVyO3otaW5kZXg6MDtiYWNrZ3JvdW5kOiMyOTljYjR9LmdhbnR0
			X3Rhc2tfcHJvZ3Jlc3Nfd3JhcHBlcntib3JkZXItcmFkaXVzOmluaGVyaXQ7cG9zaXRpb246cmVs
			YXRpdmU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtvdmVyZmxvdzpoaWRkZW59LmdhbnR0X3Rhc2tf
			bGluZXtib3JkZXItcmFkaXVzOjJweDtwb3NpdGlvbjphYnNvbHV0ZTtib3gtc2l6aW5nOmJvcmRl
			ci1ib3g7YmFja2dyb3VuZC1jb2xvcjojM2RiOWQzO2JvcmRlcjoxcHggc29saWQgIzI4OThiMDst
			d2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1z
			ZWxlY3Q6LW1vei1ub25lfS5nYW50dF90YXNrX2xpbmUuZ2FudHRfZHJhZ19tb3ZlIGRpdntjdXJz
			b3I6bW92ZX0uZ2FudHRfdG91Y2hfbW92ZSwuZ2FudHRfdG91Y2hfcHJvZ3Jlc3MgLmdhbnR0X3Rv
			dWNoX3Jlc2l6ZXt0cmFuc2Zvcm06c2NhbGUoMS4wMiwxLjEpO3RyYW5zZm9ybS1vcmlnaW46NTAl
			fS5nYW50dF90b3VjaF9wcm9ncmVzcyAuZ2FudHRfdGFza19wcm9ncmVzc19kcmFnLC5nYW50dF90
			b3VjaF9yZXNpemUgLmdhbnR0X3Rhc2tfZHJhZ3t0cmFuc2Zvcm06c2NhbGVZKDEuMyk7dHJhbnNm
			b3JtLW9yaWdpbjo1MCV9LmdhbnR0X3NpZGVfY29udGVudHtwb3NpdGlvbjphYnNvbHV0ZTt3aGl0
			ZS1zcGFjZTpub3dyYXA7Y29sb3I6IzZlNmU2ZTt0b3A6MDtmb250LXNpemU6MTFweH0uZ2FudHRf
			c2lkZV9jb250ZW50LmdhbnR0X2xlZnR7cmlnaHQ6MTAwJTtwYWRkaW5nLXJpZ2h0OjIwcHh9Lmdh
			bnR0X3NpZGVfY29udGVudC5nYW50dF9yaWdodHtsZWZ0OjEwMCU7cGFkZGluZy1sZWZ0OjIwcHh9
			LmdhbnR0X3NpZGVfY29udGVudC5nYW50dF9saW5rX2Nyb3NzaW5ne2JvdHRvbTo4Ljc1cHg7dG9w
			OmF1dG99LmdhbnR0X2xpbmtfYXJyb3csLmdhbnR0X3Rhc2tfbGluayAuZ2FudHRfbGluZV93cmFw
			cGVye3Bvc2l0aW9uOmFic29sdXRlO2N1cnNvcjpwb2ludGVyfS5nYW50dF9saW5lX3dyYXBwZXIg
			ZGl2e2JhY2tncm91bmQtY29sb3I6I2ZmYTAxMX0uZ2FudHRfdGFza19saW5rOmhvdmVyIC5nYW50
			dF9saW5lX3dyYXBwZXIgZGl2e2JveC1zaGFkb3c6MCAwIDVweCAwICNmZmEwMTF9LmdhbnR0X3Rh
			c2tfbGluayBkaXYuZ2FudHRfbGlua19hcnJvd3tiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50
			O2JvcmRlci1zdHlsZTpzb2xpZDt3aWR0aDowO2hlaWdodDowfS5nYW50dF9saW5rX2NvbnRyb2x7
			cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MjBweDt0b3A6MH0uZ2FudHRfbGlua19jb250cm9sIGRp
			dntkaXNwbGF5Om5vbmU7Y3Vyc29yOnBvaW50ZXI7Ym94LXNpemluZzpib3JkZXItYm94O3Bvc2l0
			aW9uOnJlbGF0aXZlO3RvcDo1MCU7bWFyZ2luLXRvcDotNy41cHg7dmVydGljYWwtYWxpZ246bWlk
			ZGxlO2JvcmRlcjoxcHggc29saWQgIzkyOTI5Mjtib3JkZXItcmFkaXVzOjYuNXB4O2hlaWdodDox
			M3B4O3dpZHRoOjEzcHg7YmFja2dyb3VuZC1jb2xvcjojZjBmMGYwfS5nYW50dF9saW5rX2NvbnRy
			b2wudGFza19yaWdodCBkaXYuZ2FudHRfbGlua19wb2ludHttYXJnaW4tbGVmdDo3cHh9LmdhbnR0
			X2xpbmtfY29udHJvbCBkaXY6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmfS5nYW50dF9saW5r
			X2NvbnRyb2wudGFza19sZWZ0e2xlZnQ6LTIwcHh9LmdhbnR0X2xpbmtfY29udHJvbC50YXNrX3Jp
			Z2h0e3JpZ2h0Oi0yMHB4fS5nYW50dF9saW5rX3RhcmdldCAuZ2FudHRfbGlua19jb250cm9sIGRp
			diwuZ2FudHRfdGFza19saW5lLmdhbnR0X2RyYWdfbW92ZSAuZ2FudHRfbGlua19jb250cm9sIGRp
			diwuZ2FudHRfdGFza19saW5lLmdhbnR0X2RyYWdfbW92ZSAuZ2FudHRfdGFza19kcmFnLC5nYW50
			dF90YXNrX2xpbmUuZ2FudHRfZHJhZ19tb3ZlIC5nYW50dF90YXNrX3Byb2dyZXNzX2RyYWcsLmdh
			bnR0X3Rhc2tfbGluZS5nYW50dF9kcmFnX3Byb2dyZXNzIC5nYW50dF9saW5rX2NvbnRyb2wgZGl2
			LC5nYW50dF90YXNrX2xpbmUuZ2FudHRfZHJhZ19wcm9ncmVzcyAuZ2FudHRfdGFza19kcmFnLC5n
			YW50dF90YXNrX2xpbmUuZ2FudHRfZHJhZ19wcm9ncmVzcyAuZ2FudHRfdGFza19wcm9ncmVzc19k
			cmFnLC5nYW50dF90YXNrX2xpbmUuZ2FudHRfZHJhZ19yZXNpemUgLmdhbnR0X2xpbmtfY29udHJv
			bCBkaXYsLmdhbnR0X3Rhc2tfbGluZS5nYW50dF9kcmFnX3Jlc2l6ZSAuZ2FudHRfdGFza19kcmFn
			LC5nYW50dF90YXNrX2xpbmUuZ2FudHRfZHJhZ19yZXNpemUgLmdhbnR0X3Rhc2tfcHJvZ3Jlc3Nf
			ZHJhZywuZ2FudHRfdGFza19saW5lLmdhbnR0X3NlbGVjdGVkIC5nYW50dF9saW5rX2NvbnRyb2wg
			ZGl2LC5nYW50dF90YXNrX2xpbmUuZ2FudHRfc2VsZWN0ZWQgLmdhbnR0X3Rhc2tfZHJhZywuZ2Fu
			dHRfdGFza19saW5lLmdhbnR0X3NlbGVjdGVkIC5nYW50dF90YXNrX3Byb2dyZXNzX2RyYWcsLmdh
			bnR0X3Rhc2tfbGluZTpob3ZlciAuZ2FudHRfbGlua19jb250cm9sIGRpdiwuZ2FudHRfdGFza19s
			aW5lOmhvdmVyIC5nYW50dF90YXNrX2RyYWcsLmdhbnR0X3Rhc2tfbGluZTpob3ZlciAuZ2FudHRf
			dGFza19wcm9ncmVzc19kcmFne2Rpc3BsYXk6YmxvY2t9LmdhbnR0X2xpbmtfc291cmNlLC5nYW50
			dF9saW5rX3RhcmdldHtib3gtc2hhZG93OjAgMCAzcHggIzNkYjlkM30uZ2FudHRfbGlua190YXJn
			ZXQubGlua19maW5pc2hfYWxsb3csLmdhbnR0X2xpbmtfdGFyZ2V0Lmxpbmtfc3RhcnRfYWxsb3d7
			Ym94LXNoYWRvdzowIDAgM3B4ICNmZmJmNWV9LmdhbnR0X2xpbmtfdGFyZ2V0LmxpbmtfZmluaXNo
			X2RlbnksLmdhbnR0X2xpbmtfdGFyZ2V0Lmxpbmtfc3RhcnRfZGVueXtib3gtc2hhZG93OjAgMCAz
			cHggI2U4N2U3Yn0ubGlua19maW5pc2hfYWxsb3cgLmdhbnR0X2xpbmtfY29udHJvbC50YXNrX2Vu
			ZF9kYXRlIGRpdiwubGlua19zdGFydF9hbGxvdyAuZ2FudHRfbGlua19jb250cm9sLnRhc2tfc3Rh
			cnRfZGF0ZSBkaXZ7YmFja2dyb3VuZC1jb2xvcjojZmZiZjVlO2JvcmRlci1jb2xvcjojZmZhMDEx
			fS5saW5rX2ZpbmlzaF9kZW55IC5nYW50dF9saW5rX2NvbnRyb2wudGFza19lbmRfZGF0ZSBkaXYs
			Lmxpbmtfc3RhcnRfZGVueSAuZ2FudHRfbGlua19jb250cm9sLnRhc2tfc3RhcnRfZGF0ZSBkaXZ7
			YmFja2dyb3VuZC1jb2xvcjojZTg3ZTdiO2JvcmRlci1jb2xvcjojZGQzZTNhfS5nYW50dF9saW5r
			X2Fycm93X3JpZ2h0e2JvcmRlci13aWR0aDo0cHggMCA0cHggNnB4O2JvcmRlci10b3AtY29sb3I6
			dHJhbnNwYXJlbnQhaW1wb3J0YW50O2JvcmRlci1yaWdodC1jb2xvcjp0cmFuc3BhcmVudCFpbXBv
			cnRhbnQ7Ym9yZGVyLWJvdHRvbS1jb2xvcjp0cmFuc3BhcmVudCFpbXBvcnRhbnQ7Ym9yZGVyLWxl
			ZnQtY29sb3I6I2ZmYTAxMTttYXJnaW4tdG9wOi0xcHh9LmdhbnR0X2xpbmtfYXJyb3dfbGVmdHti
			b3JkZXItd2lkdGg6NHB4IDZweCA0cHggMDttYXJnaW4tdG9wOi0xcHg7Ym9yZGVyLXRvcC1jb2xv
			cjp0cmFuc3BhcmVudCFpbXBvcnRhbnQ7Ym9yZGVyLXJpZ2h0LWNvbG9yOiNmZmEwMTE7Ym9yZGVy
			LWJvdHRvbS1jb2xvcjp0cmFuc3BhcmVudCFpbXBvcnRhbnQ7Ym9yZGVyLWxlZnQtY29sb3I6dHJh
			bnNwYXJlbnQhaW1wb3J0YW50fS5nYW50dF9saW5rX2Fycm93X3Vwe2JvcmRlci13aWR0aDowIDRw
			eCA2cHg7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZmEwMTE7Ym9yZGVy
			LXRvcC1jb2xvcjp0cmFuc3BhcmVudCFpbXBvcnRhbnQ7Ym9yZGVyLXJpZ2h0LWNvbG9yOnRyYW5z
			cGFyZW50IWltcG9ydGFudDtib3JkZXItYm90dG9tLWNvbG9yOiNmZmEwMTE7Ym9yZGVyLWxlZnQt
			Y29sb3I6dHJhbnNwYXJlbnQhaW1wb3J0YW50fS5nYW50dF9saW5rX2Fycm93X2Rvd257Ym9yZGVy
			LXdpZHRoOjRweCA2cHggMCA0cHg7Ym9yZGVyLXRvcC1jb2xvcjojZmZhMDExO2JvcmRlci1yaWdo
			dC1jb2xvcjp0cmFuc3BhcmVudCFpbXBvcnRhbnQ7Ym9yZGVyLWJvdHRvbS1jb2xvcjp0cmFuc3Bh
			cmVudCFpbXBvcnRhbnQ7Ym9yZGVyLWxlZnQtY29sb3I6dHJhbnNwYXJlbnQhaW1wb3J0YW50fS5n
			YW50dF90YXNrX2RyYWcsLmdhbnR0X3Rhc2tfcHJvZ3Jlc3NfZHJhZ3tjdXJzb3I6ZXctcmVzaXpl
			O2Rpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZX0uZ2FudHRfdGFza19kcmFnLnRhc2tfcmln
			aHR7Y3Vyc29yOmUtcmVzaXplfS5nYW50dF90YXNrX2RyYWcudGFza19sZWZ0e2N1cnNvcjp3LXJl
			c2l6ZX0uZ2FudHRfdGFza19kcmFne2hlaWdodDoxMDAlO3dpZHRoOjhweDt6LWluZGV4OjE7dG9w
			Oi0xcHh9LmdhbnR0X3Rhc2tfZHJhZy50YXNrX2xlZnR7bGVmdDotN3B4fS5nYW50dF90YXNrX2Ry
			YWcudGFza19yaWdodHtyaWdodDotN3B4fS5nYW50dF90YXNrX3Byb2dyZXNzX2RyYWd7aGVpZ2h0
			OjhweDt3aWR0aDo4cHg7Ym90dG9tOi00cHg7bWFyZ2luLWxlZnQ6LTRweDtiYWNrZ3JvdW5kLXBv
			c2l0aW9uOmJvdHRvbTtiYWNrZ3JvdW5kLWltYWdlOnVybChkYXRhOmltYWdlL3BuZztiYXNlNjQs
			aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQUxDQVlBQUFCMjRnMDVBQUFBR1hSRldIUlRi
			MlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQXlKcFZGaDBXRTFNT21OdmJT
			NWhaRzlpWlM1NGJYQUFBQUFBQUR3L2VIQmhZMnRsZENCaVpXZHBiajBpNzd1L0lpQnBaRDBpVnpW
			Tk1FMXdRMlZvYVVoNmNtVlRlazVVWTNwcll6bGtJajgrSUR4NE9uaHRjRzFsZEdFZ2VHMXNibk02
			ZUQwaVlXUnZZbVU2Ym5NNmJXVjBZUzhpSUhnNmVHMXdkR3M5SWtGa2IySmxJRmhOVUNCRGIzSmxJ
			RFV1TXkxak1ERXhJRFkyTGpFME5UWTJNU3dnTWpBeE1pOHdNaTh3TmkweE5EbzFOam95TnlBZ0lD
			QWdJQ0FnSWo0Z1BISmtaanBTUkVZZ2VHMXNibk02Y21SbVBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05
			eVp5OHhPVGs1THpBeUx6SXlMWEprWmkxemVXNTBZWGd0Ym5NaklqNGdQSEprWmpwRVpYTmpjbWx3
			ZEdsdmJpQnlaR1k2WVdKdmRYUTlJaUlnZUcxc2JuTTZlRzF3UFNKb2RIUndPaTh2Ym5NdVlXUnZZ
			bVV1WTI5dEwzaGhjQzh4TGpBdklpQjRiV3h1Y3pwNGJYQk5UVDBpYUhSMGNEb3ZMMjV6TG1Ga2Iy
			SmxMbU52YlM5NFlYQXZNUzR3TDIxdEx5SWdlRzFzYm5NNmMzUlNaV1k5SW1oMGRIQTZMeTl1Y3k1
			aFpHOWlaUzVqYjIwdmVHRndMekV1TUM5elZIbHdaUzlTWlhOdmRYSmpaVkpsWmlNaUlIaHRjRHBE
			Y21WaGRHOXlWRzl2YkQwaVFXUnZZbVVnVUdodmRHOXphRzl3SUVOVE5pQW9WMmx1Wkc5M2N5a2lJ
			SGh0Y0UxTk9rbHVjM1JoYm1ObFNVUTlJbmh0Y0M1cGFXUTZNa1kzUmprMFJVVkRNa1l6TVRGRk1r
			STFPVGhFUVRBM09EVTBPVGt6TUVFaUlIaHRjRTFOT2tSdlkzVnRaVzUwU1VROUluaHRjQzVrYVdR
			Nk1rWTNSamswUlVaRE1rWXpNVEZGTWtJMU9UaEVRVEEzT0RVME9Ua3pNRUVpUGlBOGVHMXdUVTA2
			UkdWeWFYWmxaRVp5YjIwZ2MzUlNaV1k2YVc1emRHRnVZMlZKUkQwaWVHMXdMbWxwWkRveVJqZEdP
			VFJGUTBNeVJqTXhNVVV5UWpVNU9FUkJNRGM0TlRRNU9UTXdRU0lnYzNSU1pXWTZaRzlqZFcxbGJu
			UkpSRDBpZUcxd0xtUnBaRG95UmpkR09UUkZSRU15UmpNeE1VVXlRalU1T0VSQk1EYzROVFE1T1RN
			d1FTSXZQaUE4TDNKa1pqcEVaWE5qY21sd2RHbHZiajRnUEM5eVpHWTZVa1JHUGlBOEwzZzZlRzF3
			YldWMFlUNGdQRDk0Y0dGamEyVjBJR1Z1WkQwaWNpSS9Qb2JQQnpJQUFBRGtTVVJCVkhqYVlwazJi
			Um9ERHNBRXhMMVFkakVRLzhPbWlBV0haazRnWHF5bXFoUU00dHk2ZlU4T1NNVUE4WGRpREJBQjRr
			MGE2aXFXUmdhNkVLY3dNUVhkdUhsbkw1RHBCOFJ2MEoySkRGU0ErSmlPdGdaY013aUEyQ0F4a0J4
			VURWWURMRUFLZ0lwVjlYUTBNWndGRWdQSkFabkhvV3BSREFnQzRuMlc1c2FpUUtmakNsUUdrQnhR
			RGNpTCs2QjZ3QWJrQS9FcUp3ZHJUa1VGT1FaQ0FLUUdwQmJJWEEzU0N6SmdnbytYSzdPRXVCZ0Rz
			UUNrRnFnSHJCZnNCVDVlSGdaU0FVd1AySUJmdjM2VGJBQk1EeWdkdEsxWnY2VUVTTE9SYUFiSWhH
			NkFBQU1BS044d0UyNERYV2NBQUFBQVNVVk9SSzVDWUlJPSk7YmFja2dyb3VuZC1yZXBlYXQ6bm8t
			cmVwZWF0O3otaW5kZXg6MX0uZ2FudHRfdGFza19wcm9ncmVzc19kcmFnOmhvdmVye2JhY2tncm91
			bmQtaW1hZ2U6dXJsKGRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVn
			QUFBQkFBQUFBTENBWUFBQUIyNGcwNUFBQUFCbUpMUjBRQS93RC9BUCtndmFlVEFBQUFDWEJJV1hN
			QUFBc1RBQUFMRXdFQW1wd1lBQUFBczBsRVFWUW96NldNUFc3Q1FCZ0ZKeFphaVo2MHFjZ2R3alZN
			bXp1OGdwd2hEVUxhYlh5QmRIQUd1elJIaXZRaVFab3ZpZ1MyK0p0dTk1dDVUMDNUTUlUdEN0akVj
			NVZTT2d4NWs1RjRDbnhKV2dLVVVsNXN2NmVVdmsvZGFpQ2VBZTFmRENDcEJ0cTRqUS9ZbmdPOXBN
			V3BHSDk5T09jRHR0OGlmbVdFdU8zRC9SK3dYUU9kcEdjdUlHa0dkTkZRMlJhd2xUVGxTc0xkMlJZ
			NTUrTzk1SnlQRlEveThNQUUrQ3lsZkFEcHh2WUhXUDhDWGorSlI0d2RLSFlBQUFBQVNVVk9SSzVD
			WUlJPSl9LmdhbnR0X2xpbmtfdG9vbHRpcHtib3gtc2hhZG93OjNweCAzcHggM3B4ICM4ODg7YmFj
			a2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlci1sZWZ0OjFweCBkb3R0ZWQgI2NlY2VjZTtib3JkZXIt
			dG9wOjFweCBkb3R0ZWQgI2NlY2VjZTtmb250LWZhbWlseTpUYWhvbWE7Zm9udC1zaXplOjhwdDtj
			b2xvcjojNDQ0O3BhZGRpbmc6NnB4O2xpbmUtaGVpZ2h0OjIwcHh9LmdhbnR0X2xpbmtfZGlyZWN0
			aW9ue2hlaWdodDowO2JvcmRlcjowIG5vbmUgI2ZmYTAxMTtib3JkZXItYm90dG9tLXN0eWxlOmRh
			c2hlZDtib3JkZXItYm90dG9tLXdpZHRoOjJweDt0cmFuc2Zvcm0tb3JpZ2luOjAgMDstbXMtdHJh
			bnNmb3JtLW9yaWdpbjowIDA7LXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOjAgMDt6LWluZGV4OjI7
			bWFyZ2luLWxlZnQ6MXB4O3Bvc2l0aW9uOmFic29sdXRlfS5nYW50dF9ncmlkX2RhdGEgLmdhbnR0
			X3Jvdy5nYW50dF9zZWxlY3RlZCwuZ2FudHRfZ3JpZF9kYXRhIC5nYW50dF9yb3cub2RkLmdhbnR0
			X3NlbGVjdGVkLC5nYW50dF90YXNrX3Jvdy5nYW50dF9zZWxlY3RlZHtiYWNrZ3JvdW5kLWNvbG9y
			OiNmZmYzYTF9LmdhbnR0X3Rhc2tfcm93LmdhbnR0X3NlbGVjdGVkIC5nYW50dF90YXNrX2NlbGx7
			Ym9yZGVyLXJpZ2h0LWNvbG9yOiNmZmVjNmV9LmdhbnR0X3Rhc2tfbGluZS5nYW50dF9zZWxlY3Rl
			ZHtib3gtc2hhZG93OjAgMCA1cHggIzI5OWNiNH0uZ2FudHRfdGFza19saW5lLmdhbnR0X3Byb2pl
			Y3QuZ2FudHRfc2VsZWN0ZWR7Ym94LXNoYWRvdzowIDAgNXB4ICM0NmFkNTF9LmdhbnR0X3Rhc2tf
			bGluZS5nYW50dF9taWxlc3RvbmV7dmlzaWJpbGl0eTpoaWRkZW47YmFja2dyb3VuZC1jb2xvcjoj
			ZDMzZGFmO2JvcmRlcjowIHNvbGlkICM2MTE2NGY7Ym94LXNpemluZzpjb250ZW50LWJveDstbW96
			LWJveC1zaXppbmc6Y29udGVudC1ib3h9LmdhbnR0X3Rhc2tfbGluZS5nYW50dF9taWxlc3RvbmUg
			ZGl2e3Zpc2liaWxpdHk6dmlzaWJsZX0uZ2FudHRfdGFza19saW5lLmdhbnR0X21pbGVzdG9uZSAu
			Z2FudHRfdGFza19jb250ZW50e2JhY2tncm91bmQ6aW5oZXJpdDtib3JkZXI6aW5oZXJpdDtib3Jk
			ZXItd2lkdGg6MXB4O2JvcmRlci1yYWRpdXM6aW5oZXJpdDtib3gtc2l6aW5nOmJvcmRlci1ib3g7
			LW1vei1ib3gtc2l6aW5nOmJvcmRlci1ib3g7dHJhbnNmb3JtOnJvdGF0ZSg0NWRlZyl9LmdhbnR0
			X3Rhc2tfbGluZS5nYW50dF90YXNrX2lubGluZV9jb2xvcntib3JkZXItY29sb3I6Izk5OX0uZ2Fu
			dHRfdGFza19saW5lLmdhbnR0X3Rhc2tfaW5saW5lX2NvbG9yIC5nYW50dF90YXNrX3Byb2dyZXNz
			e2JhY2tncm91bmQtY29sb3I6IzM2MzYzNjtvcGFjaXR5Oi4yfS5nYW50dF90YXNrX2xpbmUuZ2Fu
			dHRfdGFza19pbmxpbmVfY29sb3IuZ2FudHRfcHJvamVjdC5nYW50dF9zZWxlY3RlZCwuZ2FudHRf
			dGFza19saW5lLmdhbnR0X3Rhc2tfaW5saW5lX2NvbG9yLmdhbnR0X3NlbGVjdGVke2JveC1zaGFk
			b3c6MCAwIDVweCAjOTk5fS5nYW50dF90YXNrX2xpbmsuZ2FudHRfbGlua19pbmxpbmVfY29sb3I6
			aG92ZXIgLmdhbnR0X2xpbmVfd3JhcHBlciBkaXZ7Ym94LXNoYWRvdzowIDAgNXB4IDAgIzk5OX0u
			Z2FudHRfY3JpdGljYWxfdGFza3tiYWNrZ3JvdW5kLWNvbG9yOiNlNjMwMzA7Ym9yZGVyLWNvbG9y
			OiM5ZDNhM2F9LmdhbnR0X2NyaXRpY2FsX3Rhc2sgLmdhbnR0X3Rhc2tfcHJvZ3Jlc3N7YmFja2dy
			b3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC40KX0uZ2FudHRfY3JpdGljYWxfbGluayAuZ2FudHRfbGlu
			ZV93cmFwcGVyPmRpdntiYWNrZ3JvdW5kLWNvbG9yOiNlNjMwMzB9LmdhbnR0X2NyaXRpY2FsX2xp
			bmsgLmdhbnR0X2xpbmtfYXJyb3d7Ym9yZGVyLWNvbG9yOiNlNjMwMzB9LmdhbnR0X2J0bl9zZXQ6
			Zm9jdXMsLmdhbnR0X2NlbGw6Zm9jdXMsLmdhbnR0X2dyaWRfaGVhZF9jZWxsOmZvY3VzLC5nYW50
			dF9wb3B1cF9idXR0b246Zm9jdXMsLmdhbnR0X3FpX2JpZ19pY29uOmZvY3VzLC5nYW50dF9yb3c6
			Zm9jdXN7Ym94LXNoYWRvdzppbnNldCAwIDAgMXB4IDFweCAjNGQ5MGZlfS5nYW50dF9zcGxpdF9w
			YXJlbnR7b3BhY2l0eTouMTtwb2ludGVyLWV2ZW50czpub25lfS5nYW50dF91bnNlbGVjdGFibGUs
			LmdhbnR0X3Vuc2VsZWN0YWJsZSBkaXZ7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNl
			ci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Oi1tb3otbm9uZX0uZ2FudHRfY2FsX2xpZ2h0
			ey13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjp0cmFuc3BhcmVudDtiYWNrZ3JvdW5kOiNmZmY7
			Ym9yZGVyLXJhZGl1czo2cHg7Zm9udC1mYW1pbHk6QXJpYWw7Zm9udC1zaXplOjEzcHg7Ym9yZGVy
			OjFweCBzb2xpZCAjY2VjZWNlO2NvbG9yOiM2YjZiNmI7Zm9udC1zaXplOjEycHg7cG9zaXRpb246
			YWJzb2x1dGU7ei1pbmRleDoxMDAwMTt3aWR0aDo1NTBweDtoZWlnaHQ6MjUwcHg7Ym94LXNoYWRv
			dzozcHggM3B4IDNweCByZ2JhKDAsMCwwLC4wNyl9LmdhbnR0X2NhbF9saWdodF93aWRle3dpZHRo
			OjY1MHB4fS5nYW50dF9jYWxfbGlnaHQgc2VsZWN0e2ZvbnQtZmFtaWx5OkFyaWFsO2JvcmRlcjox
			cHggc29saWQgI2NlY2VjZTtmb250LXNpemU6MTNweDtwYWRkaW5nOjJweDttYXJnaW46MH0uZ2Fu
			dHRfY2FsX2x0aXRsZXtwYWRkaW5nOjdweCAxMHB4O292ZXJmbG93OmhpZGRlbjstd2Via2l0LWJv
			cmRlci10b3AtbGVmdC1yYWRpdXM6NnB4Oy13ZWJraXQtYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1
			czowOy13ZWJraXQtYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NnB4Oy13ZWJraXQtYm9yZGVyLWJv
			dHRvbS1yaWdodC1yYWRpdXM6MDstbW96LWJvcmRlci1yYWRpdXMtdG9wbGVmdDo2cHg7LW1vei1i
			b3JkZXItcmFkaXVzLWJvdHRvbWxlZnQ6MDstbW96LWJvcmRlci1yYWRpdXMtdG9wcmlnaHQ6NnB4
			Oy1tb3otYm9yZGVyLXJhZGl1cy1ib3R0b21yaWdodDowO2JvcmRlci10b3AtbGVmdC1yYWRpdXM6
			NnB4O2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czo2
			cHg7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MH0uZ2FudHRfY2FsX2x0aXRsZSwuZ2FudHRf
			Y2FsX2x0aXRsZSBzcGFue3doaXRlLXNwYWNlOm5vd3JhcH0uZ2FudHRfY2FsX2xzZWN0aW9ue2Nv
			bG9yOiM3MjcyNzI7Zm9udC13ZWlnaHQ6NzAwO3BhZGRpbmc6MTJweCAwIDVweCAxMHB4fS5nYW50
			dF9jYWxfbHNlY3Rpb24gLmdhbnR0X2Z1bGxkYXl7ZmxvYXQ6cmlnaHQ7bWFyZ2luLXJpZ2h0OjVw
			eDtmb250LXNpemU6MTJweDtmb250LXdlaWdodDo0MDA7bGluZS1oZWlnaHQ6MjBweDt2ZXJ0aWNh
			bC1hbGlnbjp0b3A7Y3Vyc29yOnBvaW50ZXJ9LmdhbnR0X2NhbF9sc2VjdGlvbntmb250LXNpemU6
			MTNweH0uZ2FudHRfY2FsX2x0ZXh0e3BhZGRpbmc6MnB4IDEwcHg7b3ZlcmZsb3c6aGlkZGVufS5n
			YW50dF9jYWxfbHRleHQgdGV4dGFyZWF7b3ZlcmZsb3cteTphdXRvO292ZXJmbG93LXg6aGlkZGVu
			O2ZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtc2l6ZToxM3B4O2JveC1zaXppbmc6Ym9yZGVyLWJveDti
			b3JkZXI6MXB4IHNvbGlkICNjZWNlY2U7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJTtvdXRsaW5lOm5v
			bmUhaW1wb3J0YW50O3Jlc2l6ZTpub25lfS5nYW50dF9zZWN0aW9uX2NvbnN0cmFpbnQgW2RhdGEt
			Y29uc3RyYWludC10aW1lLXNlbGVjdF17bWFyZ2luLWxlZnQ6MjBweH0uZ2FudHRfdGltZXtmb250
			LXdlaWdodDo3MDB9LmdhbnR0X2NhbF9saWdodCAuZ2FudHRfdGl0bGV7cGFkZGluZy1sZWZ0OjEw
			cHh9LmdhbnR0X2NhbF9sYXJlYXtib3JkZXI6MXB4IHNvbGlkICNjZWNlY2U7Ym9yZGVyLWxlZnQ6
			bm9uZTtib3JkZXItcmlnaHQ6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7b3ZlcmZsb3c6aGlk
			ZGVuO2hlaWdodDoxcHh9LmdhbnR0X2J0bl9zZXR7bWFyZ2luOjEwcHggN3B4IDVweCAxMHB4O3Bh
			ZGRpbmc6NXB4IDE1cHggNXB4IDEwcHg7ZmxvYXQ6bGVmdDtib3JkZXItcmFkaXVzOjRweDtib3Jk
			ZXI6MCBzb2xpZCAjY2VjZWNlO2hlaWdodDozMnB4O2ZvbnQtd2VpZ2h0OjcwMDtiYWNrZ3JvdW5k
			OiNmZmY7Ym94LXNpemluZzpib3JkZXItYm94O2N1cnNvcjpwb2ludGVyfS5nYW50dF9oaWRkZW57
			ZGlzcGxheTpub25lfS5nYW50dF9idG5fc2V0IGRpdntmbG9hdDpsZWZ0O2ZvbnQtc2l6ZToxM3B4
			O2hlaWdodDoyMnB4O2xpbmUtaGVpZ2h0OjIycHg7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0
			O3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uZ2FudHRfc2F2ZV9idG57YmFja2dyb3VuZC1pbWFnZTp1
			cmwoZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFR
			Q0FZQUFBQWY4LzloQUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVj
			Y2xsUEFBQUF5SnBWRmgwV0UxTU9tTnZiUzVoWkc5aVpTNTRiWEFBQUFBQUFEdy9lSEJoWTJ0bGRD
			QmlaV2RwYmowaTc3dS9JaUJwWkQwaVZ6Vk5NRTF3UTJWb2FVaDZjbVZUZWs1VVkzcHJZemxrSWo4
			K0lEeDRPbmh0Y0cxbGRHRWdlRzFzYm5NNmVEMGlZV1J2WW1VNmJuTTZiV1YwWVM4aUlIZzZlRzF3
			ZEdzOUlrRmtiMkpsSUZoTlVDQkRiM0psSURVdU15MWpNREV4SURZMkxqRTBOVFkyTVN3Z01qQXhN
			aTh3TWk4d05pMHhORG8xTmpveU55QWdJQ0FnSUNBZ0lqNGdQSEprWmpwU1JFWWdlRzFzYm5NNmNt
			Um1QU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh4T1RrNUx6QXlMekl5TFhKa1ppMXplVzUwWVhn
			dGJuTWpJajRnUEhKa1pqcEVaWE5qY21sd2RHbHZiaUJ5WkdZNllXSnZkWFE5SWlJZ2VHMXNibk02
			ZUcxd1BTSm9kSFJ3T2k4dmJuTXVZV1J2WW1VdVkyOXRMM2hoY0M4eExqQXZJaUI0Yld4dWN6cDRi
			WEJOVFQwaWFIUjBjRG92TDI1ekxtRmtiMkpsTG1OdmJTOTRZWEF2TVM0d0wyMXRMeUlnZUcxc2Ju
			TTZjM1JTWldZOUltaDBkSEE2THk5dWN5NWhaRzlpWlM1amIyMHZlR0Z3THpFdU1DOXpWSGx3WlM5
			U1pYTnZkWEpqWlZKbFppTWlJSGh0Y0RwRGNtVmhkRzl5Vkc5dmJEMGlRV1J2WW1VZ1VHaHZkRzl6
			YUc5d0lFTlROaUFvVjJsdVpHOTNjeWtpSUhodGNFMU5Pa2x1YzNSaGJtTmxTVVE5SW5odGNDNXBh
			V1E2TVRrMU9VVTVSREZETXpBME1URkZNa0V4TVVaQlFUZEROREF6T1VFNVJqTWlJSGh0Y0UxTk9r
			UnZZM1Z0Wlc1MFNVUTlJbmh0Y0M1a2FXUTZNVGsxT1VVNVJESkRNekEwTVRGRk1rRXhNVVpCUVRk
			RE5EQXpPVUU1UmpNaVBpQThlRzF3VFUwNlJHVnlhWFpsWkVaeWIyMGdjM1JTWldZNmFXNXpkR0Z1
			WTJWSlJEMGllRzF3TG1scFpEb3hPVFU1UlRsRFJrTXpNRFF4TVVVeVFURXhSa0ZCTjBNME1ETTVR
			VGxHTXlJZ2MzUlNaV1k2Wkc5amRXMWxiblJKUkQwaWVHMXdMbVJwWkRveE9UVTVSVGxFTUVNek1E
			UXhNVVV5UVRFeFJrRkJOME0wTURNNVFUbEdNeUl2UGlBOEwzSmtaanBFWlhOamNtbHdkR2x2Ymo0
			Z1BDOXlaR1k2VWtSR1BpQThMM2c2ZUcxd2JXVjBZVDRnUEQ5NGNHRmphMlYwSUdWdVpEMGljaUkv
			UGpEcm9YWUFBQUVYU1VSQlZIamFZdnovL3o4REpZQ1JVZ1BJQVV4QWJBbkVIaUFITUlCY1FDd0dh
			UllYRjNlNmV2WHFvZmZ2MzkvZHYzOC9DeW1hR1NVa0pCenYzTGx6Q3NqLy8vZnYzd2RBaWhra0lR
			bkV2a0FzaFU4ekx5K3Y3YTFidDA2QU5QLzc5Kzg3a0RJQXk1MDVjeWJxMDZkUHIzcDdlenV3R1FM
			VGZPUEdqV1AvRVNBWkxnOGtQS0JPK2cwMVJCSk5zeld5WnFDNnVTZ1dnSWcvZi80c2h4blMyZG5a
			QmpNRXFOa1NGR0JJbWk4Q0tUWU1BNEJZQ0dqSWN6UkRIQzVkdW5RUVNmTjdJS1dJNFVVa2pqZE1N
			ZEN3bnc4ZVBMandIeFY0WXcxZ1pBNVE0N3ovMkVFTHpoaENFK0FCR3ZJUVdTZVF2d2NVMzhRYUFN
			TDJ3SGorQy9YM015QWxpamVCNFpCb0JPSVBRR3hKS0lWU25Cc0JBZ3dBQmRkQmNsV2ZjWlVBQUFB
			QVNVVk9SSzVDWUlJPSk7bWFyZ2luLXRvcDoycHg7d2lkdGg6MjFweH0uZ2FudHRfY2FuY2VsX2J0
			bnttYXJnaW4tdG9wOjJweDtiYWNrZ3JvdW5kLWltYWdlOnVybChkYXRhOmltYWdlL3BuZztiYXNl
			NjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBR1hSRldI
			UlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQXlKcFZGaDBXRTFNT21O
			dmJTNWhaRzlpWlM1NGJYQUFBQUFBQUR3L2VIQmhZMnRsZENCaVpXZHBiajBpNzd1L0lpQnBaRDBp
			VnpWTk1FMXdRMlZvYVVoNmNtVlRlazVVWTNwcll6bGtJajgrSUR4NE9uaHRjRzFsZEdFZ2VHMXNi
			bk02ZUQwaVlXUnZZbVU2Ym5NNmJXVjBZUzhpSUhnNmVHMXdkR3M5SWtGa2IySmxJRmhOVUNCRGIz
			SmxJRFV1TXkxak1ERXhJRFkyTGpFME5UWTJNU3dnTWpBeE1pOHdNaTh3TmkweE5EbzFOam95TnlB
			Z0lDQWdJQ0FnSWo0Z1BISmtaanBTUkVZZ2VHMXNibk02Y21SbVBTSm9kSFJ3T2k4dmQzZDNMbmN6
			TG05eVp5OHhPVGs1THpBeUx6SXlMWEprWmkxemVXNTBZWGd0Ym5NaklqNGdQSEprWmpwRVpYTmpj
			bWx3ZEdsdmJpQnlaR1k2WVdKdmRYUTlJaUlnZUcxc2JuTTZlRzF3UFNKb2RIUndPaTh2Ym5NdVlX
			UnZZbVV1WTI5dEwzaGhjQzh4TGpBdklpQjRiV3h1Y3pwNGJYQk5UVDBpYUhSMGNEb3ZMMjV6TG1G
			a2IySmxMbU52YlM5NFlYQXZNUzR3TDIxdEx5SWdlRzFzYm5NNmMzUlNaV1k5SW1oMGRIQTZMeTl1
			Y3k1aFpHOWlaUzVqYjIwdmVHRndMekV1TUM5elZIbHdaUzlTWlhOdmRYSmpaVkpsWmlNaUlIaHRj
			RHBEY21WaGRHOXlWRzl2YkQwaVFXUnZZbVVnVUdodmRHOXphRzl3SUVOVE5pQW9WMmx1Wkc5M2N5
			a2lJSGh0Y0UxTk9rbHVjM1JoYm1ObFNVUTlJbmh0Y0M1cGFXUTZNRGt6TURBM016bERNekEwTVRG
			Rk1qZzJRVFZGTXpGRVF6Z3dSa0pFUkRZaUlIaHRjRTFOT2tSdlkzVnRaVzUwU1VROUluaHRjQzVr
			YVdRNk1Ea3pNREEzTTBGRE16QTBNVEZGTWpnMlFUVkZNekZFUXpnd1JrSkVSRFlpUGlBOGVHMXdU
			VTA2UkdWeWFYWmxaRVp5YjIwZ2MzUlNaV1k2YVc1emRHRnVZMlZKUkQwaWVHMXdMbWxwWkRvd09U
			TXdNRGN6TjBNek1EUXhNVVV5T0RaQk5VVXpNVVJET0RCR1FrUkVOaUlnYzNSU1pXWTZaRzlqZFcx
			bGJuUkpSRDBpZUcxd0xtUnBaRG93T1RNd01EY3pPRU16TURReE1VVXlPRFpCTlVVek1VUkRPREJH
			UWtSRU5pSXZQaUE4TDNKa1pqcEVaWE5qY21sd2RHbHZiajRnUEM5eVpHWTZVa1JHUGlBOEwzZzZl
			RzF3YldWMFlUNGdQRDk0Y0dGamEyVjBJR1Z1WkQwaWNpSS9QbVl1WU9VQUFBRWRTVVJCVkhqYVl2
			ei8vejhESllBRlhXRGx5cFU4UUtvSWlEMkEyQXdxZkFxSWR3QnhYM2g0K0JkazlZeklMZ0JxdGdk
			Uzg0RllFWWVGOTRFNEVXaklRWmdBRTVMbVFDQjFBS29aWktNUEVBdEFNWWg5R1NwM0FLaldEOFVG
			UUFFaElQc2hFSU9jM3dIRU5VQmIvcUo1N1N5UU1vSnlQd0t4RWxETk8xZ1lGRUUxN3dNS1ZtSUps
			ek5RemVlZ3JqYUE2cW1CZWNFYlN2ZmgwR3dNeEdlQmhvUG9lbVE5TUFPMGtFSWJsMllUcVBBRktL
			MkliTUIzQWphYllJa1JabVFEN2tOcE15STBHMFBwTzhnR2JJVUZKajdOUURrMklOV0lySWNKS2ZC
			QUtjd0pxdmtjRHMwVGdGZ1hHbzE5S0NrUm1wRFdRZFdERWswTlVvQ0JvcTBGcWhrRS9JRVdiS0pL
			VW1aRXo0M1F6RlNLSXpOMTQ4MU01QUNBQUFNQWxmbC9sQ3dScGFnQUFBQUFTVVZPUks1Q1lJST0p
			O3dpZHRoOjIwcHh9LmdhbnR0X2RlbGV0ZV9idG57YmFja2dyb3VuZC1pbWFnZTp1cmwoZGF0YTpp
			bWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4
			LzloQUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUF5
			SnBWRmgwV0UxTU9tTnZiUzVoWkc5aVpTNTRiWEFBQUFBQUFEdy9lSEJoWTJ0bGRDQmlaV2RwYmow
			aTc3dS9JaUJwWkQwaVZ6Vk5NRTF3UTJWb2FVaDZjbVZUZWs1VVkzcHJZemxrSWo4K0lEeDRPbmh0
			Y0cxbGRHRWdlRzFzYm5NNmVEMGlZV1J2WW1VNmJuTTZiV1YwWVM4aUlIZzZlRzF3ZEdzOUlrRmti
			MkpsSUZoTlVDQkRiM0psSURVdU15MWpNREV4SURZMkxqRTBOVFkyTVN3Z01qQXhNaTh3TWk4d05p
			MHhORG8xTmpveU55QWdJQ0FnSUNBZ0lqNGdQSEprWmpwU1JFWWdlRzFzYm5NNmNtUm1QU0pvZEhS
			d09pOHZkM2QzTG5jekxtOXlaeTh4T1RrNUx6QXlMekl5TFhKa1ppMXplVzUwWVhndGJuTWpJajRn
			UEhKa1pqcEVaWE5qY21sd2RHbHZiaUJ5WkdZNllXSnZkWFE5SWlJZ2VHMXNibk02ZUcxd1BTSm9k
			SFJ3T2k4dmJuTXVZV1J2WW1VdVkyOXRMM2hoY0M4eExqQXZJaUI0Yld4dWN6cDRiWEJOVFQwaWFI
			UjBjRG92TDI1ekxtRmtiMkpsTG1OdmJTOTRZWEF2TVM0d0wyMXRMeUlnZUcxc2JuTTZjM1JTWldZ
			OUltaDBkSEE2THk5dWN5NWhaRzlpWlM1amIyMHZlR0Z3THpFdU1DOXpWSGx3WlM5U1pYTnZkWEpq
			WlZKbFppTWlJSGh0Y0RwRGNtVmhkRzl5Vkc5dmJEMGlRV1J2WW1VZ1VHaHZkRzl6YUc5d0lFTlRO
			aUFvVjJsdVpHOTNjeWtpSUhodGNFMU5Pa2x1YzNSaGJtTmxTVVE5SW5odGNDNXBhV1E2TWpGRU56
			STNOVU5ETXpBME1URkZNamhCTmpKR1FUYzNNVUl5UXpZek5FWWlJSGh0Y0UxTk9rUnZZM1Z0Wlc1
			MFNVUTlJbmh0Y0M1a2FXUTZNakZFTnpJM05VUkRNekEwTVRGRk1qaEJOakpHUVRjM01VSXlRell6
			TkVZaVBpQThlRzF3VFUwNlJHVnlhWFpsWkVaeWIyMGdjM1JTWldZNmFXNXpkR0Z1WTJWSlJEMGll
			RzF3TG1scFpEb3lNVVEzTWpjMVFVTXpNRFF4TVVVeU9FRTJNa1pCTnpjeFFqSkROak0wUmlJZ2Mz
			UlNaV1k2Wkc5amRXMWxiblJKUkQwaWVHMXdMbVJwWkRveU1VUTNNamMxUWtNek1EUXhNVVV5T0VF
			Mk1rWkJOemN4UWpKRE5qTTBSaUl2UGlBOEwzSmtaanBFWlhOamNtbHdkR2x2Ymo0Z1BDOXlaR1k2
			VWtSR1BpQThMM2c2ZUcxd2JXVjBZVDRnUEQ5NGNHRmphMlYwSUdWdVpEMGljaUkvUG1VRDBnQUFB
			QUJ2U1VSQlZIamFZdnovL3o4REl5TWpBeFlRaWNSZWppNEowb2ZLUU5QOEh3bWdHUWJYQjhJc1dH
			d0RTU3dEdWlvS2pZOXVCdGhWakZBWFlIVUdBUUEya1ltQlVvQVVCcEdrMExBd2dCdndIK1lYNG1r
			d3B0Z0xvd1lNUmdPSVRVeVlLUkZJTi93bkRqUWdKeVNBQUFNQXByeUt6TDh3amZVQUFBQUFTVVZP
			Uks1Q1lJST0pO21hcmdpbi10b3A6MnB4O3dpZHRoOjIwcHh9LmdhbnR0X2NhbF9jb3Zlcnt3aWR0
			aDoxMDAlO2hlaWdodDoxMDAlO3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTAwMDA7dG9wOjA7
			bGVmdDowO2JhY2tncm91bmQtY29sb3I6IzAwMDtvcGFjaXR5Oi4xO2ZpbHRlcjpwcm9naWQ6RFhJ
			bWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQWxwaGEob3BhY2l0eT0xMCl9LmdhbnR0X2N1c3RvbV9i
			dXR0b257cGFkZGluZzowIDNweDtmb250LWZhbWlseTpBcmlhbDtmb250LXNpemU6MTNweDtmb250
			LXdlaWdodDo0MDA7bWFyZ2luLXJpZ2h0OjEwcHg7bWFyZ2luLXRvcDotNXB4O2N1cnNvcjpwb2lu
			dGVyO2Zsb2F0OnJpZ2h0O2hlaWdodDoyMXB4O3dpZHRoOjkwcHg7Ym9yZGVyOjFweCBzb2xpZCAj
			Y2VjZWNlO3RleHQtYWxpZ246Y2VudGVyO2JvcmRlci1yYWRpdXM6NHB4fS5nYW50dF9jdXN0b21f
			YnV0dG9uIGRpdntjdXJzb3I6cG9pbnRlcjtmbG9hdDpub25lO2hlaWdodDoyMXB4O2xpbmUtaGVp
			Z2h0OjIxcHg7dmVydGljYWwtYWxpZ246bWlkZGxlfS5nYW50dF9jdXN0b21fYnV0dG9uIGRpdjpm
			aXJzdC1jaGlsZHtkaXNwbGF5Om5vbmV9LmdhbnR0X2NhbF9saWdodF93aWRle3dpZHRoOjU4MHB4
			O3BhZGRpbmc6MnB4IDRweH0uZ2FudHRfY2FsX2xpZ2h0X3dpZGUgLmdhbnR0X2NhbF9sYXJlYXti
			b3gtc2l6aW5nOmJvcmRlci1ib3g7Ym9yZGVyOjFweCBzb2xpZCAjY2VjZWNlfS5nYW50dF9jYWxf
			bGlnaHRfd2lkZSAuZ2FudHRfY2FsX2xzZWN0aW9ue2JvcmRlcjowO2Zsb2F0OmxlZnQ7dGV4dC1h
			bGlnbjpyaWdodDt3aWR0aDo4MHB4O2hlaWdodDoyMHB4O3BhZGRpbmc6NXB4IDEwcHggMCAwfS5n
			YW50dF9jYWxfbGlnaHRfd2lkZSAuZ2FudHRfd3JhcF9zZWN0aW9ue3Bvc2l0aW9uOnJlbGF0aXZl
			O3BhZGRpbmc6MTBweCAwO292ZXJmbG93OmhpZGRlbjtib3JkZXItYm90dG9tOjFweCBzb2xpZCAj
			ZWJlYmVifS5nYW50dF9jYWxfbGlnaHRfd2lkZSAuZ2FudHRfc2VjdGlvbl90aW1le292ZXJmbG93
			OmhpZGRlbjtwYWRkaW5nLXRvcDoycHghaW1wb3J0YW50O3BhZGRpbmctcmlnaHQ6MDtoZWlnaHQ6
			MjBweCFpbXBvcnRhbnR9LmdhbnR0X2NhbF9saWdodF93aWRlIC5nYW50dF9jYWxfbHRleHR7cGFk
			ZGluZy1yaWdodDowfS5nYW50dF9jYWxfbGlnaHRfd2lkZSAuZ2FudHRfY2FsX2xhcmVhe3BhZGRp
			bmc6MCAxMHB4O3dpZHRoOjEwMCV9LmdhbnR0X2NhbF9saWdodF93aWRlIC5nYW50dF9zZWN0aW9u
			X3RpbWV7YmFja2dyb3VuZDp0cmFuc3BhcmVudH0uZ2FudHRfY2FsX2xpZ2h0X3dpZGUgLmdhbnR0
			X2NhbF9jaGVja2JveCBsYWJlbHtwYWRkaW5nLWxlZnQ6MH0uZ2FudHRfY2FsX2xpZ2h0X3dpZGUg
			LmdhbnR0X2NhbF9sc2VjdGlvbiAuZ2FudHRfZnVsbGRheXtmbG9hdDpub25lO21hcmdpbi1yaWdo
			dDowO2ZvbnQtd2VpZ2h0OjcwMDtjdXJzb3I6cG9pbnRlcn0uZ2FudHRfY2FsX2xpZ2h0X3dpZGUg
			LmdhbnR0X2N1c3RvbV9idXR0b257cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDttYXJn
			aW4tdG9wOjJweH0uZ2FudHRfY2FsX2xpZ2h0X3dpZGUgLmdhbnR0X3JlcGVhdF9yaWdodHttYXJn
			aW4tcmlnaHQ6NTVweH0uZ2FudHRfY2FsX2xpZ2h0X3dpZGUuZ2FudHRfY2FsX2xpZ2h0X2Z1bGx7
			d2lkdGg6NzM4cHh9LmdhbnR0X2NhbF93aWRlX2NoZWNrYm94IGlucHV0e21hcmdpbi10b3A6OHB4
			O21hcmdpbi1sZWZ0OjE0cHh9LmdhbnR0X2NhbF9saWdodCBpbnB1dHtmb250LXNpemU6MTNweH0u
			Z2FudHRfc2VjdGlvbl90aW1le2JhY2tncm91bmQtY29sb3I6I2ZmZjt3aGl0ZS1zcGFjZTpub3dy
			YXA7cGFkZGluZzoycHggMTBweCA1cHg7cGFkZGluZy10b3A6MnB4IWltcG9ydGFudH0uZ2FudHRf
			c2VjdGlvbl90aW1lIC5nYW50dF90aW1lX3NlbGVjdHN7ZmxvYXQ6bGVmdDtoZWlnaHQ6MjVweH0u
			Z2FudHRfc2VjdGlvbl90aW1lIC5nYW50dF90aW1lX3NlbGVjdHMgc2VsZWN0e2hlaWdodDoyM3B4
			O3BhZGRpbmc6MnB4O2JvcmRlcjoxcHggc29saWQgI2NlY2VjZX0uZ2FudHRfZHVyYXRpb257d2lk
			dGg6MTAwcHg7aGVpZ2h0OjIzcHg7ZmxvYXQ6bGVmdDt3aGl0ZS1zcGFjZTpub3dyYXA7bWFyZ2lu
			LWxlZnQ6MjBweDtsaW5lLWhlaWdodDoyM3B4fS5nYW50dF9kdXJhdGlvbiAuZ2FudHRfZHVyYXRp
			b25fZGVjLC5nYW50dF9kdXJhdGlvbiAuZ2FudHRfZHVyYXRpb25faW5jLC5nYW50dF9kdXJhdGlv
			biAuZ2FudHRfZHVyYXRpb25fdmFsdWV7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtYWxpZ246
			Y2VudGVyO3ZlcnRpY2FsLWFsaWduOnRvcDtoZWlnaHQ6MTAwJTtib3JkZXI6MXB4IHNvbGlkICNj
			ZWNlY2V9LmdhbnR0X2R1cmF0aW9uIC5nYW50dF9kdXJhdGlvbl92YWx1ZXt3aWR0aDo0MHB4O3Bh
			ZGRpbmc6M3B4IDRweDtib3JkZXItbGVmdC13aWR0aDowO2JvcmRlci1yaWdodC13aWR0aDowfS5n
			YW50dF9kdXJhdGlvbiAuZ2FudHRfZHVyYXRpb25fZGVjLC5nYW50dF9kdXJhdGlvbiAuZ2FudHRf
			ZHVyYXRpb25faW5je3dpZHRoOjIwcHg7cGFkZGluZzoxcHg7cGFkZGluZy1ib3R0b206MXB4O2Jh
			Y2tncm91bmQ6I2ZmZn0uZ2FudHRfZHVyYXRpb24gLmdhbnR0X2R1cmF0aW9uX2RlY3stbW96LWJv
			cmRlci10b3AtbGVmdC1yYWRpdXM6NHB4Oy1tb3otYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czo0
			cHg7LXdlYmtpdC1ib3JkZXItdG9wLWxlZnQtcmFkaXVzOjRweDstd2Via2l0LWJvcmRlci1ib3R0
			b20tbGVmdC1yYWRpdXM6NHB4O2JvcmRlci10b3AtbGVmdC1yYWRpdXM6NHB4O2JvcmRlci1ib3R0
			b20tbGVmdC1yYWRpdXM6NHB4fS5nYW50dF9kdXJhdGlvbiAuZ2FudHRfZHVyYXRpb25faW5je21h
			cmdpbi1yaWdodDo0cHg7LW1vei1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czo0cHg7LW1vei1ib3Jk
			ZXItYm90dG9tLXJpZ2h0LXJhZGl1czo0cHg7LXdlYmtpdC1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1
			czo0cHg7LXdlYmtpdC1ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czo0cHg7Ym9yZGVyLXRvcC1y
			aWdodC1yYWRpdXM6NHB4O2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjRweH0uZ2FudHRfcmVz
			b3VyY2Vze21heC1oZWlnaHQ6MTUwcHg7aGVpZ2h0OmF1dG87b3ZlcmZsb3cteTphdXRvfS5nYW50
			dF9yZXNvdXJjZV9yb3d7ZGlzcGxheTpibG9jaztwYWRkaW5nOjEwcHggMDtib3JkZXItYm90dG9t
			OjFweCBzb2xpZCAjZWJlYmViO2N1cnNvcjpwb2ludGVyfS5nYW50dF9yZXNvdXJjZV9yb3cgaW5w
			dXRbdHlwZT1jaGVja2JveF06bm90KDpjaGVja2VkKSwuZ2FudHRfcmVzb3VyY2Vfcm93IGlucHV0
			W3R5cGU9Y2hlY2tib3hdOm5vdCg6Y2hlY2tlZCl+ZGl2e29wYWNpdHk6LjV9LmdhbnR0X3Jlc291
			cmNlX3RvZ2dsZXt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9LmdhbnR0X3Jlc291cmNlc19maWx0ZXIg
			LmdhbnR0X3Jlc291cmNlc19maWx0ZXJfaW5wdXR7cGFkZGluZzoxcHggMnB4O2JveC1zaXppbmc6
			Ym9yZGVyLWJveH0uZ2FudHRfcmVzb3VyY2VzX2ZpbHRlciAuc3dpdGNoX3Vuc2V0dGVke3ZlcnRp
			Y2FsLWFsaWduOm1pZGRsZX0uZ2FudHRfcmVzb3VyY2VfY2VsbHtkaXNwbGF5OmlubGluZS1ibG9j
			a30uZ2FudHRfcmVzb3VyY2VfY2VsbC5nYW50dF9yZXNvdXJjZV9jZWxsX2NoZWNrYm94e3dpZHRo
			OjI0cHg7bWF4LXdpZHRoOjI0cHg7bWluLXdpZHRoOjI0cHg7dmVydGljYWwtYWxpZ246bWlkZGxl
			fS5nYW50dF9yZXNvdXJjZV9jZWxsLmdhbnR0X3Jlc291cmNlX2NlbGxfbGFiZWx7d2lkdGg6NDAl
			O21heC13aWR0aDo0MCU7dmVydGljYWwtYWxpZ246bWlkZGxlfS5nYW50dF9yZXNvdXJjZV9jZWxs
			LmdhbnR0X3Jlc291cmNlX2NlbGxfdmFsdWV7d2lkdGg6MzAlO21heC13aWR0aDozMCU7dmVydGlj
			YWwtYWxpZ246bWlkZGxlfS5nYW50dF9yZXNvdXJjZV9jZWxsLmdhbnR0X3Jlc291cmNlX2NlbGxf
			dmFsdWUgaW5wdXQsLmdhbnR0X3Jlc291cmNlX2NlbGwuZ2FudHRfcmVzb3VyY2VfY2VsbF92YWx1
			ZSBzZWxlY3R7d2lkdGg6ODAlO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtwYWRkaW5nOjFweCAycHg7
			Ym94LXNpemluZzpib3JkZXItYm94fS5nYW50dF9yZXNvdXJjZV9jZWxsLmdhbnR0X3Jlc291cmNl
			X2NlbGxfdW5pdHt3aWR0aDoxMCU7bWF4LXdpZHRoOjEwJTt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9
			LmdhbnR0X3Jlc291cmNlX2Vhcmx5X3ZhbHVle29wYWNpdHk6Ljg7Zm9udC1zaXplOi45ZW19Lmdh
			bnR0X2NhbF9xdWlja19pbmZve2JvcmRlcjoxcHggc29saWQgI2NlY2VjZTtib3JkZXItcmFkaXVz
			OjZweDtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjMwMDtib3gtc2hhZG93OjNweCAzcHggM3B4
			IHJnYmEoMCwwLDAsLjA3KTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7d2lkdGg6MzAwcHg7dHJhbnNp
			dGlvbjpsZWZ0IC41cyBlYXNlLHJpZ2h0IC41czstbW96LXRyYW5zaXRpb246bGVmdCAuNXMgZWFz
			ZSxyaWdodCAuNXM7LXdlYmtpdC10cmFuc2l0aW9uOmxlZnQgLjVzIGVhc2UscmlnaHQgLjVzOy1v
			LXRyYW5zaXRpb246bGVmdCAuNXMgZWFzZSxyaWdodCAuNXN9LmdhbnR0X25vX2FuaW1hdGV7dHJh
			bnNpdGlvbjpub25lOy1tb3otdHJhbnNpdGlvbjpub25lOy13ZWJraXQtdHJhbnNpdGlvbjpub25l
			Oy1vLXRyYW5zaXRpb246bm9uZX0uZ2FudHRfY2FsX3F1aWNrX2luZm8uZ2FudHRfcWlfbGVmdCAu
			Z2FudHRfcWlfYmlnX2ljb257ZmxvYXQ6cmlnaHR9LmdhbnR0X2NhbF9xaV90aXRsZXstd2Via2l0
			LWJvcmRlci10b3AtbGVmdC1yYWRpdXM6NnB4Oy13ZWJraXQtYm9yZGVyLWJvdHRvbS1sZWZ0LXJh
			ZGl1czowOy13ZWJraXQtYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6NnB4Oy13ZWJraXQtYm9yZGVy
			LWJvdHRvbS1yaWdodC1yYWRpdXM6MDstbW96LWJvcmRlci1yYWRpdXMtdG9wbGVmdDo2cHg7LW1v
			ei1ib3JkZXItcmFkaXVzLWJvdHRvbWxlZnQ6MDstbW96LWJvcmRlci1yYWRpdXMtdG9wcmlnaHQ6
			NnB4Oy1tb3otYm9yZGVyLXJhZGl1cy1ib3R0b21yaWdodDowO2JvcmRlci10b3AtbGVmdC1yYWRp
			dXM6NnB4O2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1
			czo2cHg7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MDtwYWRkaW5nOjVweCAwIDhweCAxMnB4
			O2NvbG9yOiM0NTQ1NDU7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlci1ib3R0b206MXB4IHNv
			bGlkICNjZWNlY2V9LmdhbnR0X2NhbF9xaV90ZGF0ZXtmb250LXNpemU6MTRweDtmb250LXdlaWdo
			dDo3MDB9LmdhbnR0X2NhbF9xaV90Y29udGVudHtmb250LXNpemU6MTNweH0uZ2FudHRfY2FsX3Fp
			X2NvbnRlbnR7cGFkZGluZzoxNnB4IDhweDtmb250LXNpemU6MTNweDtjb2xvcjojNDU0NTQ1O292
			ZXJmbG93OmhpZGRlbn0uZ2FudHRfY2FsX3FpX2NvbnRyb2xzey13ZWJraXQtYm9yZGVyLXRvcC1s
			ZWZ0LXJhZGl1czowOy13ZWJraXQtYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czo2cHg7LXdlYmtp
			dC1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowOy13ZWJraXQtYm9yZGVyLWJvdHRvbS1yaWdodC1y
			YWRpdXM6NnB4Oy1tb3otYm9yZGVyLXJhZGl1cy10b3BsZWZ0OjA7LW1vei1ib3JkZXItcmFkaXVz
			LWJvdHRvbWxlZnQ6NnB4Oy1tb3otYm9yZGVyLXJhZGl1cy10b3ByaWdodDowOy1tb3otYm9yZGVy
			LXJhZGl1cy1ib3R0b21yaWdodDo2cHg7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci1i
			b3R0b20tbGVmdC1yYWRpdXM6NnB4O2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjA7Ym9yZGVyLWJv
			dHRvbS1yaWdodC1yYWRpdXM6NnB4O3BhZGRpbmctbGVmdDo3cHh9LmdhbnR0X2NhbF9xaV9jb250
			cm9scyAuZ2FudHRfbWVudV9pY29ue21hcmdpbi10b3A6NnB4O2JhY2tncm91bmQtcmVwZWF0Om5v
			LXJlcGVhdH0uZ2FudHRfY2FsX3FpX2NvbnRyb2xzIC5nYW50dF9tZW51X2ljb24uaWNvbl9lZGl0
			e3dpZHRoOjIwcHg7YmFja2dyb3VuZC1pbWFnZTp1cmwoZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlW
			Qk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCUUFBQUFVQ0FZQUFBQ05pUjBOQUFBQUJtSkxSMFFBL3dE
			L0FQK2d2YWVUQUFBQUNYQklXWE1BQUE3RUFBQU94QUdWS3c0YkFBQUFCM1JKVFVVSDNRWUZDakk1
			WlFqNWJBQUFBRk5KUkVGVU9NdnQwekVPQUNBSUEwRGt3VHltSDhiSlRSVEtaR0pYeWFXRUtQS1RD
			UUFINExzMzdjSXRjRFV6c3hITkRMWk5oQ3E3R3Qxd2g5RXJWN0VqeUdBaHlHTHBobG5zQ2xXdVMz
			MnJuMGN6QVYrdk5Hck0vTEJ0QUFBQUFFbEZUa1N1UW1DQyl9LmdhbnR0X2NhbF9xaV9jb250cm9s
			cyAuZ2FudHRfbWVudV9pY29uLmljb25fZGVsZXRle3dpZHRoOjIwcHg7YmFja2dyb3VuZC1pbWFn
			ZTp1cmwoZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFB
			QUFRQ0FZQUFBQWY4LzloQUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlX
			UjVjY2xsUEFBQUF5SnBWRmgwV0UxTU9tTnZiUzVoWkc5aVpTNTRiWEFBQUFBQUFEdy9lSEJoWTJ0
			bGRDQmlaV2RwYmowaTc3dS9JaUJwWkQwaVZ6Vk5NRTF3UTJWb2FVaDZjbVZUZWs1VVkzcHJZemxr
			SWo4K0lEeDRPbmh0Y0cxbGRHRWdlRzFzYm5NNmVEMGlZV1J2WW1VNmJuTTZiV1YwWVM4aUlIZzZl
			RzF3ZEdzOUlrRmtiMkpsSUZoTlVDQkRiM0psSURVdU15MWpNREV4SURZMkxqRTBOVFkyTVN3Z01q
			QXhNaTh3TWk4d05pMHhORG8xTmpveU55QWdJQ0FnSUNBZ0lqNGdQSEprWmpwU1JFWWdlRzFzYm5N
			NmNtUm1QU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh4T1RrNUx6QXlMekl5TFhKa1ppMXplVzUw
			WVhndGJuTWpJajRnUEhKa1pqcEVaWE5qY21sd2RHbHZiaUJ5WkdZNllXSnZkWFE5SWlJZ2VHMXNi
			bk02ZUcxd1BTSm9kSFJ3T2k4dmJuTXVZV1J2WW1VdVkyOXRMM2hoY0M4eExqQXZJaUI0Yld4dWN6
			cDRiWEJOVFQwaWFIUjBjRG92TDI1ekxtRmtiMkpsTG1OdmJTOTRZWEF2TVM0d0wyMXRMeUlnZUcx
			c2JuTTZjM1JTWldZOUltaDBkSEE2THk5dWN5NWhaRzlpWlM1amIyMHZlR0Z3THpFdU1DOXpWSGx3
			WlM5U1pYTnZkWEpqWlZKbFppTWlJSGh0Y0RwRGNtVmhkRzl5Vkc5dmJEMGlRV1J2WW1VZ1VHaHZk
			Rzl6YUc5d0lFTlROaUFvVjJsdVpHOTNjeWtpSUhodGNFMU5Pa2x1YzNSaGJtTmxTVVE5SW5odGND
			NXBhV1E2TWpGRU56STNOVU5ETXpBME1URkZNamhCTmpKR1FUYzNNVUl5UXpZek5FWWlJSGh0Y0Ux
			Tk9rUnZZM1Z0Wlc1MFNVUTlJbmh0Y0M1a2FXUTZNakZFTnpJM05VUkRNekEwTVRGRk1qaEJOakpH
			UVRjM01VSXlRell6TkVZaVBpQThlRzF3VFUwNlJHVnlhWFpsWkVaeWIyMGdjM1JTWldZNmFXNXpk
			R0Z1WTJWSlJEMGllRzF3TG1scFpEb3lNVVEzTWpjMVFVTXpNRFF4TVVVeU9FRTJNa1pCTnpjeFFq
			SkROak0wUmlJZ2MzUlNaV1k2Wkc5amRXMWxiblJKUkQwaWVHMXdMbVJwWkRveU1VUTNNamMxUWtN
			ek1EUXhNVVV5T0VFMk1rWkJOemN4UWpKRE5qTTBSaUl2UGlBOEwzSmtaanBFWlhOamNtbHdkR2x2
			Ymo0Z1BDOXlaR1k2VWtSR1BpQThMM2c2ZUcxd2JXVjBZVDRnUEQ5NGNHRmphMlYwSUdWdVpEMGlj
			aUkvUG1VRDBnQUFBQUJ2U1VSQlZIamFZdnovL3o4REl5TWpBeFlRaWNSZWppNEowb2ZLUU5QOEh3
			bWdHUWJYQjhJc1dHd0RTU3dEdWlvS2pZOXVCdGhWakZBWFlIVUdBUUEya1ltQlVvQVVCcEdrMExB
			d2dCdndIK1lYNG1rd3B0Z0xvd1lNUmdPSVRVeVlLUkZJTi93bkRqUWdKeVNBQUFNQXByeUt6TDh3
			amZVQUFBQUFTVVZPUks1Q1lJST0pfS5nYW50dF9xaV9iaWdfaWNvbntmb250LXNpemU6MTNweDti
			b3JkZXItcmFkaXVzOjRweDtmb250LXdlaWdodDo3MDA7YmFja2dyb3VuZDojZmZmO21hcmdpbjo1
			cHggOXB4IDhweCAwO21pbi13aWR0aDo2MHB4O2xpbmUtaGVpZ2h0OjMycHg7dmVydGljYWwtYWxp
			Z246bWlkZGxlO3BhZGRpbmc6MCAxMHB4IDAgNXB4O2N1cnNvcjpwb2ludGVyO2JvcmRlcjoxcHgg
			c29saWQgI2NlY2VjZX0uZ2FudHRfY2FsX3FpX2NvbnRyb2xzIGRpdntmbG9hdDpsZWZ0O2hlaWdo
			dDozMnB4O3RleHQtYWxpZ246Y2VudGVyO2xpbmUtaGVpZ2h0OjMycHh9LmdhbnR0X3Rvb2x0aXB7
			cGFkZGluZzoxMHB4O3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6NTA7d2hpdGUtc3BhY2U6bm93
			cmFwfS5nYW50dF9yZXNvdXJjZV9tYXJrZXJ7cG9zaXRpb246YWJzb2x1dGU7dGV4dC1hbGlnbjpj
			ZW50ZXI7Zm9udC1zaXplOjE0cHg7Y29sb3I6I2ZmZn0uZ2FudHRfcmVzb3VyY2VfbWFya2VyX29r
			e2JhY2tncm91bmQ6cmdiYSg3OCwyMDgsMTM0LC43NSl9LmdhbnR0X3Jlc291cmNlX21hcmtlcl9v
			dmVydGltZXtiYWNrZ3JvdW5kOmhzbGEoMCwxMDAlLDc2JSwuNjkpfS5nYW50dF9oaXN0b2dyYW1f
			bGFiZWx7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjE7
			Zm9udC13ZWlnaHQ6NzAwO2ZvbnQtc2l6ZToxM3B4fS5nYW50dF9oaXN0b2dyYW1fZmlsbHtiYWNr
			Z3JvdW5kLWNvbG9yOnJnYmEoNDEsMTU3LDE4MCwuMik7d2lkdGg6MTAwJTtwb3NpdGlvbjphYnNv
			bHV0ZTtib3R0b206MH0uZ2FudHRfaGlzdG9ncmFtX2hvcl9iYXJ7aGVpZ2h0OjFweDttYXJnaW4t
			dG9wOi0xcHh9LmdhbnR0X2hpc3RvZ3JhbV9ob3JfYmFyLC5nYW50dF9oaXN0b2dyYW1fdmVydF9i
			YXJ7cG9zaXRpb246YWJzb2x1dGU7YmFja2dyb3VuZDojMjk5ZGI0O21hcmdpbi1sZWZ0Oi0xcHh9
			LmdhbnR0X2hpc3RvZ3JhbV92ZXJ0X2Jhcnt3aWR0aDoxcHh9LmdhbnR0X2hpc3RvZ3JhbV9jZWxs
			e3Bvc2l0aW9uOmFic29sdXRlO3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtc2l6ZToxM3B4O2NvbG9y
			OiMwMDB9LmdhbnR0X21hcmtlcntoZWlnaHQ6MTAwJTt3aWR0aDoycHg7dG9wOjA7cG9zaXRpb246
			YWJzb2x1dGU7dGV4dC1hbGlnbjpjZW50ZXI7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwwLDAs
			LjQpO2JveC1zaXppbmc6Ym9yZGVyLWJveH0uZ2FudHRfbWFya2VyIC5nYW50dF9tYXJrZXJfY29u
			dGVudHtwYWRkaW5nOjVweDtiYWNrZ3JvdW5kOmluaGVyaXQ7Y29sb3I6I2ZmZjtwb3NpdGlvbjph
			YnNvbHV0ZTtmb250LXNpemU6MTJweDtsaW5lLWhlaWdodDoxMnB4O29wYWNpdHk6Ljh9LmdhbnR0
			X21hcmtlcl9hcmVhe3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MH0uZ2FudHRfZ3JpZF9l
			ZGl0b3JfcGxhY2Vob2xkZXJ7cG9zaXRpb246YWJzb2x1dGV9LmdhbnR0X2dyaWRfZWRpdG9yX3Bs
			YWNlaG9sZGVyPmRpdiwuZ2FudHRfZ3JpZF9lZGl0b3JfcGxhY2Vob2xkZXIgaW5wdXQsLmdhbnR0
			X2dyaWRfZWRpdG9yX3BsYWNlaG9sZGVyIHNlbGVjdHt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2Jv
			eC1zaXppbmc6Ym9yZGVyLWJveH0uZ2FudHRfcm93X3BsYWNlaG9sZGVyIGRpdntvcGFjaXR5Oi41
			fS5nYW50dF9yb3dfcGxhY2Vob2xkZXIgLmdhbnR0X2FkZCwuZ2FudHRfcm93X3BsYWNlaG9sZGVy
			IC5nYW50dF9maWxle2Rpc3BsYXk6bm9uZX0uZ2FudHRfZHJhZ19tYXJrZXIuZ2FudHRfZ3JpZF9k
			bmRfbWFya2Vye2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7dHJhbnNpdGlvbjphbGwgLjFz
			IGVhc2V9LmdhbnR0X2dyaWRfZG5kX21hcmtlcl9saW5le2hlaWdodDo0cHg7d2lkdGg6MTAwJTti
			YWNrZ3JvdW5kLWNvbG9yOiMzNDk4ZGJ9LmdhbnR0X2dyaWRfZG5kX21hcmtlcl9saW5lOmJlZm9y
			ZXtiYWNrZ3JvdW5kOiNmZmY7d2lkdGg6MTJweDtoZWlnaHQ6MTJweDtib3gtc2l6aW5nOmJvcmRl
			ci1ib3g7Ym9yZGVyOjNweCBzb2xpZCAjMzQ5OGRiO2JvcmRlci1yYWRpdXM6NnB4O2NvbnRlbnQ6
			IiI7bGluZS1oZWlnaHQ6MXB4O2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7bWFyZ2lu
			LWxlZnQ6LTExcHg7bWFyZ2luLXRvcDotNHB4O3BvaW50ZXItZXZlbnRzOm5vbmV9LmdhbnR0X2dy
			aWRfZG5kX21hcmtlcl9mb2xkZXJ7aGVpZ2h0OjEwMCU7d2lkdGg6MTAwJTtwb3NpdGlvbjphYnNv
			bHV0ZTtwb2ludGVyLWV2ZW50czpub25lO2JveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2hhZG93
			Omluc2V0IDAgMCAwIDJweCAjM2Y5OGRiO2JhY2tncm91bmQ6dHJhbnNwYXJlbnR9LmdhbnR0X292
			ZXJsYXlfYXJlYXtkaXNwbGF5Om5vbmV9LmdhbnR0X292ZXJsYXksLmdhbnR0X292ZXJsYXlfYXJl
			YXtwb3NpdGlvbjphYnNvbHV0ZTtoZWlnaHQ6aW5oZXJpdDt3aWR0aDppbmhlcml0O3RvcDowO2xl
			ZnQ6MH0uZ2FudHRfY2xpY2tfZHJhZ19yZWN0e3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6
			MDtvdXRsaW5lOjFweCBzb2xpZCAjM2Y5OGRiO2JhY2tncm91bmQtY29sb3I6cmdiYSg1MiwxNTIs
			MjE5LC4zKX0uZ2FudHRfbGF5b3V0X2NvbnRlbnR7d2lkdGg6MTAwJTtvdmVyZmxvdzphdXRvO2Jv
			eC1zaXppbmc6Ym9yZGVyLWJveH0uZ2FudHRfbGF5b3V0X2NlbGx7cG9zaXRpb246cmVsYXRpdmU7
			Ym94LXNpemluZzpib3JkZXItYm94fS5nYW50dF9sYXlvdXRfY2VsbD4uZ2FudHRfbGF5b3V0X2hl
			YWRlcntiYWNrZ3JvdW5kOiMzM2FhZTg7Y29sb3I6I2ZmZjtmb250LXNpemU6MTdweDtwYWRkaW5n
			OjVweCAxMHB4O2JveC1zaXppbmc6Ym9yZGVyLWJveH0uZ2FudHRfbGF5b3V0X2hlYWRlci5jb2xs
			YXBzZWRfeHtiYWNrZ3JvdW5kOiNhOWE5YTl9LmdhbnR0X2xheW91dF9oZWFkZXIuY29sbGFwc2Vk
			X3ggLmdhbnR0X2hlYWRlcl9hcnJvdzpiZWZvcmV7Y29udGVudDoiXDIxRTcifS5nYW50dF9sYXlv
			dXRfaGVhZGVyLmNvbGxhcHNlZF95e2JhY2tncm91bmQ6I2E5YTlhOX0uZ2FudHRfbGF5b3V0X2hl
			YWRlci5jb2xsYXBzZWRfeSAuZ2FudHRfaGVhZGVyX2Fycm93OmJlZm9yZXtjb250ZW50OiJcMjFF
			OSJ9LmdhbnR0X2xheW91dF9oZWFkZXJ7Y3Vyc29yOnBvaW50ZXJ9LmdhbnR0X2xheW91dF9oZWFk
			ZXIgLmdhbnR0X2hlYWRlcl9hcnJvd3tmbG9hdDpyaWdodDt0ZXh0LWFsaWduOnJpZ2h0fS5nYW50
			dF9sYXlvdXRfaGVhZGVyIC5nYW50dF9oZWFkZXJfYXJyb3c6YmVmb3Jle2NvbnRlbnQ6IlwyMUU2
			In0uZ2FudHRfbGF5b3V0X2hlYWRlci52ZXJ0aWNhbCAuZ2FudHRfaGVhZGVyX2Fycm93OmJlZm9y
			ZXtjb250ZW50OiJcMjFFNyJ9LmdhbnR0X2xheW91dF9vdXRlcl9zY3JvbGxfdmVydGljYWwgLmdh
			bnR0X2xheW91dF9jb250ZW50e292ZXJmbG93LXk6aGlkZGVufS5nYW50dF9sYXlvdXRfb3V0ZXJf
			c2Nyb2xsX2hvcml6b250YWwgLmdhbnR0X2xheW91dF9jb250ZW50e292ZXJmbG93LXg6aGlkZGVu
			fS5nYW50dF9sYXlvdXRfeD4uZ2FudHRfbGF5b3V0X2NlbGx7ZGlzcGxheTppbmxpbmUtYmxvY2s7
			dmVydGljYWwtYWxpZ246dG9wfS5nYW50dF9sYXlvdXRfeHt3aGl0ZS1zcGFjZTpub3dyYXB9Lmdh
			bnR0X3Jlc2l6aW5ne29wYWNpdHk6Ljc7YmFja2dyb3VuZDojZjJmMmYyfS5nYW50dF9sYXlvdXRf
			Y2VsbF9ib3JkZXJfcmlnaHQuZ2FudHRfcmVzaXplcntvdmVyZmxvdzp2aXNpYmxlO2JvcmRlci1y
			aWdodDowfS5nYW50dF9yZXNpemVye2N1cnNvcjplLXJlc2l6ZTtwb3NpdGlvbjpyZWxhdGl2ZX0u
			Z2FudHRfcmVzaXplcl95e2N1cnNvcjpuLXJlc2l6ZX0uZ2FudHRfcmVzaXplcl9zdGlja3tiYWNr
			Z3JvdW5kOiMzM2FhZTg7ei1pbmRleDo5OTk5O3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3dpZHRo
			OjEwMCV9LmdhbnR0X3Jlc2l6ZXJfeCAuZ2FudHRfcmVzaXplcl94e3Bvc2l0aW9uOmFic29sdXRl
			O3dpZHRoOjIwcHg7aGVpZ2h0OjEwMCU7bWFyZ2luLWxlZnQ6LTEwcHg7dG9wOjA7bGVmdDowO3ot
			aW5kZXg6MX0uZ2FudHRfcmVzaXplcl95IC5nYW50dF9yZXNpemVyX3l7cG9zaXRpb246YWJzb2x1
			dGU7aGVpZ2h0OjIwcHg7d2lkdGg6MTAwJTt0b3A6LTEwcHg7bGVmdDowO3otaW5kZXg6MX0uZ2Fu
			dHRfcmVzaXplcl9lcnJvcntiYWNrZ3JvdW5kOiNjZDVjNWMhaW1wb3J0YW50fS5nYW50dF9sYXlv
			dXRfY2VsbF9ib3JkZXJfbGVmdHtib3JkZXItbGVmdDoxcHggc29saWQgI2NlY2VjZX0uZ2FudHRf
			bGF5b3V0X2NlbGxfYm9yZGVyX3JpZ2h0e2JvcmRlci1yaWdodDoxcHggc29saWQgI2NlY2VjZX0u
			Z2FudHRfbGF5b3V0X2NlbGxfYm9yZGVyX3RvcHtib3JkZXItdG9wOjFweCBzb2xpZCAjY2VjZWNl
			fS5nYW50dF9sYXlvdXRfY2VsbF9ib3JkZXJfYm90dG9te2JvcmRlci1ib3R0b206MXB4IHNvbGlk
			ICNjZWNlY2V9LmdhbnR0X2xheW91dF9jZWxsX2JvcmRlcl90cmFuc3BhcmVudHtib3JkZXItY29s
			b3I6dHJhbnNwYXJlbnR9LmdhbnR0X3dpbmRvd3twb3NpdGlvbjphYnNvbHV0ZTt0b3A6NTAlO2xl
			ZnQ6NTAlO3otaW5kZXg6OTk5OTk5OTk5O2JhY2tncm91bmQ6I2ZmZn0uZ2FudHRfd2luZG93X2Nv
			bnRlbnR7cG9zaXRpb246cmVsYXRpdmV9LmdhbnR0X3dpbmRvd19jb250ZW50X2hlYWRlcntiYWNr
			Z3JvdW5kOiMzOWM7Y29sb3I6I2ZmZjtoZWlnaHQ6MzNweDtwYWRkaW5nOjEwcHggMTBweCAwO2Jv
			cmRlci1ib3R0b206MnB4IHNvbGlkICNmZmY7cG9zaXRpb246cmVsYXRpdmV9LmdhbnR0X3dpbmRv
			d19jb250ZW50X2hlYWRlcl90ZXh0e3BhZGRpbmctbGVmdDoxMCV9LmdhbnR0X3dpbmRvd19jb250
			ZW50X2hlYWRlcl9idXR0b25ze3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxMHB4O3JpZ2h0OjEwcHh9
			LmdhbnR0X3dpbmRvd19jb250ZW50X2hlYWRlcl9idXR0b25zOmhvdmVye2NvbG9yOiMwMDA7Y3Vy
			c29yOnBvaW50ZXJ9LmdhbnR0X3dpbmRvd19jb250ZW50X3Jlc2l6ZXJ7cG9zaXRpb246YWJzb2x1
			dGU7d2lkdGg6MTVweDtoZWlnaHQ6MTVweDtib3R0b206MDtsaW5lLWhlaWdodDoxNXB4O3JpZ2h0
			Oi0xcHg7dGV4dC1hbGlnbjpjZW50ZXI7YmFja2dyb3VuZC1pbWFnZTp1cmwoZGF0YTppbWFnZS9w
			bmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFBOEFBQUFQQ0FNQUFBQU1DR1Y0QUFB
			QUJsQk1WRVVBQUFBQUFBQ2xaN25QQUFBQUFYUlNUbE1BUU9iWVpnQUFBQlpKUkVGVWVBRmpJQVV3
			VXNobHBKRExTSWhMR0FBQUNRNEFGazc5SmFNQUFBQUFTVVZPUks1Q1lJST0pO2N1cnNvcjpudy1y
			ZXNpemU7ei1pbmRleDo5OTl9LmdhbnR0X3dpbmRvd19jb250ZW50X2ZyYW1le3Bvc2l0aW9uOmFi
			c29sdXRlO3RvcDowO2xlZnQ6MDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2JhY2tncm91bmQ6cmdi
			YSgwLDAsMCwuMSk7ei1pbmRleDo5OTk5fS5nYW50dF93aW5kb3dfZHJhZ3tjdXJzb3I6cG9pbnRl
			ciFpbXBvcnRhbnR9LmdhbnR0X3dpbmRvd19yZXNpemluZ3tvdmVyZmxvdzp2aXNpYmxlfS5nYW50
			dF93aW5kb3dfcmVzaXppbmdfYm9keXtvdmVyZmxvdzpoaWRkZW4haW1wb3J0YW50fS5nYW50dF93
			aW5kb3dfbW9kYWx7YmFja2dyb3VuZDpyZ2JhKDAsMCwwLC4xKTt6LWluZGV4Ojk5OTk7dG9wOjA7
			bGVmdDowO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7cG9zaXRpb246Zml4ZWR9LmdhbnR0X2NhbF9s
			aWdodCwuZ2FudHRfY2FsX3F1aWNrX2luZm8sLmdhbnR0X2NvbnRhaW5lciwuZ2FudHRfbWVzc2Fn
			ZV9hcmVhLC5nYW50dF9tb2RhbF9ib3gsLmdhbnR0X3Rvb2x0aXB7dGV4dC1yZW5kZXJpbmc6b3B0
			aW1pemVMZWdpYmlsaXR5Oy13ZWJraXQtZm9udC1zbW9vdGhpbmc6YW50aWFsaWFzZWQ7LW1vei1v
			c3gtZm9udC1zbW9vdGhpbmc6Z3JheXNjYWxlfS5nYW50dF9ub3NlbGVjdHstbW96LXVzZXItc2Vs
			ZWN0Oi1tb3otbm9uZTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5v
			bmU7dXNlci1zZWxlY3Q6bm9uZX0uZ2FudHRfZHJhZ19tYXJrZXJ7cG9zaXRpb246YWJzb2x1dGU7
			dG9wOi0xMDAwcHg7bGVmdDotMTAwMHB4O2ZvbnQtZmFtaWx5OkFyaWFsO2ZvbnQtc2l6ZToxM3B4
			fS5nYW50dF9kcmFnX21hcmtlciAuZ2FudHRfdHJlZV9pY29uLmdhbnR0X2JsYW5rLC5nYW50dF9k
			cmFnX21hcmtlciAuZ2FudHRfdHJlZV9pY29uLmdhbnR0X2Nsb3NlLC5nYW50dF9kcmFnX21hcmtl
			ciAuZ2FudHRfdHJlZV9pY29uLmdhbnR0X29wZW4sLmdhbnR0X2RyYWdfbWFya2VyIC5nYW50dF90
			cmVlX2luZGVudHtkaXNwbGF5Om5vbmV9LmdhbnR0X2RyYWdfbWFya2VyLC5nYW50dF9kcmFnX21h
			cmtlciAuZ2FudHRfcm93Lm9kZHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmdhbnR0X2RyYWdfbWFy
			a2VyIC5nYW50dF9yb3d7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNkMmQyZDI7Ym9yZGVyLXRvcDox
			cHggc29saWQgI2QyZDJkMn0uZ2FudHRfZHJhZ19tYXJrZXIgLmdhbnR0X2NlbGx7Ym9yZGVyLWNv
			bG9yOiNkMmQyZDJ9LmdhbnR0X3Jvdy5nYW50dF9vdmVyLC5nYW50dF90YXNrX3Jvdy5nYW50dF9v
			dmVye2JhY2tncm91bmQtY29sb3I6IzAwNzBmZX0uZ2FudHRfcm93LmdhbnR0X3RyYW5zcGFyZW50
			IC5nYW50dF9jZWxse29wYWNpdHk6Ljd9LmdhbnR0X3Rhc2tfcm93LmdhbnR0X3RyYW5zcGFyZW50
			e2JhY2tncm91bmQtY29sb3I6I2Y4ZmRmZH0uZ2FudHRfcG9wdXBfYnV0dG9uLmdhbnR0X2RlbGV0
			ZV9idXR0b257YmFja2dyb3VuZDojM2RiOWQzO3RleHQtc2hhZG93OjAgLTFweCAwICMyNDhhOWY7
			Y29sb3I6I2ZmZjtmb250LXdlaWdodDo3MDA7Ym9yZGVyLXdpZHRoOjB9LmdhbnR0X2NvbnRhaW5l
			cl9yZXNpemVfd2F0Y2hlcntiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O3dpZHRoOjEwMCU7aGVpZ2h0
			OjEwMCU7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO3otaW5kZXg6LTE7cG9pbnRlci1l
			dmVudHM6bm9uZTtib3JkZXI6MDtib3gtc2l6aW5nOmJvcmRlci1ib3g7b3BhY2l0eTowfQ==
		</Resource>
	</Resources>
	<SourceCode>
<![CDATA[class VDOM_gantt(VDOM_object):
    def render(self, contents=""):
        WOID = (self.id).replace('-', '_')
        ID = 'o_' + WOID

        DEBUG_INFO = {
          "objname": self.name,
          "objtype": "gantt",
          "js_lib": "dhtmlx gantt",
          "id": ID,
          "version": self.type.version
        }
        DEBUG_INFO_STRING = " ".join([str(key)+"='"+str(value)+"'" for key, value in DEBUG_INFO.items()])

        DISPLAY = lambda v: "none" if v == "0" else None
        SIZE_CONVERT = lambda v: str(v) + "px"
        STYLES = {
            "display": DISPLAY(self.visible),
            "position": self.positioning1,
            "z-index": self.zindex,
            "top": SIZE_CONVERT(self.top),
            "left": SIZE_CONVERT(self.left),
            "width": SIZE_CONVERT(self.width),
            "height": SIZE_CONVERT(self.height),
        }
        STYLES_STRING_FORMAT = ";".join([str(key)+":"+str(value) for key, value in STYLES.items() if value])

        STYLES_STRING = """
        <style>
          .%(id)s { %(styles)s }

          .%(id)s .week_end { background-color: #%(highlight_weekend)s; }
        </style>""" % {
          "id":ID, 
          "styles": STYLES_STRING_FORMAT, 
          "highlight_weekend": self.highlightweekend 
        }

        INIT_SCRIPT = """
          <script data-meta='init script'>
            window.gantt_%(id)s = null;
            $(document).ready(() => {
              gantt_%(id)s = Gantt.getGanttInstance();

              gantt_%(id)s.plugins({
                marker: true
              });

              if (%(show_today_marker)s) {
                const todayMarkerLabelFormat = gantt_%(id)s.date.date_to_str(gantt_%(id)s.config.task_date);
                gantt_%(id)s.addMarker({
                    id: 'today',
                    start_date: new Date(),
                    css: "today",
                    title: todayMarkerLabelFormat(new Date())
                });

                //Auto update today marker
                setInterval(function() {
                    const today = gantt_%(id)s.getMarker('today');
                    today.start_date = new Date();
                    today.title = todayMarkerLabelFormat(today.start_date);
                    gantt_%(id)s.updateMarker('today');
                }, 1000*60);
              }

              gantt_%(id)s.config.start_date = new Date("%(start_date)s");
              gantt_%(id)s.config.end_date = new Date("%(end_date)s");


              gantt_%(id)s.config.duration_unit = "%(duration_unit)s";
              gantt_%(id)s.config.duration_step = %(duration_step)s;


              gantt_%(id)s.config.round_dnd_dates = %(round_dnd_dates)s;


              gantt_%(id)s.config.min_column_width = %(min_column_width)s;


              gantt_%(id)s.ext.zoom.init(%(zoom_config)s);


              gantt_%(id)s.config.work_time = %(work_time)s;
              gantt_%(id)s.config.correct_work_time = %(correct_work_time)s;


              const weekEndClassCalculation = (date) => {
                if(!gantt_%(id)s.isWorkTime({date, unit: 'day'})) {
                  return "week_end";
                }
              };
              gantt_%(id)s.templates.timeline_cell_class = (task, date) => weekEndClassCalculation(date);
              gantt_%(id)s.templates.scale_cell_class = weekEndClassCalculation;


              gantt_%(id)s.config.columns = %(columns)s;


              gantt_%(id)s.init("gantt_%(id)s");


              //----E2VDOM----
              const E2VDOMIdFormat = (id) => id.slice(2);

              gantt_%(id)s.attachEvent("onAfterTaskUpdate", function(id, item) {
                execEventBinded(E2VDOMIdFormat('%(id)s'), 'onAfterTaskUpdate', {id: id, value: JSON.stringify(item)});
              });

              gantt_%(id)s.attachEvent("onTaskClick", function(id, e) {
                  const task = gantt_%(id)s.getTask(id);
                  execEventBinded(E2VDOMIdFormat('%(id)s'), 'onTaskClick', {id: id, value: JSON.stringify(task)});
                  return true;
              });

              gantt_%(id)s.attachEvent("onTaskDblClick", function(id, e) {
                  const task = gantt_%(id)s.getTask(id);
                  execEventBinded(E2VDOMIdFormat('%(id)s'), 'onTaskDblClick', {id: id, value: JSON.stringify(task)});
                  return %(show_lightbox)s;
              });

              gantt_%(id)s.attachEvent("onAfterTaskDelete", function(id,item){
                  execEventBinded(E2VDOMIdFormat('%(id)s'), 'onAfterTaskDelete', {id: id, value: JSON.stringify(item)});
              });
            })
          </script>
        """ % {
          "id": ID,
          "start_date": self.startdate,
          "end_date": self.enddate,
          "columns": self.columns,
          "duration_unit": self.durationunit,
          "duration_step": self.durationstep,
          "round_dnd_dates": self.rounddnddates,
          "work_time": self.worktime,
          "correct_work_time": self.correctworktime,
          "min_column_width": self.mincolumnwidth,
          "zoom_config": self.zoom,
          "show_lightbox": self.showlightbox,
          "show_today_marker": self.showtodaymarker
        }

        SET_DATA_SCRIPT = """<script>$(document).ready(()=>{gantt_%(id)s.parse(`%(data)s`);})</script>""" % { "id": ID, "data": self.data }

        TYPE_WRAPPER = """<div {debug_string} class='{id} {classname}'>{content}</div>"""

        TYPE_HTML = """<div id="gantt_{id}" style='width:100%; height:100%;'></div>""".format(id=ID)

        SCRIPTS = """{}{}""".format(INIT_SCRIPT, SET_DATA_SCRIPT)

        CONTENT = """{}{}{}""".format(STYLES_STRING, TYPE_HTML, SCRIPTS)

        RESULT = TYPE_WRAPPER.format(
          debug_string=DEBUG_INFO_STRING,
          classname=self.classname,
          id=ID,
          content=CONTENT
        )

        return VDOM_object.render(self, contents=RESULT)

    def wysiwyg(self, contents=""):
        from scripting.legacy.wysiwyg import get_empty_wysiwyg_value

        image_id = "32dda2ed-1356-4297-8c4b-371919c9c0c5"
        result = get_empty_wysiwyg_value(self, image_id)

        return VDOM_object.wysiwyg(self, contents=result)]]>
	</SourceCode>
	<Libraries>
		<Library Target="html"><![CDATA[<script type="text/javascript" src="/d33d62b0-81cb-3424-6214-3ce5fcfadac6.js"></script>]]></Library>
		<Library Target="html"><![CDATA[<link rel="stylesheet" type="text/css" href="/ec8cf865-3e9b-fde2-a67f-3ce5b21f1caf.css" />]]></Library>
	</Libraries>
	<E2VDOM>
		<Events>
			<UserInterfaceEvents>
				<Event Name="onTaskDblClick" Description="#Lang(401)">
					<Parameters>
						<Parameter Name="id" Description="#Lang(401)" Order="0"/>
						<Parameter Name="value" Description="#Lang(401)" Order="1"/>
					</Parameters>
				</Event>
				<Event Name="onTaskClick" Description="#Lang(401)">
					<Parameters>
						<Parameter Name="id" Description="#Lang(401)" Order="0"/>
						<Parameter Name="value" Description="#Lang(401)" Order="1"/>
					</Parameters>
				</Event>
				<Event Name="onAfterTaskDelete" Description="#Lang(401)">
					<Parameters>
						<Parameter Name="id" Description="#Lang(401)" Order="0"/>
						<Parameter Name="value" Description="#Lang(401)" Order="1"/>
					</Parameters>
				</Event>
				<Event Name="dblclick" Description="#Lang(516)">
					<Parameters>
						<Parameter Name="id" Description="#Lang(907)" Order="0"/>
						<Parameter Name="value" Description="#Lang(908)" Order="0"/>
					</Parameters>
				</Event>
				<Event Name="onAfterTaskUpdate" Description="#Lang(401)">
					<Parameters>
						<Parameter Name="id" Description="#Lang(401)" Order="0"/>
						<Parameter Name="value" Description="#Lang(401)" Order="1"/>
					</Parameters>
				</Event>
			</UserInterfaceEvents>
		</Events>
		<Actions>
			<Container ID="2330fe83-8cd6-4ed5-907d-11874e7ebcf4">
				<Action Name="hide" DisplayName="#Lang(604)" Description="#Lang(504)">
					<Parameters>
						<Parameter Name="fade" DisplayName="#Lang(704)" Description="#Lang(804)" DefaultValue="0" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[vdom_ui_hide(this.domCont, fade);]]></SourceCode>
				</Action>
				<Action Name="show" DisplayName="#Lang(612)" Description="#Lang(512)">
					<Parameters>
						<Parameter Name="fade" DisplayName="#Lang(713)" Description="#Lang(813)" DefaultValue="0" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[vdom_ui_show(this.domCont, fade);window[`gantt_${this.name}`].render()]]></SourceCode>
				</Action>
				<Action Name="removeClass" DisplayName="#Lang(606)" Description="#Lang(506)">
					<Parameters>
						<Parameter Name="className" DisplayName="#Lang(708)" Description="#Lang(808)" DefaultValue="" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[$q(this.domCont).removeClass(className);]]></SourceCode>
				</Action>
				<Action Name="addClass" DisplayName="#Lang(601)" Description="#Lang(501)">
					<Parameters>
						<Parameter Name="className" DisplayName="#Lang(701)" Description="#Lang(801)" DefaultValue="" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[$q(this.domCont).addClass(className);]]></SourceCode>
				</Action>
				<Action Name="setData" DisplayName="#Lang(608)" Description="#Lang(000)">
					<Parameters>
						<Parameter Name="data" DisplayName="#Lang(711)" Description="#Lang(401)" DefaultValue="" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[window[`gantt_${this.name}`].parse(data);console.log('he')]]></SourceCode>
				</Action>
				<Action Name="setStyle" DisplayName="#Lang(611)" Description="#Lang(511)">
					<Parameters>
						<Parameter Name="cssStyleValue" DisplayName="#Lang(712)" Description="#Lang(812)" DefaultValue="" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[var t=$q(this.domCont);t.attr('style', t.attr('style') + ';' + cssStyleValue);]]>
					</SourceCode>
				</Action>
				<Action Name="setDateRange" DisplayName="#Lang(929)" Description="#Lang(401)">
					<Parameters>
						<Parameter Name="startDate" DisplayName="#Lang(927)" Description="#Lang(401)" DefaultValue="&apos;2020-01-01&apos;" RegularExpressionValidation=".*" Interface="" />
						<Parameter Name="endDate" DisplayName="#Lang(928)" Description="#Lang(401)" DefaultValue="&apos;2020-01-05&apos;" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode>
						<![CDATA[
							window[`gantt_${this.name}`].config.start_date = new Date(startDate);
							window[`gantt_${this.name}`].config.end_date = new Date(endDate);
							window[`gantt_${this.name}`].render();
						]]>
					</SourceCode>
				</Action>
				<Action Name="setConfig" DisplayName="#Lang(944)" Description="#Lang(401)">
					<Parameters>
						<Parameter Name="config" DisplayName="#Lang(945)" Description="#Lang(401)" DefaultValue="" RegularExpressionValidation=".*" Interface="" />
						<Parameter Name="value" DisplayName="#Lang(946)" Description="#Lang(401)" DefaultValue="" RegularExpressionValidation=".*" Interface="" />
					</Parameters>
					<SourceCode><![CDATA[window[`gantt_${this.name}`].config[config] = value;]]></SourceCode>
				</Action>
				<Action Name="setClass" DisplayName="#Lang(607)" Description="#Lang(507)">
					<Parameters>
						<Parameter Name="className" DisplayName="#Lang(709)" Description="#Lang(809)" DefaultValue="" RegularExpressionValidation=".*" Interface="setClass" />
					</Parameters>
					<SourceCode><![CDATA[$q(this.domCont).attr('class',className);]]></SourceCode>
				</Action>
				<Action Name="zoomIn" DisplayName="#Lang(949)" Description="#Lang(401)">
					<SourceCode><![CDATA[window[`gantt_${this.name}`].ext.zoom.zoomIn()]]></SourceCode>
				</Action>
				<Action Name="zoomOut" DisplayName="#Lang(950)" Description="#Lang(401)">
					<SourceCode><![CDATA[window[`gantt_${this.name}`].ext.zoom.zoomOut()]]></SourceCode>
				</Action>
			</Container>
		</Actions>
	</E2VDOM>
</Type>
